/*! For license information please see app.js.LICENSE.txt */
(()=>{var e,E={299:(e,E,t)=>{"use strict";var T={};t.r(T),t.d(T,{bigquery:()=>Ji,db2:()=>sA,hive:()=>NA,mariadb:()=>PA,mysql:()=>yA,n1ql:()=>xA,plsql:()=>qA,postgresql:()=>sa,redshift:()=>Na,singlestoredb:()=>No,snowflake:()=>Po,spark:()=>Pa,sql:()=>xa,sqlite:()=>ya,transactsql:()=>so,trino:()=>qa});var r=Object.freeze({}),n=Array.isArray;function s(e){return null==e}function R(e){return null!=e}function i(e){return!0===e}function A(e){return"string"==typeof e||"number"==typeof e||"symbol"==typeof e||"boolean"==typeof e}function a(e){return"function"==typeof e}function o(e){return null!==e&&"object"==typeof e}var S=Object.prototype.toString;function I(e){return"[object Object]"===S.call(e)}function O(e){return"[object RegExp]"===S.call(e)}function N(e){var E=parseFloat(String(e));return E>=0&&Math.floor(E)===E&&isFinite(e)}function L(e){return R(e)&&"function"==typeof e.then&&"function"==typeof e.catch}function _(e){return null==e?"":Array.isArray(e)||I(e)&&e.toString===S?JSON.stringify(e,null,2):String(e)}function C(e){var E=parseFloat(e);return isNaN(E)?e:E}function l(e,E){for(var t=Object.create(null),T=e.split(","),r=0;r<T.length;r++)t[T[r]]=!0;return E?function(e){return t[e.toLowerCase()]}:function(e){return t[e]}}var c=l("slot,component",!0),u=l("key,ref,slot,slot-scope,is");function p(e,E){var t=e.length;if(t){if(E===e[t-1])return void(e.length=t-1);var T=e.indexOf(E);if(T>-1)return e.splice(T,1)}}var D=Object.prototype.hasOwnProperty;function P(e,E){return D.call(e,E)}function d(e){var E=Object.create(null);return function(t){return E[t]||(E[t]=e(t))}}var f=/-(\w)/g,M=d((function(e){return e.replace(f,(function(e,E){return E?E.toUpperCase():""}))})),U=d((function(e){return e.charAt(0).toUpperCase()+e.slice(1)})),h=/\B([A-Z])/g,v=d((function(e){return e.replace(h,"-$1").toLowerCase()}));var m=Function.prototype.bind?function(e,E){return e.bind(E)}:function(e,E){function t(t){var T=arguments.length;return T?T>1?e.apply(E,arguments):e.call(E,t):e.call(E)}return t._length=e.length,t};function G(e,E){E=E||0;for(var t=e.length-E,T=new Array(t);t--;)T[t]=e[t+E];return T}function y(e,E){for(var t in E)e[t]=E[t];return e}function H(e){for(var E={},t=0;t<e.length;t++)e[t]&&y(E,e[t]);return E}function g(e,E,t){}var B=function(e,E,t){return!1},F=function(e){return e};function Y(e,E){if(e===E)return!0;var t=o(e),T=o(E);if(!t||!T)return!t&&!T&&String(e)===String(E);try{var r=Array.isArray(e),n=Array.isArray(E);if(r&&n)return e.length===E.length&&e.every((function(e,t){return Y(e,E[t])}));if(e instanceof Date&&E instanceof Date)return e.getTime()===E.getTime();if(r||n)return!1;var s=Object.keys(e),R=Object.keys(E);return s.length===R.length&&s.every((function(t){return Y(e[t],E[t])}))}catch(e){return!1}}function b(e,E){for(var t=0;t<e.length;t++)if(Y(e[t],E))return t;return-1}function V(e){var E=!1;return function(){E||(E=!0,e.apply(this,arguments))}}function W(e,E){return e===E?0===e&&1/e!=1/E:e==e||E==E}var x="data-server-rendered",Q=["component","directive","filter"],X=["beforeCreate","created","beforeMount","mounted","beforeUpdate","updated","beforeDestroy","destroyed","activated","deactivated","errorCaptured","serverPrefetch","renderTracked","renderTriggered"],w={optionMergeStrategies:Object.create(null),silent:!1,productionTip:!1,devtools:!1,performance:!1,errorHandler:null,warnHandler:null,ignoredElements:[],keyCodes:Object.create(null),isReservedTag:B,isReservedAttr:B,isUnknownElement:B,getTagNamespace:g,parsePlatformTagName:F,mustUseProp:B,async:!0,_lifecycleHooks:X},K=/a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;function $(e){var E=(e+"").charCodeAt(0);return 36===E||95===E}function k(e,E,t,T){Object.defineProperty(e,E,{value:t,enumerable:!!T,writable:!0,configurable:!0})}var J=new RegExp("[^".concat(K.source,".$_\\d]"));var Z="__proto__"in{},q="undefined"!=typeof window,j=q&&window.navigator.userAgent.toLowerCase(),z=j&&/msie|trident/.test(j),ee=j&&j.indexOf("msie 9.0")>0,Ee=j&&j.indexOf("edge/")>0;j&&j.indexOf("android");var te=j&&/iphone|ipad|ipod|ios/.test(j);j&&/chrome\/\d+/.test(j),j&&/phantomjs/.test(j);var Te,re=j&&j.match(/firefox\/(\d+)/),ne={}.watch,se=!1;if(q)try{var Re={};Object.defineProperty(Re,"passive",{get:function(){se=!0}}),window.addEventListener("test-passive",null,Re)}catch(e){}var ie=function(){return void 0===Te&&(Te=!q&&void 0!==t.g&&(t.g.process&&"server"===t.g.process.env.VUE_ENV)),Te},Ae=q&&window.__VUE_DEVTOOLS_GLOBAL_HOOK__;function ae(e){return"function"==typeof e&&/native code/.test(e.toString())}var oe,Se="undefined"!=typeof Symbol&&ae(Symbol)&&"undefined"!=typeof Reflect&&ae(Reflect.ownKeys);oe="undefined"!=typeof Set&&ae(Set)?Set:function(){function e(){this.set=Object.create(null)}return e.prototype.has=function(e){return!0===this.set[e]},e.prototype.add=function(e){this.set[e]=!0},e.prototype.clear=function(){this.set=Object.create(null)},e}();var Ie=null;function Oe(e){void 0===e&&(e=null),e||Ie&&Ie._scope.off(),Ie=e,e&&e._scope.on()}var Ne=function(){function e(e,E,t,T,r,n,s,R){this.tag=e,this.data=E,this.children=t,this.text=T,this.elm=r,this.ns=void 0,this.context=n,this.fnContext=void 0,this.fnOptions=void 0,this.fnScopeId=void 0,this.key=E&&E.key,this.componentOptions=s,this.componentInstance=void 0,this.parent=void 0,this.raw=!1,this.isStatic=!1,this.isRootInsert=!0,this.isComment=!1,this.isCloned=!1,this.isOnce=!1,this.asyncFactory=R,this.asyncMeta=void 0,this.isAsyncPlaceholder=!1}return Object.defineProperty(e.prototype,"child",{get:function(){return this.componentInstance},enumerable:!1,configurable:!0}),e}(),Le=function(e){void 0===e&&(e="");var E=new Ne;return E.text=e,E.isComment=!0,E};function _e(e){return new Ne(void 0,void 0,void 0,String(e))}function Ce(e){var E=new Ne(e.tag,e.data,e.children&&e.children.slice(),e.text,e.elm,e.context,e.componentOptions,e.asyncFactory);return E.ns=e.ns,E.isStatic=e.isStatic,E.key=e.key,E.isComment=e.isComment,E.fnContext=e.fnContext,E.fnOptions=e.fnOptions,E.fnScopeId=e.fnScopeId,E.asyncMeta=e.asyncMeta,E.isCloned=!0,E}var le=0,ce=[],ue=function(){function e(){this._pending=!1,this.id=le++,this.subs=[]}return e.prototype.addSub=function(e){this.subs.push(e)},e.prototype.removeSub=function(e){this.subs[this.subs.indexOf(e)]=null,this._pending||(this._pending=!0,ce.push(this))},e.prototype.depend=function(E){e.target&&e.target.addDep(this)},e.prototype.notify=function(e){var E=this.subs.filter((function(e){return e}));for(var t=0,T=E.length;t<T;t++){0,E[t].update()}},e}();ue.target=null;var pe=[];function De(e){pe.push(e),ue.target=e}function Pe(){pe.pop(),ue.target=pe[pe.length-1]}var de=Array.prototype,fe=Object.create(de);["push","pop","shift","unshift","splice","sort","reverse"].forEach((function(e){var E=de[e];k(fe,e,(function(){for(var t=[],T=0;T<arguments.length;T++)t[T]=arguments[T];var r,n=E.apply(this,t),s=this.__ob__;switch(e){case"push":case"unshift":r=t;break;case"splice":r=t.slice(2)}return r&&s.observeArray(r),s.dep.notify(),n}))}));var Me=Object.getOwnPropertyNames(fe),Ue={},he=!0;function ve(e){he=e}var me={notify:g,depend:g,addSub:g,removeSub:g},Ge=function(){function e(e,E,t){if(void 0===E&&(E=!1),void 0===t&&(t=!1),this.value=e,this.shallow=E,this.mock=t,this.dep=t?me:new ue,this.vmCount=0,k(e,"__ob__",this),n(e)){if(!t)if(Z)e.__proto__=fe;else for(var T=0,r=Me.length;T<r;T++){k(e,R=Me[T],fe[R])}E||this.observeArray(e)}else{var s=Object.keys(e);for(T=0;T<s.length;T++){var R;He(e,R=s[T],Ue,void 0,E,t)}}}return e.prototype.observeArray=function(e){for(var E=0,t=e.length;E<t;E++)ye(e[E],!1,this.mock)},e}();function ye(e,E,t){return e&&P(e,"__ob__")&&e.__ob__ instanceof Ge?e.__ob__:!he||!t&&ie()||!n(e)&&!I(e)||!Object.isExtensible(e)||e.__v_skip||We(e)||e instanceof Ne?void 0:new Ge(e,E,t)}function He(e,E,t,T,r,s){var R=new ue,i=Object.getOwnPropertyDescriptor(e,E);if(!i||!1!==i.configurable){var A=i&&i.get,a=i&&i.set;A&&!a||t!==Ue&&2!==arguments.length||(t=e[E]);var o=!r&&ye(t,!1,s);return Object.defineProperty(e,E,{enumerable:!0,configurable:!0,get:function(){var E=A?A.call(e):t;return ue.target&&(R.depend(),o&&(o.dep.depend(),n(E)&&Fe(E))),We(E)&&!r?E.value:E},set:function(E){var T=A?A.call(e):t;if(W(T,E)){if(a)a.call(e,E);else{if(A)return;if(!r&&We(T)&&!We(E))return void(T.value=E);t=E}o=!r&&ye(E,!1,s),R.notify()}}}),R}}function ge(e,E,t){if(!Ve(e)){var T=e.__ob__;return n(e)&&N(E)?(e.length=Math.max(e.length,E),e.splice(E,1,t),T&&!T.shallow&&T.mock&&ye(t,!1,!0),t):E in e&&!(E in Object.prototype)?(e[E]=t,t):e._isVue||T&&T.vmCount?t:T?(He(T.value,E,t,void 0,T.shallow,T.mock),T.dep.notify(),t):(e[E]=t,t)}}function Be(e,E){if(n(e)&&N(E))e.splice(E,1);else{var t=e.__ob__;e._isVue||t&&t.vmCount||Ve(e)||P(e,E)&&(delete e[E],t&&t.dep.notify())}}function Fe(e){for(var E=void 0,t=0,T=e.length;t<T;t++)(E=e[t])&&E.__ob__&&E.__ob__.dep.depend(),n(E)&&Fe(E)}function Ye(e){return be(e,!0),k(e,"__v_isShallow",!0),e}function be(e,E){if(!Ve(e)){ye(e,E,ie());0}}function Ve(e){return!(!e||!e.__v_isReadonly)}function We(e){return!(!e||!0!==e.__v_isRef)}function xe(e,E,t){Object.defineProperty(e,t,{enumerable:!0,configurable:!0,get:function(){var e=E[t];if(We(e))return e.value;var T=e&&e.__ob__;return T&&T.dep.depend(),e},set:function(e){var T=E[t];We(T)&&!We(e)?T.value=e:E[t]=e}})}var Qe=d((function(e){var E="&"===e.charAt(0),t="~"===(e=E?e.slice(1):e).charAt(0),T="!"===(e=t?e.slice(1):e).charAt(0);return{name:e=T?e.slice(1):e,once:t,capture:T,passive:E}}));function Xe(e,E){function t(){var e=t.fns;if(!n(e))return Et(e,null,arguments,E,"v-on handler");for(var T=e.slice(),r=0;r<T.length;r++)Et(T[r],null,arguments,E,"v-on handler")}return t.fns=e,t}function we(e,E,t,T,r,n){var R,A,a,o;for(R in e)A=e[R],a=E[R],o=Qe(R),s(A)||(s(a)?(s(A.fns)&&(A=e[R]=Xe(A,n)),i(o.once)&&(A=e[R]=r(o.name,A,o.capture)),t(o.name,A,o.capture,o.passive,o.params)):A!==a&&(a.fns=A,e[R]=a));for(R in E)s(e[R])&&T((o=Qe(R)).name,E[R],o.capture)}function Ke(e,E,t){var T;e instanceof Ne&&(e=e.data.hook||(e.data.hook={}));var r=e[E];function n(){t.apply(this,arguments),p(T.fns,n)}s(r)?T=Xe([n]):R(r.fns)&&i(r.merged)?(T=r).fns.push(n):T=Xe([r,n]),T.merged=!0,e[E]=T}function $e(e,E,t,T,r){if(R(E)){if(P(E,t))return e[t]=E[t],r||delete E[t],!0;if(P(E,T))return e[t]=E[T],r||delete E[T],!0}return!1}function ke(e){return A(e)?[_e(e)]:n(e)?Ze(e):void 0}function Je(e){return R(e)&&R(e.text)&&!1===e.isComment}function Ze(e,E){var t,T,r,a,o=[];for(t=0;t<e.length;t++)s(T=e[t])||"boolean"==typeof T||(a=o[r=o.length-1],n(T)?T.length>0&&(Je((T=Ze(T,"".concat(E||"","_").concat(t)))[0])&&Je(a)&&(o[r]=_e(a.text+T[0].text),T.shift()),o.push.apply(o,T)):A(T)?Je(a)?o[r]=_e(a.text+T):""!==T&&o.push(_e(T)):Je(T)&&Je(a)?o[r]=_e(a.text+T.text):(i(e._isVList)&&R(T.tag)&&s(T.key)&&R(E)&&(T.key="__vlist".concat(E,"_").concat(t,"__")),o.push(T)));return o}function qe(e,E,t,T,r,s){return(n(t)||A(t))&&(r=T,T=t,t=void 0),i(s)&&(r=2),function(e,E,t,T,r){if(R(t)&&R(t.__ob__))return Le();R(t)&&R(t.is)&&(E=t.is);if(!E)return Le();0;n(T)&&a(T[0])&&((t=t||{}).scopedSlots={default:T[0]},T.length=0);2===r?T=ke(T):1===r&&(T=function(e){for(var E=0;E<e.length;E++)if(n(e[E]))return Array.prototype.concat.apply([],e);return e}(T));var s,i;if("string"==typeof E){var A=void 0;i=e.$vnode&&e.$vnode.ns||w.getTagNamespace(E),s=w.isReservedTag(E)?new Ne(w.parsePlatformTagName(E),t,T,void 0,void 0,e):t&&t.pre||!R(A=$t(e.$options,"components",E))?new Ne(E,t,T,void 0,void 0,e):Ft(A,t,e,T,E)}else s=Ft(E,t,e,T);return n(s)?s:R(s)?(R(i)&&je(s,i),R(t)&&function(e){o(e.style)&&Lt(e.style);o(e.class)&&Lt(e.class)}(t),s):Le()}(e,E,t,T,r)}function je(e,E,t){if(e.ns=E,"foreignObject"===e.tag&&(E=void 0,t=!0),R(e.children))for(var T=0,r=e.children.length;T<r;T++){var n=e.children[T];R(n.tag)&&(s(n.ns)||i(t)&&"svg"!==n.tag)&&je(n,E,t)}}function ze(e,E){var t,T,r,s,i=null;if(n(e)||"string"==typeof e)for(i=new Array(e.length),t=0,T=e.length;t<T;t++)i[t]=E(e[t],t);else if("number"==typeof e)for(i=new Array(e),t=0;t<e;t++)i[t]=E(t+1,t);else if(o(e))if(Se&&e[Symbol.iterator]){i=[];for(var A=e[Symbol.iterator](),a=A.next();!a.done;)i.push(E(a.value,i.length)),a=A.next()}else for(r=Object.keys(e),i=new Array(r.length),t=0,T=r.length;t<T;t++)s=r[t],i[t]=E(e[s],s,t);return R(i)||(i=[]),i._isVList=!0,i}function eE(e,E,t,T){var r,n=this.$scopedSlots[e];n?(t=t||{},T&&(t=y(y({},T),t)),r=n(t)||(a(E)?E():E)):r=this.$slots[e]||(a(E)?E():E);var s=t&&t.slot;return s?this.$createElement("template",{slot:s},r):r}function EE(e){return $t(this.$options,"filters",e,!0)||F}function tE(e,E){return n(e)?-1===e.indexOf(E):e!==E}function TE(e,E,t,T,r){var n=w.keyCodes[E]||t;return r&&T&&!w.keyCodes[E]?tE(r,T):n?tE(n,e):T?v(T)!==E:void 0===e}function rE(e,E,t,T,r){if(t)if(o(t)){n(t)&&(t=H(t));var s=void 0,R=function(n){if("class"===n||"style"===n||u(n))s=e;else{var R=e.attrs&&e.attrs.type;s=T||w.mustUseProp(E,R,n)?e.domProps||(e.domProps={}):e.attrs||(e.attrs={})}var i=M(n),A=v(n);i in s||A in s||(s[n]=t[n],r&&((e.on||(e.on={}))["update:".concat(n)]=function(e){t[n]=e}))};for(var i in t)R(i)}else;return e}function nE(e,E){var t=this._staticTrees||(this._staticTrees=[]),T=t[e];return T&&!E||RE(T=t[e]=this.$options.staticRenderFns[e].call(this._renderProxy,this._c,this),"__static__".concat(e),!1),T}function sE(e,E,t){return RE(e,"__once__".concat(E).concat(t?"_".concat(t):""),!0),e}function RE(e,E,t){if(n(e))for(var T=0;T<e.length;T++)e[T]&&"string"!=typeof e[T]&&iE(e[T],"".concat(E,"_").concat(T),t);else iE(e,E,t)}function iE(e,E,t){e.isStatic=!0,e.key=E,e.isOnce=t}function AE(e,E){if(E)if(I(E)){var t=e.on=e.on?y({},e.on):{};for(var T in E){var r=t[T],n=E[T];t[T]=r?[].concat(r,n):n}}else;return e}function aE(e,E,t,T){E=E||{$stable:!t};for(var r=0;r<e.length;r++){var s=e[r];n(s)?aE(s,E,t):s&&(s.proxy&&(s.fn.proxy=!0),E[s.key]=s.fn)}return T&&(E.$key=T),E}function oE(e,E){for(var t=0;t<E.length;t+=2){var T=E[t];"string"==typeof T&&T&&(e[E[t]]=E[t+1])}return e}function SE(e,E){return"string"==typeof e?E+e:e}function IE(e){e._o=sE,e._n=C,e._s=_,e._l=ze,e._t=eE,e._q=Y,e._i=b,e._m=nE,e._f=EE,e._k=TE,e._b=rE,e._v=_e,e._e=Le,e._u=aE,e._g=AE,e._d=oE,e._p=SE}function OE(e,E){if(!e||!e.length)return{};for(var t={},T=0,r=e.length;T<r;T++){var n=e[T],s=n.data;if(s&&s.attrs&&s.attrs.slot&&delete s.attrs.slot,n.context!==E&&n.fnContext!==E||!s||null==s.slot)(t.default||(t.default=[])).push(n);else{var R=s.slot,i=t[R]||(t[R]=[]);"template"===n.tag?i.push.apply(i,n.children||[]):i.push(n)}}for(var A in t)t[A].every(NE)&&delete t[A];return t}function NE(e){return e.isComment&&!e.asyncFactory||" "===e.text}function LE(e){return e.isComment&&e.asyncFactory}function _E(e,E,t,T){var n,s=Object.keys(t).length>0,R=E?!!E.$stable:!s,i=E&&E.$key;if(E){if(E._normalized)return E._normalized;if(R&&T&&T!==r&&i===T.$key&&!s&&!T.$hasNormal)return T;for(var A in n={},E)E[A]&&"$"!==A[0]&&(n[A]=CE(e,t,A,E[A]))}else n={};for(var a in t)a in n||(n[a]=lE(t,a));return E&&Object.isExtensible(E)&&(E._normalized=n),k(n,"$stable",R),k(n,"$key",i),k(n,"$hasNormal",s),n}function CE(e,E,t,T){var r=function(){var E=Ie;Oe(e);var t=arguments.length?T.apply(null,arguments):T({}),r=(t=t&&"object"==typeof t&&!n(t)?[t]:ke(t))&&t[0];return Oe(E),t&&(!r||1===t.length&&r.isComment&&!LE(r))?void 0:t};return T.proxy&&Object.defineProperty(E,t,{get:r,enumerable:!0,configurable:!0}),r}function lE(e,E){return function(){return e[E]}}function cE(e){return{get attrs(){if(!e._attrsProxy){var E=e._attrsProxy={};k(E,"_v_attr_proxy",!0),uE(E,e.$attrs,r,e,"$attrs")}return e._attrsProxy},get listeners(){e._listenersProxy||uE(e._listenersProxy={},e.$listeners,r,e,"$listeners");return e._listenersProxy},get slots(){return function(e){e._slotsProxy||DE(e._slotsProxy={},e.$scopedSlots);return e._slotsProxy}(e)},emit:m(e.$emit,e),expose:function(E){E&&Object.keys(E).forEach((function(t){return xe(e,E,t)}))}}}function uE(e,E,t,T,r){var n=!1;for(var s in E)s in e?E[s]!==t[s]&&(n=!0):(n=!0,pE(e,s,T,r));for(var s in e)s in E||(n=!0,delete e[s]);return n}function pE(e,E,t,T){Object.defineProperty(e,E,{enumerable:!0,configurable:!0,get:function(){return t[T][E]}})}function DE(e,E){for(var t in E)e[t]=E[t];for(var t in e)t in E||delete e[t]}var PE,dE=null;function fE(e,E){return(e.__esModule||Se&&"Module"===e[Symbol.toStringTag])&&(e=e.default),o(e)?E.extend(e):e}function ME(e){if(n(e))for(var E=0;E<e.length;E++){var t=e[E];if(R(t)&&(R(t.componentOptions)||LE(t)))return t}}function UE(e,E){PE.$on(e,E)}function hE(e,E){PE.$off(e,E)}function vE(e,E){var t=PE;return function T(){var r=E.apply(null,arguments);null!==r&&t.$off(e,T)}}function mE(e,E,t){PE=e,we(E,t||{},UE,hE,vE,e),PE=void 0}var GE=null;function yE(e){var E=GE;return GE=e,function(){GE=E}}function HE(e){for(;e&&(e=e.$parent);)if(e._inactive)return!0;return!1}function gE(e,E){if(E){if(e._directInactive=!1,HE(e))return}else if(e._directInactive)return;if(e._inactive||null===e._inactive){e._inactive=!1;for(var t=0;t<e.$children.length;t++)gE(e.$children[t]);FE(e,"activated")}}function BE(e,E){if(!(E&&(e._directInactive=!0,HE(e))||e._inactive)){e._inactive=!0;for(var t=0;t<e.$children.length;t++)BE(e.$children[t]);FE(e,"deactivated")}}function FE(e,E,t,T){void 0===T&&(T=!0),De();var r=Ie;T&&Oe(e);var n=e.$options[E],s="".concat(E," hook");if(n)for(var R=0,i=n.length;R<i;R++)Et(n[R],e,t||null,e,s);e._hasHookEvent&&e.$emit("hook:"+E),T&&Oe(r),Pe()}var YE=[],bE=[],VE={},WE=!1,xE=!1,QE=0;var XE=0,wE=Date.now;if(q&&!z){var KE=window.performance;KE&&"function"==typeof KE.now&&wE()>document.createEvent("Event").timeStamp&&(wE=function(){return KE.now()})}var $E=function(e,E){if(e.post){if(!E.post)return 1}else if(E.post)return-1;return e.id-E.id};function kE(){var e,E;for(XE=wE(),xE=!0,YE.sort($E),QE=0;QE<YE.length;QE++)(e=YE[QE]).before&&e.before(),E=e.id,VE[E]=null,e.run();var t=bE.slice(),T=YE.slice();QE=YE.length=bE.length=0,VE={},WE=xE=!1,function(e){for(var E=0;E<e.length;E++)e[E]._inactive=!0,gE(e[E],!0)}(t),function(e){var E=e.length;for(;E--;){var t=e[E],T=t.vm;T&&T._watcher===t&&T._isMounted&&!T._isDestroyed&&FE(T,"updated")}}(T),function(){for(var e=0;e<ce.length;e++){var E=ce[e];E.subs=E.subs.filter((function(e){return e})),E._pending=!1}ce.length=0}(),Ae&&w.devtools&&Ae.emit("flush")}function JE(e){var E=e.id;if(null==VE[E]&&(e!==ue.target||!e.noRecurse)){if(VE[E]=!0,xE){for(var t=YE.length-1;t>QE&&YE[t].id>e.id;)t--;YE.splice(t+1,0,e)}else YE.push(e);WE||(WE=!0,It(kE))}}var ZE="watcher";"".concat(ZE," callback"),"".concat(ZE," getter"),"".concat(ZE," cleanup");var qE;var jE=function(){function e(e){void 0===e&&(e=!1),this.detached=e,this.active=!0,this.effects=[],this.cleanups=[],this.parent=qE,!e&&qE&&(this.index=(qE.scopes||(qE.scopes=[])).push(this)-1)}return e.prototype.run=function(e){if(this.active){var E=qE;try{return qE=this,e()}finally{qE=E}}else 0},e.prototype.on=function(){qE=this},e.prototype.off=function(){qE=this.parent},e.prototype.stop=function(e){if(this.active){var E=void 0,t=void 0;for(E=0,t=this.effects.length;E<t;E++)this.effects[E].teardown();for(E=0,t=this.cleanups.length;E<t;E++)this.cleanups[E]();if(this.scopes)for(E=0,t=this.scopes.length;E<t;E++)this.scopes[E].stop(!0);if(!this.detached&&this.parent&&!e){var T=this.parent.scopes.pop();T&&T!==this&&(this.parent.scopes[this.index]=T,T.index=this.index)}this.parent=void 0,this.active=!1}},e}();function zE(e){var E=e._provided,t=e.$parent&&e.$parent._provided;return t===E?e._provided=Object.create(t):E}function et(e,E,t){De();try{if(E)for(var T=E;T=T.$parent;){var r=T.$options.errorCaptured;if(r)for(var n=0;n<r.length;n++)try{if(!1===r[n].call(T,e,E,t))return}catch(e){tt(e,T,"errorCaptured hook")}}tt(e,E,t)}finally{Pe()}}function Et(e,E,t,T,r){var n;try{(n=t?e.apply(E,t):e.call(E))&&!n._isVue&&L(n)&&!n._handled&&(n.catch((function(e){return et(e,T,r+" (Promise/async)")})),n._handled=!0)}catch(e){et(e,T,r)}return n}function tt(e,E,t){if(w.errorHandler)try{return w.errorHandler.call(null,e,E,t)}catch(E){E!==e&&Tt(E,null,"config.errorHandler")}Tt(e,E,t)}function Tt(e,E,t){if(!q||"undefined"==typeof console)throw e;console.error(e)}var rt,nt=!1,st=[],Rt=!1;function it(){Rt=!1;var e=st.slice(0);st.length=0;for(var E=0;E<e.length;E++)e[E]()}if("undefined"!=typeof Promise&&ae(Promise)){var At=Promise.resolve();rt=function(){At.then(it),te&&setTimeout(g)},nt=!0}else if(z||"undefined"==typeof MutationObserver||!ae(MutationObserver)&&"[object MutationObserverConstructor]"!==MutationObserver.toString())rt="undefined"!=typeof setImmediate&&ae(setImmediate)?function(){setImmediate(it)}:function(){setTimeout(it,0)};else{var at=1,ot=new MutationObserver(it),St=document.createTextNode(String(at));ot.observe(St,{characterData:!0}),rt=function(){at=(at+1)%2,St.data=String(at)},nt=!0}function It(e,E){var t;if(st.push((function(){if(e)try{e.call(E)}catch(e){et(e,E,"nextTick")}else t&&t(E)})),Rt||(Rt=!0,rt()),!e&&"undefined"!=typeof Promise)return new Promise((function(e){t=e}))}function Ot(e){return function(E,t){if(void 0===t&&(t=Ie),t)return function(e,E,t){var T=e.$options;T[E]=Qt(T[E],t)}(t,e,E)}}Ot("beforeMount"),Ot("mounted"),Ot("beforeUpdate"),Ot("updated"),Ot("beforeDestroy"),Ot("destroyed"),Ot("activated"),Ot("deactivated"),Ot("serverPrefetch"),Ot("renderTracked"),Ot("renderTriggered"),Ot("errorCaptured");var Nt=new oe;function Lt(e){return _t(e,Nt),Nt.clear(),e}function _t(e,E){var t,T,r=n(e);if(!(!r&&!o(e)||e.__v_skip||Object.isFrozen(e)||e instanceof Ne)){if(e.__ob__){var s=e.__ob__.dep.id;if(E.has(s))return;E.add(s)}if(r)for(t=e.length;t--;)_t(e[t],E);else if(We(e))_t(e.value,E);else for(t=(T=Object.keys(e)).length;t--;)_t(e[T[t]],E)}}var Ct=0,lt=function(){function e(e,E,t,T,r){var n,s;n=this,void 0===(s=qE&&!qE._vm?qE:e?e._scope:void 0)&&(s=qE),s&&s.active&&s.effects.push(n),(this.vm=e)&&r&&(e._watcher=this),T?(this.deep=!!T.deep,this.user=!!T.user,this.lazy=!!T.lazy,this.sync=!!T.sync,this.before=T.before):this.deep=this.user=this.lazy=this.sync=!1,this.cb=t,this.id=++Ct,this.active=!0,this.post=!1,this.dirty=this.lazy,this.deps=[],this.newDeps=[],this.depIds=new oe,this.newDepIds=new oe,this.expression="",a(E)?this.getter=E:(this.getter=function(e){if(!J.test(e)){var E=e.split(".");return function(e){for(var t=0;t<E.length;t++){if(!e)return;e=e[E[t]]}return e}}}(E),this.getter||(this.getter=g)),this.value=this.lazy?void 0:this.get()}return e.prototype.get=function(){var e;De(this);var E=this.vm;try{e=this.getter.call(E,E)}catch(e){if(!this.user)throw e;et(e,E,'getter for watcher "'.concat(this.expression,'"'))}finally{this.deep&&Lt(e),Pe(),this.cleanupDeps()}return e},e.prototype.addDep=function(e){var E=e.id;this.newDepIds.has(E)||(this.newDepIds.add(E),this.newDeps.push(e),this.depIds.has(E)||e.addSub(this))},e.prototype.cleanupDeps=function(){for(var e=this.deps.length;e--;){var E=this.deps[e];this.newDepIds.has(E.id)||E.removeSub(this)}var t=this.depIds;this.depIds=this.newDepIds,this.newDepIds=t,this.newDepIds.clear(),t=this.deps,this.deps=this.newDeps,this.newDeps=t,this.newDeps.length=0},e.prototype.update=function(){this.lazy?this.dirty=!0:this.sync?this.run():JE(this)},e.prototype.run=function(){if(this.active){var e=this.get();if(e!==this.value||o(e)||this.deep){var E=this.value;if(this.value=e,this.user){var t='callback for watcher "'.concat(this.expression,'"');Et(this.cb,this.vm,[e,E],this.vm,t)}else this.cb.call(this.vm,e,E)}}},e.prototype.evaluate=function(){this.value=this.get(),this.dirty=!1},e.prototype.depend=function(){for(var e=this.deps.length;e--;)this.deps[e].depend()},e.prototype.teardown=function(){if(this.vm&&!this.vm._isBeingDestroyed&&p(this.vm._scope.effects,this),this.active){for(var e=this.deps.length;e--;)this.deps[e].removeSub(this);this.active=!1,this.onStop&&this.onStop()}},e}(),ct={enumerable:!0,configurable:!0,get:g,set:g};function ut(e,E,t){ct.get=function(){return this[E][t]},ct.set=function(e){this[E][t]=e},Object.defineProperty(e,t,ct)}function pt(e){var E=e.$options;if(E.props&&function(e,E){var t=e.$options.propsData||{},T=e._props=Ye({}),r=e.$options._propKeys=[];e.$parent&&ve(!1);var n=function(n){r.push(n);var s=kt(n,E,t,e);He(T,n,s),n in e||ut(e,"_props",n)};for(var s in E)n(s);ve(!0)}(e,E.props),function(e){var E=e.$options,t=E.setup;if(t){var T=e._setupContext=cE(e);Oe(e),De();var r=Et(t,null,[e._props||Ye({}),T],e,"setup");if(Pe(),Oe(),a(r))E.render=r;else if(o(r))if(e._setupState=r,r.__sfc){var n=e._setupProxy={};for(var s in r)"__sfc"!==s&&xe(n,r,s)}else for(var s in r)$(s)||xe(e,r,s)}}(e),E.methods&&function(e,E){e.$options.props;for(var t in E)e[t]="function"!=typeof E[t]?g:m(E[t],e)}(e,E.methods),E.data)!function(e){var E=e.$options.data;I(E=e._data=a(E)?function(e,E){De();try{return e.call(E,E)}catch(e){return et(e,E,"data()"),{}}finally{Pe()}}(E,e):E||{})||(E={});var t=Object.keys(E),T=e.$options.props,r=(e.$options.methods,t.length);for(;r--;){var n=t[r];0,T&&P(T,n)||$(n)||ut(e,"_data",n)}var s=ye(E);s&&s.vmCount++}(e);else{var t=ye(e._data={});t&&t.vmCount++}E.computed&&function(e,E){var t=e._computedWatchers=Object.create(null),T=ie();for(var r in E){var n=E[r],s=a(n)?n:n.get;0,T||(t[r]=new lt(e,s||g,g,Dt)),r in e||Pt(e,r,n)}}(e,E.computed),E.watch&&E.watch!==ne&&function(e,E){for(var t in E){var T=E[t];if(n(T))for(var r=0;r<T.length;r++)Mt(e,t,T[r]);else Mt(e,t,T)}}(e,E.watch)}var Dt={lazy:!0};function Pt(e,E,t){var T=!ie();a(t)?(ct.get=T?dt(E):ft(t),ct.set=g):(ct.get=t.get?T&&!1!==t.cache?dt(E):ft(t.get):g,ct.set=t.set||g),Object.defineProperty(e,E,ct)}function dt(e){return function(){var E=this._computedWatchers&&this._computedWatchers[e];if(E)return E.dirty&&E.evaluate(),ue.target&&E.depend(),E.value}}function ft(e){return function(){return e.call(this,this)}}function Mt(e,E,t,T){return I(t)&&(T=t,t=t.handler),"string"==typeof t&&(t=e[t]),e.$watch(E,t,T)}function Ut(e,E){if(e){for(var t=Object.create(null),T=Se?Reflect.ownKeys(e):Object.keys(e),r=0;r<T.length;r++){var n=T[r];if("__ob__"!==n){var s=e[n].from;if(s in E._provided)t[n]=E._provided[s];else if("default"in e[n]){var R=e[n].default;t[n]=a(R)?R.call(E):R}else 0}}return t}}var ht=0;function vt(e){var E=e.options;if(e.super){var t=vt(e.super);if(t!==e.superOptions){e.superOptions=t;var T=function(e){var E,t=e.options,T=e.sealedOptions;for(var r in t)t[r]!==T[r]&&(E||(E={}),E[r]=t[r]);return E}(e);T&&y(e.extendOptions,T),(E=e.options=Kt(t,e.extendOptions)).name&&(E.components[E.name]=e)}}return E}function mt(e,E,t,T,s){var R,A=this,a=s.options;P(T,"_uid")?(R=Object.create(T))._original=T:(R=T,T=T._original);var o=i(a._compiled),S=!o;this.data=e,this.props=E,this.children=t,this.parent=T,this.listeners=e.on||r,this.injections=Ut(a.inject,T),this.slots=function(){return A.$slots||_E(T,e.scopedSlots,A.$slots=OE(t,T)),A.$slots},Object.defineProperty(this,"scopedSlots",{enumerable:!0,get:function(){return _E(T,e.scopedSlots,this.slots())}}),o&&(this.$options=a,this.$slots=this.slots(),this.$scopedSlots=_E(T,e.scopedSlots,this.$slots)),a._scopeId?this._c=function(e,E,t,r){var s=qe(R,e,E,t,r,S);return s&&!n(s)&&(s.fnScopeId=a._scopeId,s.fnContext=T),s}:this._c=function(e,E,t,T){return qe(R,e,E,t,T,S)}}function Gt(e,E,t,T,r){var n=Ce(e);return n.fnContext=t,n.fnOptions=T,E.slot&&((n.data||(n.data={})).slot=E.slot),n}function yt(e,E){for(var t in E)e[M(t)]=E[t]}function Ht(e){return e.name||e.__name||e._componentTag}IE(mt.prototype);var gt={init:function(e,E){if(e.componentInstance&&!e.componentInstance._isDestroyed&&e.data.keepAlive){var t=e;gt.prepatch(t,t)}else{var T=e.componentInstance=function(e,E){var t={_isComponent:!0,_parentVnode:e,parent:E},T=e.data.inlineTemplate;R(T)&&(t.render=T.render,t.staticRenderFns=T.staticRenderFns);return new e.componentOptions.Ctor(t)}(e,GE);T.$mount(E?e.elm:void 0,E)}},prepatch:function(e,E){var t=E.componentOptions;!function(e,E,t,T,n){var s=T.data.scopedSlots,R=e.$scopedSlots,i=!!(s&&!s.$stable||R!==r&&!R.$stable||s&&e.$scopedSlots.$key!==s.$key||!s&&e.$scopedSlots.$key),A=!!(n||e.$options._renderChildren||i),a=e.$vnode;e.$options._parentVnode=T,e.$vnode=T,e._vnode&&(e._vnode.parent=T),e.$options._renderChildren=n;var o=T.data.attrs||r;e._attrsProxy&&uE(e._attrsProxy,o,a.data&&a.data.attrs||r,e,"$attrs")&&(A=!0),e.$attrs=o,t=t||r;var S=e.$options._parentListeners;if(e._listenersProxy&&uE(e._listenersProxy,t,S||r,e,"$listeners"),e.$listeners=e.$options._parentListeners=t,mE(e,t,S),E&&e.$options.props){ve(!1);for(var I=e._props,O=e.$options._propKeys||[],N=0;N<O.length;N++){var L=O[N],_=e.$options.props;I[L]=kt(L,_,E,e)}ve(!0),e.$options.propsData=E}A&&(e.$slots=OE(n,T.context),e.$forceUpdate())}(E.componentInstance=e.componentInstance,t.propsData,t.listeners,E,t.children)},insert:function(e){var E,t=e.context,T=e.componentInstance;T._isMounted||(T._isMounted=!0,FE(T,"mounted")),e.data.keepAlive&&(t._isMounted?((E=T)._inactive=!1,bE.push(E)):gE(T,!0))},destroy:function(e){var E=e.componentInstance;E._isDestroyed||(e.data.keepAlive?BE(E,!0):E.$destroy())}},Bt=Object.keys(gt);function Ft(e,E,t,T,A){if(!s(e)){var a=t.$options._base;if(o(e)&&(e=a.extend(e)),"function"==typeof e){var S;if(s(e.cid)&&(e=function(e,E){if(i(e.error)&&R(e.errorComp))return e.errorComp;if(R(e.resolved))return e.resolved;var t=dE;if(t&&R(e.owners)&&-1===e.owners.indexOf(t)&&e.owners.push(t),i(e.loading)&&R(e.loadingComp))return e.loadingComp;if(t&&!R(e.owners)){var T=e.owners=[t],r=!0,n=null,A=null;t.$on("hook:destroyed",(function(){return p(T,t)}));var a=function(e){for(var E=0,t=T.length;E<t;E++)T[E].$forceUpdate();e&&(T.length=0,null!==n&&(clearTimeout(n),n=null),null!==A&&(clearTimeout(A),A=null))},S=V((function(t){e.resolved=fE(t,E),r?T.length=0:a(!0)})),I=V((function(E){R(e.errorComp)&&(e.error=!0,a(!0))})),O=e(S,I);return o(O)&&(L(O)?s(e.resolved)&&O.then(S,I):L(O.component)&&(O.component.then(S,I),R(O.error)&&(e.errorComp=fE(O.error,E)),R(O.loading)&&(e.loadingComp=fE(O.loading,E),0===O.delay?e.loading=!0:n=setTimeout((function(){n=null,s(e.resolved)&&s(e.error)&&(e.loading=!0,a(!1))}),O.delay||200)),R(O.timeout)&&(A=setTimeout((function(){A=null,s(e.resolved)&&I(null)}),O.timeout)))),r=!1,e.loading?e.loadingComp:e.resolved}}(S=e,a),void 0===e))return function(e,E,t,T,r){var n=Le();return n.asyncFactory=e,n.asyncMeta={data:E,context:t,children:T,tag:r},n}(S,E,t,T,A);E=E||{},vt(e),R(E.model)&&function(e,E){var t=e.model&&e.model.prop||"value",T=e.model&&e.model.event||"input";(E.attrs||(E.attrs={}))[t]=E.model.value;var r=E.on||(E.on={}),s=r[T],i=E.model.callback;R(s)?(n(s)?-1===s.indexOf(i):s!==i)&&(r[T]=[i].concat(s)):r[T]=i}(e.options,E);var I=function(e,E,t){var T=E.options.props;if(!s(T)){var r={},n=e.attrs,i=e.props;if(R(n)||R(i))for(var A in T){var a=v(A);$e(r,i,A,a,!0)||$e(r,n,A,a,!1)}return r}}(E,e);if(i(e.options.functional))return function(e,E,t,T,s){var i=e.options,A={},a=i.props;if(R(a))for(var o in a)A[o]=kt(o,a,E||r);else R(t.attrs)&&yt(A,t.attrs),R(t.props)&&yt(A,t.props);var S=new mt(t,A,s,T,e),I=i.render.call(null,S._c,S);if(I instanceof Ne)return Gt(I,t,S.parent,i);if(n(I)){for(var O=ke(I)||[],N=new Array(O.length),L=0;L<O.length;L++)N[L]=Gt(O[L],t,S.parent,i);return N}}(e,I,E,t,T);var O=E.on;if(E.on=E.nativeOn,i(e.options.abstract)){var N=E.slot;E={},N&&(E.slot=N)}!function(e){for(var E=e.hook||(e.hook={}),t=0;t<Bt.length;t++){var T=Bt[t],r=E[T],n=gt[T];r===n||r&&r._merged||(E[T]=r?Yt(n,r):n)}}(E);var _=Ht(e.options)||A;return new Ne("vue-component-".concat(e.cid).concat(_?"-".concat(_):""),E,void 0,void 0,void 0,t,{Ctor:e,propsData:I,listeners:O,tag:A,children:T},S)}}}function Yt(e,E){var t=function(t,T){e(t,T),E(t,T)};return t._merged=!0,t}var bt=g,Vt=w.optionMergeStrategies;function Wt(e,E,t){if(void 0===t&&(t=!0),!E)return e;for(var T,r,n,s=Se?Reflect.ownKeys(E):Object.keys(E),R=0;R<s.length;R++)"__ob__"!==(T=s[R])&&(r=e[T],n=E[T],t&&P(e,T)?r!==n&&I(r)&&I(n)&&Wt(r,n):ge(e,T,n));return e}function xt(e,E,t){return t?function(){var T=a(E)?E.call(t,t):E,r=a(e)?e.call(t,t):e;return T?Wt(T,r):r}:E?e?function(){return Wt(a(E)?E.call(this,this):E,a(e)?e.call(this,this):e)}:E:e}function Qt(e,E){var t=E?e?e.concat(E):n(E)?E:[E]:e;return t?function(e){for(var E=[],t=0;t<e.length;t++)-1===E.indexOf(e[t])&&E.push(e[t]);return E}(t):t}function Xt(e,E,t,T){var r=Object.create(e||null);return E?y(r,E):r}Vt.data=function(e,E,t){return t?xt(e,E,t):E&&"function"!=typeof E?e:xt(e,E)},X.forEach((function(e){Vt[e]=Qt})),Q.forEach((function(e){Vt[e+"s"]=Xt})),Vt.watch=function(e,E,t,T){if(e===ne&&(e=void 0),E===ne&&(E=void 0),!E)return Object.create(e||null);if(!e)return E;var r={};for(var s in y(r,e),E){var R=r[s],i=E[s];R&&!n(R)&&(R=[R]),r[s]=R?R.concat(i):n(i)?i:[i]}return r},Vt.props=Vt.methods=Vt.inject=Vt.computed=function(e,E,t,T){if(!e)return E;var r=Object.create(null);return y(r,e),E&&y(r,E),r},Vt.provide=function(e,E){return e?function(){var t=Object.create(null);return Wt(t,a(e)?e.call(this):e),E&&Wt(t,a(E)?E.call(this):E,!1),t}:E};var wt=function(e,E){return void 0===E?e:E};function Kt(e,E,t){if(a(E)&&(E=E.options),function(e,E){var t=e.props;if(t){var T,r,s={};if(n(t))for(T=t.length;T--;)"string"==typeof(r=t[T])&&(s[M(r)]={type:null});else if(I(t))for(var R in t)r=t[R],s[M(R)]=I(r)?r:{type:r};e.props=s}}(E),function(e,E){var t=e.inject;if(t){var T=e.inject={};if(n(t))for(var r=0;r<t.length;r++)T[t[r]]={from:t[r]};else if(I(t))for(var s in t){var R=t[s];T[s]=I(R)?y({from:s},R):{from:R}}}}(E),function(e){var E=e.directives;if(E)for(var t in E){var T=E[t];a(T)&&(E[t]={bind:T,update:T})}}(E),!E._base&&(E.extends&&(e=Kt(e,E.extends,t)),E.mixins))for(var T=0,r=E.mixins.length;T<r;T++)e=Kt(e,E.mixins[T],t);var s,R={};for(s in e)i(s);for(s in E)P(e,s)||i(s);function i(T){var r=Vt[T]||wt;R[T]=r(e[T],E[T],t,T)}return R}function $t(e,E,t,T){if("string"==typeof t){var r=e[E];if(P(r,t))return r[t];var n=M(t);if(P(r,n))return r[n];var s=U(n);return P(r,s)?r[s]:r[t]||r[n]||r[s]}}function kt(e,E,t,T){var r=E[e],n=!P(t,e),s=t[e],R=jt(Boolean,r.type);if(R>-1)if(n&&!P(r,"default"))s=!1;else if(""===s||s===v(e)){var i=jt(String,r.type);(i<0||R<i)&&(s=!0)}if(void 0===s){s=function(e,E,t){if(!P(E,"default"))return;var T=E.default;0;if(e&&e.$options.propsData&&void 0===e.$options.propsData[t]&&void 0!==e._props[t])return e._props[t];return a(T)&&"Function"!==Zt(E.type)?T.call(e):T}(T,r,e);var A=he;ve(!0),ye(s),ve(A)}return s}var Jt=/^\s*function (\w+)/;function Zt(e){var E=e&&e.toString().match(Jt);return E?E[1]:""}function qt(e,E){return Zt(e)===Zt(E)}function jt(e,E){if(!n(E))return qt(E,e)?0:-1;for(var t=0,T=E.length;t<T;t++)if(qt(E[t],e))return t;return-1}function zt(e){this._init(e)}function eT(e){e.cid=0;var E=1;e.extend=function(e){e=e||{};var t=this,T=t.cid,r=e._Ctor||(e._Ctor={});if(r[T])return r[T];var n=Ht(e)||Ht(t.options);var s=function(e){this._init(e)};return(s.prototype=Object.create(t.prototype)).constructor=s,s.cid=E++,s.options=Kt(t.options,e),s.super=t,s.options.props&&function(e){var E=e.options.props;for(var t in E)ut(e.prototype,"_props",t)}(s),s.options.computed&&function(e){var E=e.options.computed;for(var t in E)Pt(e.prototype,t,E[t])}(s),s.extend=t.extend,s.mixin=t.mixin,s.use=t.use,Q.forEach((function(e){s[e]=t[e]})),n&&(s.options.components[n]=s),s.superOptions=t.options,s.extendOptions=e,s.sealedOptions=y({},s.options),r[T]=s,s}}function ET(e){return e&&(Ht(e.Ctor.options)||e.tag)}function tT(e,E){return n(e)?e.indexOf(E)>-1:"string"==typeof e?e.split(",").indexOf(E)>-1:!!O(e)&&e.test(E)}function TT(e,E){var t=e.cache,T=e.keys,r=e._vnode;for(var n in t){var s=t[n];if(s){var R=s.name;R&&!E(R)&&rT(t,n,T,r)}}}function rT(e,E,t,T){var r=e[E];!r||T&&r.tag===T.tag||r.componentInstance.$destroy(),e[E]=null,p(t,E)}!function(e){e.prototype._init=function(e){var E=this;E._uid=ht++,E._isVue=!0,E.__v_skip=!0,E._scope=new jE(!0),E._scope._vm=!0,e&&e._isComponent?function(e,E){var t=e.$options=Object.create(e.constructor.options),T=E._parentVnode;t.parent=E.parent,t._parentVnode=T;var r=T.componentOptions;t.propsData=r.propsData,t._parentListeners=r.listeners,t._renderChildren=r.children,t._componentTag=r.tag,E.render&&(t.render=E.render,t.staticRenderFns=E.staticRenderFns)}(E,e):E.$options=Kt(vt(E.constructor),e||{},E),E._renderProxy=E,E._self=E,function(e){var E=e.$options,t=E.parent;if(t&&!E.abstract){for(;t.$options.abstract&&t.$parent;)t=t.$parent;t.$children.push(e)}e.$parent=t,e.$root=t?t.$root:e,e.$children=[],e.$refs={},e._provided=t?t._provided:Object.create(null),e._watcher=null,e._inactive=null,e._directInactive=!1,e._isMounted=!1,e._isDestroyed=!1,e._isBeingDestroyed=!1}(E),function(e){e._events=Object.create(null),e._hasHookEvent=!1;var E=e.$options._parentListeners;E&&mE(e,E)}(E),function(e){e._vnode=null,e._staticTrees=null;var E=e.$options,t=e.$vnode=E._parentVnode,T=t&&t.context;e.$slots=OE(E._renderChildren,T),e.$scopedSlots=t?_E(e.$parent,t.data.scopedSlots,e.$slots):r,e._c=function(E,t,T,r){return qe(e,E,t,T,r,!1)},e.$createElement=function(E,t,T,r){return qe(e,E,t,T,r,!0)};var n=t&&t.data;He(e,"$attrs",n&&n.attrs||r,null,!0),He(e,"$listeners",E._parentListeners||r,null,!0)}(E),FE(E,"beforeCreate",void 0,!1),function(e){var E=Ut(e.$options.inject,e);E&&(ve(!1),Object.keys(E).forEach((function(t){He(e,t,E[t])})),ve(!0))}(E),pt(E),function(e){var E=e.$options.provide;if(E){var t=a(E)?E.call(e):E;if(!o(t))return;for(var T=zE(e),r=Se?Reflect.ownKeys(t):Object.keys(t),n=0;n<r.length;n++){var s=r[n];Object.defineProperty(T,s,Object.getOwnPropertyDescriptor(t,s))}}}(E),FE(E,"created"),E.$options.el&&E.$mount(E.$options.el)}}(zt),function(e){var E={get:function(){return this._data}},t={get:function(){return this._props}};Object.defineProperty(e.prototype,"$data",E),Object.defineProperty(e.prototype,"$props",t),e.prototype.$set=ge,e.prototype.$delete=Be,e.prototype.$watch=function(e,E,t){var T=this;if(I(E))return Mt(T,e,E,t);(t=t||{}).user=!0;var r=new lt(T,e,E,t);if(t.immediate){var n='callback for immediate watcher "'.concat(r.expression,'"');De(),Et(E,T,[r.value],T,n),Pe()}return function(){r.teardown()}}}(zt),function(e){var E=/^hook:/;e.prototype.$on=function(e,t){var T=this;if(n(e))for(var r=0,s=e.length;r<s;r++)T.$on(e[r],t);else(T._events[e]||(T._events[e]=[])).push(t),E.test(e)&&(T._hasHookEvent=!0);return T},e.prototype.$once=function(e,E){var t=this;function T(){t.$off(e,T),E.apply(t,arguments)}return T.fn=E,t.$on(e,T),t},e.prototype.$off=function(e,E){var t=this;if(!arguments.length)return t._events=Object.create(null),t;if(n(e)){for(var T=0,r=e.length;T<r;T++)t.$off(e[T],E);return t}var s,R=t._events[e];if(!R)return t;if(!E)return t._events[e]=null,t;for(var i=R.length;i--;)if((s=R[i])===E||s.fn===E){R.splice(i,1);break}return t},e.prototype.$emit=function(e){var E=this,t=E._events[e];if(t){t=t.length>1?G(t):t;for(var T=G(arguments,1),r='event handler for "'.concat(e,'"'),n=0,s=t.length;n<s;n++)Et(t[n],E,T,E,r)}return E}}(zt),function(e){e.prototype._update=function(e,E){var t=this,T=t.$el,r=t._vnode,n=yE(t);t._vnode=e,t.$el=r?t.__patch__(r,e):t.__patch__(t.$el,e,E,!1),n(),T&&(T.__vue__=null),t.$el&&(t.$el.__vue__=t);for(var s=t;s&&s.$vnode&&s.$parent&&s.$vnode===s.$parent._vnode;)s.$parent.$el=s.$el,s=s.$parent},e.prototype.$forceUpdate=function(){this._watcher&&this._watcher.update()},e.prototype.$destroy=function(){var e=this;if(!e._isBeingDestroyed){FE(e,"beforeDestroy"),e._isBeingDestroyed=!0;var E=e.$parent;!E||E._isBeingDestroyed||e.$options.abstract||p(E.$children,e),e._scope.stop(),e._data.__ob__&&e._data.__ob__.vmCount--,e._isDestroyed=!0,e.__patch__(e._vnode,null),FE(e,"destroyed"),e.$off(),e.$el&&(e.$el.__vue__=null),e.$vnode&&(e.$vnode.parent=null)}}}(zt),function(e){IE(e.prototype),e.prototype.$nextTick=function(e){return It(e,this)},e.prototype._render=function(){var e,E=this,t=E.$options,T=t.render,r=t._parentVnode;r&&E._isMounted&&(E.$scopedSlots=_E(E.$parent,r.data.scopedSlots,E.$slots,E.$scopedSlots),E._slotsProxy&&DE(E._slotsProxy,E.$scopedSlots)),E.$vnode=r;try{Oe(E),dE=E,e=T.call(E._renderProxy,E.$createElement)}catch(t){et(t,E,"render"),e=E._vnode}finally{dE=null,Oe()}return n(e)&&1===e.length&&(e=e[0]),e instanceof Ne||(e=Le()),e.parent=r,e}}(zt);var nT=[String,RegExp,Array],sT={name:"keep-alive",abstract:!0,props:{include:nT,exclude:nT,max:[String,Number]},methods:{cacheVNode:function(){var e=this,E=e.cache,t=e.keys,T=e.vnodeToCache,r=e.keyToCache;if(T){var n=T.tag,s=T.componentInstance,R=T.componentOptions;E[r]={name:ET(R),tag:n,componentInstance:s},t.push(r),this.max&&t.length>parseInt(this.max)&&rT(E,t[0],t,this._vnode),this.vnodeToCache=null}}},created:function(){this.cache=Object.create(null),this.keys=[]},destroyed:function(){for(var e in this.cache)rT(this.cache,e,this.keys)},mounted:function(){var e=this;this.cacheVNode(),this.$watch("include",(function(E){TT(e,(function(e){return tT(E,e)}))})),this.$watch("exclude",(function(E){TT(e,(function(e){return!tT(E,e)}))}))},updated:function(){this.cacheVNode()},render:function(){var e=this.$slots.default,E=ME(e),t=E&&E.componentOptions;if(t){var T=ET(t),r=this.include,n=this.exclude;if(r&&(!T||!tT(r,T))||n&&T&&tT(n,T))return E;var s=this.cache,R=this.keys,i=null==E.key?t.Ctor.cid+(t.tag?"::".concat(t.tag):""):E.key;s[i]?(E.componentInstance=s[i].componentInstance,p(R,i),R.push(i)):(this.vnodeToCache=E,this.keyToCache=i),E.data.keepAlive=!0}return E||e&&e[0]}},RT={KeepAlive:sT};!function(e){var E={get:function(){return w}};Object.defineProperty(e,"config",E),e.util={warn:bt,extend:y,mergeOptions:Kt,defineReactive:He},e.set=ge,e.delete=Be,e.nextTick=It,e.observable=function(e){return ye(e),e},e.options=Object.create(null),Q.forEach((function(E){e.options[E+"s"]=Object.create(null)})),e.options._base=e,y(e.options.components,RT),function(e){e.use=function(e){var E=this._installedPlugins||(this._installedPlugins=[]);if(E.indexOf(e)>-1)return this;var t=G(arguments,1);return t.unshift(this),a(e.install)?e.install.apply(e,t):a(e)&&e.apply(null,t),E.push(e),this}}(e),function(e){e.mixin=function(e){return this.options=Kt(this.options,e),this}}(e),eT(e),function(e){Q.forEach((function(E){e[E]=function(e,t){return t?("component"===E&&I(t)&&(t.name=t.name||e,t=this.options._base.extend(t)),"directive"===E&&a(t)&&(t={bind:t,update:t}),this.options[E+"s"][e]=t,t):this.options[E+"s"][e]}}))}(e)}(zt),Object.defineProperty(zt.prototype,"$isServer",{get:ie}),Object.defineProperty(zt.prototype,"$ssrContext",{get:function(){return this.$vnode&&this.$vnode.ssrContext}}),Object.defineProperty(zt,"FunctionalRenderContext",{value:mt}),zt.version="2.7.14";var iT=l("style,class"),AT=l("input,textarea,option,select,progress"),aT=function(e,E,t){return"value"===t&&AT(e)&&"button"!==E||"selected"===t&&"option"===e||"checked"===t&&"input"===e||"muted"===t&&"video"===e},oT=l("contenteditable,draggable,spellcheck"),ST=l("events,caret,typing,plaintext-only"),IT=l("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),OT="http://www.w3.org/1999/xlink",NT=function(e){return":"===e.charAt(5)&&"xlink"===e.slice(0,5)},LT=function(e){return NT(e)?e.slice(6,e.length):""},_T=function(e){return null==e||!1===e};function CT(e){for(var E=e.data,t=e,T=e;R(T.componentInstance);)(T=T.componentInstance._vnode)&&T.data&&(E=lT(T.data,E));for(;R(t=t.parent);)t&&t.data&&(E=lT(E,t.data));return function(e,E){if(R(e)||R(E))return cT(e,uT(E));return""}(E.staticClass,E.class)}function lT(e,E){return{staticClass:cT(e.staticClass,E.staticClass),class:R(e.class)?[e.class,E.class]:E.class}}function cT(e,E){return e?E?e+" "+E:e:E||""}function uT(e){return Array.isArray(e)?function(e){for(var E,t="",T=0,r=e.length;T<r;T++)R(E=uT(e[T]))&&""!==E&&(t&&(t+=" "),t+=E);return t}(e):o(e)?function(e){var E="";for(var t in e)e[t]&&(E&&(E+=" "),E+=t);return E}(e):"string"==typeof e?e:""}var pT={svg:"http://www.w3.org/2000/svg",math:"http://www.w3.org/1998/Math/MathML"},DT=l("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),PT=l("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",!0),dT=function(e){return DT(e)||PT(e)};function fT(e){return PT(e)?"svg":"math"===e?"math":void 0}var MT=Object.create(null);var UT=l("text,number,password,search,email,tel,url");function hT(e){if("string"==typeof e){var E=document.querySelector(e);return E||document.createElement("div")}return e}var vT=Object.freeze({__proto__:null,createElement:function(e,E){var t=document.createElement(e);return"select"!==e||E.data&&E.data.attrs&&void 0!==E.data.attrs.multiple&&t.setAttribute("multiple","multiple"),t},createElementNS:function(e,E){return document.createElementNS(pT[e],E)},createTextNode:function(e){return document.createTextNode(e)},createComment:function(e){return document.createComment(e)},insertBefore:function(e,E,t){e.insertBefore(E,t)},removeChild:function(e,E){e.removeChild(E)},appendChild:function(e,E){e.appendChild(E)},parentNode:function(e){return e.parentNode},nextSibling:function(e){return e.nextSibling},tagName:function(e){return e.tagName},setTextContent:function(e,E){e.textContent=E},setStyleScope:function(e,E){e.setAttribute(E,"")}}),mT={create:function(e,E){GT(E)},update:function(e,E){e.data.ref!==E.data.ref&&(GT(e,!0),GT(E))},destroy:function(e){GT(e,!0)}};function GT(e,E){var t=e.data.ref;if(R(t)){var T=e.context,r=e.componentInstance||e.elm,s=E?null:r,i=E?void 0:r;if(a(t))Et(t,T,[s],T,"template ref function");else{var A=e.data.refInFor,o="string"==typeof t||"number"==typeof t,S=We(t),I=T.$refs;if(o||S)if(A){var O=o?I[t]:t.value;E?n(O)&&p(O,r):n(O)?O.includes(r)||O.push(r):o?(I[t]=[r],yT(T,t,I[t])):t.value=[r]}else if(o){if(E&&I[t]!==r)return;I[t]=i,yT(T,t,s)}else if(S){if(E&&t.value!==r)return;t.value=s}else 0}}}function yT(e,E,t){var T=e._setupState;T&&P(T,E)&&(We(T[E])?T[E].value=t:T[E]=t)}var HT=new Ne("",{},[]),gT=["create","activate","update","remove","destroy"];function BT(e,E){return e.key===E.key&&e.asyncFactory===E.asyncFactory&&(e.tag===E.tag&&e.isComment===E.isComment&&R(e.data)===R(E.data)&&function(e,E){if("input"!==e.tag)return!0;var t,T=R(t=e.data)&&R(t=t.attrs)&&t.type,r=R(t=E.data)&&R(t=t.attrs)&&t.type;return T===r||UT(T)&&UT(r)}(e,E)||i(e.isAsyncPlaceholder)&&s(E.asyncFactory.error))}function FT(e,E,t){var T,r,n={};for(T=E;T<=t;++T)R(r=e[T].key)&&(n[r]=T);return n}var YT={create:bT,update:bT,destroy:function(e){bT(e,HT)}};function bT(e,E){(e.data.directives||E.data.directives)&&function(e,E){var t,T,r,n=e===HT,s=E===HT,R=WT(e.data.directives,e.context),i=WT(E.data.directives,E.context),A=[],a=[];for(t in i)T=R[t],r=i[t],T?(r.oldValue=T.value,r.oldArg=T.arg,QT(r,"update",E,e),r.def&&r.def.componentUpdated&&a.push(r)):(QT(r,"bind",E,e),r.def&&r.def.inserted&&A.push(r));if(A.length){var o=function(){for(var t=0;t<A.length;t++)QT(A[t],"inserted",E,e)};n?Ke(E,"insert",o):o()}a.length&&Ke(E,"postpatch",(function(){for(var t=0;t<a.length;t++)QT(a[t],"componentUpdated",E,e)}));if(!n)for(t in R)i[t]||QT(R[t],"unbind",e,e,s)}(e,E)}var VT=Object.create(null);function WT(e,E){var t,T,r=Object.create(null);if(!e)return r;for(t=0;t<e.length;t++){if((T=e[t]).modifiers||(T.modifiers=VT),r[xT(T)]=T,E._setupState&&E._setupState.__sfc){var n=T.def||$t(E,"_setupState","v-"+T.name);T.def="function"==typeof n?{bind:n,update:n}:n}T.def=T.def||$t(E.$options,"directives",T.name)}return r}function xT(e){return e.rawName||"".concat(e.name,".").concat(Object.keys(e.modifiers||{}).join("."))}function QT(e,E,t,T,r){var n=e.def&&e.def[E];if(n)try{n(t.elm,e,t,T,r)}catch(T){et(T,t.context,"directive ".concat(e.name," ").concat(E," hook"))}}var XT=[mT,YT];function wT(e,E){var t=E.componentOptions;if(!(R(t)&&!1===t.Ctor.options.inheritAttrs||s(e.data.attrs)&&s(E.data.attrs))){var T,r,n=E.elm,A=e.data.attrs||{},a=E.data.attrs||{};for(T in(R(a.__ob__)||i(a._v_attr_proxy))&&(a=E.data.attrs=y({},a)),a)r=a[T],A[T]!==r&&KT(n,T,r,E.data.pre);for(T in(z||Ee)&&a.value!==A.value&&KT(n,"value",a.value),A)s(a[T])&&(NT(T)?n.removeAttributeNS(OT,LT(T)):oT(T)||n.removeAttribute(T))}}function KT(e,E,t,T){T||e.tagName.indexOf("-")>-1?$T(e,E,t):IT(E)?_T(t)?e.removeAttribute(E):(t="allowfullscreen"===E&&"EMBED"===e.tagName?"true":E,e.setAttribute(E,t)):oT(E)?e.setAttribute(E,function(e,E){return _T(E)||"false"===E?"false":"contenteditable"===e&&ST(E)?E:"true"}(E,t)):NT(E)?_T(t)?e.removeAttributeNS(OT,LT(E)):e.setAttributeNS(OT,E,t):$T(e,E,t)}function $T(e,E,t){if(_T(t))e.removeAttribute(E);else{if(z&&!ee&&"TEXTAREA"===e.tagName&&"placeholder"===E&&""!==t&&!e.__ieph){var T=function(E){E.stopImmediatePropagation(),e.removeEventListener("input",T)};e.addEventListener("input",T),e.__ieph=!0}e.setAttribute(E,t)}}var kT={create:wT,update:wT};function JT(e,E){var t=E.elm,T=E.data,r=e.data;if(!(s(T.staticClass)&&s(T.class)&&(s(r)||s(r.staticClass)&&s(r.class)))){var n=CT(E),i=t._transitionClasses;R(i)&&(n=cT(n,uT(i))),n!==t._prevClass&&(t.setAttribute("class",n),t._prevClass=n)}}var ZT,qT,jT,zT,er,Er,tr={create:JT,update:JT},Tr=/[\w).+\-_$\]]/;function rr(e){var E,t,T,r,n,s=!1,R=!1,i=!1,A=!1,a=0,o=0,S=0,I=0;for(T=0;T<e.length;T++)if(t=E,E=e.charCodeAt(T),s)39===E&&92!==t&&(s=!1);else if(R)34===E&&92!==t&&(R=!1);else if(i)96===E&&92!==t&&(i=!1);else if(A)47===E&&92!==t&&(A=!1);else if(124!==E||124===e.charCodeAt(T+1)||124===e.charCodeAt(T-1)||a||o||S){switch(E){case 34:R=!0;break;case 39:s=!0;break;case 96:i=!0;break;case 40:S++;break;case 41:S--;break;case 91:o++;break;case 93:o--;break;case 123:a++;break;case 125:a--}if(47===E){for(var O=T-1,N=void 0;O>=0&&" "===(N=e.charAt(O));O--);N&&Tr.test(N)||(A=!0)}}else void 0===r?(I=T+1,r=e.slice(0,T).trim()):L();function L(){(n||(n=[])).push(e.slice(I,T).trim()),I=T+1}if(void 0===r?r=e.slice(0,T).trim():0!==I&&L(),n)for(T=0;T<n.length;T++)r=nr(r,n[T]);return r}function nr(e,E){var t=E.indexOf("(");if(t<0)return'_f("'.concat(E,'")(').concat(e,")");var T=E.slice(0,t),r=E.slice(t+1);return'_f("'.concat(T,'")(').concat(e).concat(")"!==r?","+r:r)}function sr(e,E){console.error("[Vue compiler]: ".concat(e))}function Rr(e,E){return e?e.map((function(e){return e[E]})).filter((function(e){return e})):[]}function ir(e,E,t,T,r){(e.props||(e.props=[])).push(_r({name:E,value:t,dynamic:r},T)),e.plain=!1}function Ar(e,E,t,T,r){(r?e.dynamicAttrs||(e.dynamicAttrs=[]):e.attrs||(e.attrs=[])).push(_r({name:E,value:t,dynamic:r},T)),e.plain=!1}function ar(e,E,t,T){e.attrsMap[E]=t,e.attrsList.push(_r({name:E,value:t},T))}function or(e,E,t,T,r,n,s,R){(e.directives||(e.directives=[])).push(_r({name:E,rawName:t,value:T,arg:r,isDynamicArg:n,modifiers:s},R)),e.plain=!1}function Sr(e,E,t){return t?"_p(".concat(E,',"').concat(e,'")'):e+E}function Ir(e,E,t,T,n,s,R,i){var A;(T=T||r).right?i?E="(".concat(E,")==='click'?'contextmenu':(").concat(E,")"):"click"===E&&(E="contextmenu",delete T.right):T.middle&&(i?E="(".concat(E,")==='click'?'mouseup':(").concat(E,")"):"click"===E&&(E="mouseup")),T.capture&&(delete T.capture,E=Sr("!",E,i)),T.once&&(delete T.once,E=Sr("~",E,i)),T.passive&&(delete T.passive,E=Sr("&",E,i)),T.native?(delete T.native,A=e.nativeEvents||(e.nativeEvents={})):A=e.events||(e.events={});var a=_r({value:t.trim(),dynamic:i},R);T!==r&&(a.modifiers=T);var o=A[E];Array.isArray(o)?n?o.unshift(a):o.push(a):A[E]=o?n?[a,o]:[o,a]:a,e.plain=!1}function Or(e,E,t){var T=Nr(e,":"+E)||Nr(e,"v-bind:"+E);if(null!=T)return rr(T);if(!1!==t){var r=Nr(e,E);if(null!=r)return JSON.stringify(r)}}function Nr(e,E,t){var T;if(null!=(T=e.attrsMap[E]))for(var r=e.attrsList,n=0,s=r.length;n<s;n++)if(r[n].name===E){r.splice(n,1);break}return t&&delete e.attrsMap[E],T}function Lr(e,E){for(var t=e.attrsList,T=0,r=t.length;T<r;T++){var n=t[T];if(E.test(n.name))return t.splice(T,1),n}}function _r(e,E){return E&&(null!=E.start&&(e.start=E.start),null!=E.end&&(e.end=E.end)),e}function Cr(e,E,t){var T=t||{},r=T.number,n="$$v",s=n;T.trim&&(s="(typeof ".concat(n," === 'string'")+"? ".concat(n,".trim()")+": ".concat(n,")")),r&&(s="_n(".concat(s,")"));var R=lr(E,s);e.model={value:"(".concat(E,")"),expression:JSON.stringify(E),callback:"function (".concat(n,") {").concat(R,"}")}}function lr(e,E){var t=function(e){if(e=e.trim(),ZT=e.length,e.indexOf("[")<0||e.lastIndexOf("]")<ZT-1)return(zT=e.lastIndexOf("."))>-1?{exp:e.slice(0,zT),key:'"'+e.slice(zT+1)+'"'}:{exp:e,key:null};qT=e,zT=er=Er=0;for(;!ur();)pr(jT=cr())?Pr(jT):91===jT&&Dr(jT);return{exp:e.slice(0,er),key:e.slice(er+1,Er)}}(e);return null===t.key?"".concat(e,"=").concat(E):"$set(".concat(t.exp,", ").concat(t.key,", ").concat(E,")")}function cr(){return qT.charCodeAt(++zT)}function ur(){return zT>=ZT}function pr(e){return 34===e||39===e}function Dr(e){var E=1;for(er=zT;!ur();)if(pr(e=cr()))Pr(e);else if(91===e&&E++,93===e&&E--,0===E){Er=zT;break}}function Pr(e){for(var E=e;!ur()&&(e=cr())!==E;);}var dr,fr="__r";function Mr(e,E,t){var T=dr;return function r(){var n=E.apply(null,arguments);null!==n&&vr(e,r,t,T)}}var Ur=nt&&!(re&&Number(re[1])<=53);function hr(e,E,t,T){if(Ur){var r=XE,n=E;E=n._wrapper=function(e){if(e.target===e.currentTarget||e.timeStamp>=r||e.timeStamp<=0||e.target.ownerDocument!==document)return n.apply(this,arguments)}}dr.addEventListener(e,E,se?{capture:t,passive:T}:t)}function vr(e,E,t,T){(T||dr).removeEventListener(e,E._wrapper||E,t)}function mr(e,E){if(!s(e.data.on)||!s(E.data.on)){var t=E.data.on||{},T=e.data.on||{};dr=E.elm||e.elm,function(e){if(R(e.__r)){var E=z?"change":"input";e[E]=[].concat(e.__r,e[E]||[]),delete e.__r}R(e.__c)&&(e.change=[].concat(e.__c,e.change||[]),delete e.__c)}(t),we(t,T,hr,vr,Mr,E.context),dr=void 0}}var Gr,yr={create:mr,update:mr,destroy:function(e){return mr(e,HT)}};function Hr(e,E){if(!s(e.data.domProps)||!s(E.data.domProps)){var t,T,r=E.elm,n=e.data.domProps||{},A=E.data.domProps||{};for(t in(R(A.__ob__)||i(A._v_attr_proxy))&&(A=E.data.domProps=y({},A)),n)t in A||(r[t]="");for(t in A){if(T=A[t],"textContent"===t||"innerHTML"===t){if(E.children&&(E.children.length=0),T===n[t])continue;1===r.childNodes.length&&r.removeChild(r.childNodes[0])}if("value"===t&&"PROGRESS"!==r.tagName){r._value=T;var a=s(T)?"":String(T);gr(r,a)&&(r.value=a)}else if("innerHTML"===t&&PT(r.tagName)&&s(r.innerHTML)){(Gr=Gr||document.createElement("div")).innerHTML="<svg>".concat(T,"</svg>");for(var o=Gr.firstChild;r.firstChild;)r.removeChild(r.firstChild);for(;o.firstChild;)r.appendChild(o.firstChild)}else if(T!==n[t])try{r[t]=T}catch(e){}}}}function gr(e,E){return!e.composing&&("OPTION"===e.tagName||function(e,E){var t=!0;try{t=document.activeElement!==e}catch(e){}return t&&e.value!==E}(e,E)||function(e,E){var t=e.value,T=e._vModifiers;if(R(T)){if(T.number)return C(t)!==C(E);if(T.trim)return t.trim()!==E.trim()}return t!==E}(e,E))}var Br={create:Hr,update:Hr},Fr=d((function(e){var E={},t=/:(.+)/;return e.split(/;(?![^(]*\))/g).forEach((function(e){if(e){var T=e.split(t);T.length>1&&(E[T[0].trim()]=T[1].trim())}})),E}));function Yr(e){var E=br(e.style);return e.staticStyle?y(e.staticStyle,E):E}function br(e){return Array.isArray(e)?H(e):"string"==typeof e?Fr(e):e}var Vr,Wr=/^--/,xr=/\s*!important$/,Qr=function(e,E,t){if(Wr.test(E))e.style.setProperty(E,t);else if(xr.test(t))e.style.setProperty(v(E),t.replace(xr,""),"important");else{var T=wr(E);if(Array.isArray(t))for(var r=0,n=t.length;r<n;r++)e.style[T]=t[r];else e.style[T]=t}},Xr=["Webkit","Moz","ms"],wr=d((function(e){if(Vr=Vr||document.createElement("div").style,"filter"!==(e=M(e))&&e in Vr)return e;for(var E=e.charAt(0).toUpperCase()+e.slice(1),t=0;t<Xr.length;t++){var T=Xr[t]+E;if(T in Vr)return T}}));function Kr(e,E){var t=E.data,T=e.data;if(!(s(t.staticStyle)&&s(t.style)&&s(T.staticStyle)&&s(T.style))){var r,n,i=E.elm,A=T.staticStyle,a=T.normalizedStyle||T.style||{},o=A||a,S=br(E.data.style)||{};E.data.normalizedStyle=R(S.__ob__)?y({},S):S;var I=function(e,E){var t,T={};if(E)for(var r=e;r.componentInstance;)(r=r.componentInstance._vnode)&&r.data&&(t=Yr(r.data))&&y(T,t);(t=Yr(e.data))&&y(T,t);for(var n=e;n=n.parent;)n.data&&(t=Yr(n.data))&&y(T,t);return T}(E,!0);for(n in o)s(I[n])&&Qr(i,n,"");for(n in I)(r=I[n])!==o[n]&&Qr(i,n,null==r?"":r)}}var $r={create:Kr,update:Kr},kr=/\s+/;function Jr(e,E){if(E&&(E=E.trim()))if(e.classList)E.indexOf(" ")>-1?E.split(kr).forEach((function(E){return e.classList.add(E)})):e.classList.add(E);else{var t=" ".concat(e.getAttribute("class")||""," ");t.indexOf(" "+E+" ")<0&&e.setAttribute("class",(t+E).trim())}}function Zr(e,E){if(E&&(E=E.trim()))if(e.classList)E.indexOf(" ")>-1?E.split(kr).forEach((function(E){return e.classList.remove(E)})):e.classList.remove(E),e.classList.length||e.removeAttribute("class");else{for(var t=" ".concat(e.getAttribute("class")||""," "),T=" "+E+" ";t.indexOf(T)>=0;)t=t.replace(T," ");(t=t.trim())?e.setAttribute("class",t):e.removeAttribute("class")}}function qr(e){if(e){if("object"==typeof e){var E={};return!1!==e.css&&y(E,jr(e.name||"v")),y(E,e),E}return"string"==typeof e?jr(e):void 0}}var jr=d((function(e){return{enterClass:"".concat(e,"-enter"),enterToClass:"".concat(e,"-enter-to"),enterActiveClass:"".concat(e,"-enter-active"),leaveClass:"".concat(e,"-leave"),leaveToClass:"".concat(e,"-leave-to"),leaveActiveClass:"".concat(e,"-leave-active")}})),zr=q&&!ee,en="transition",En="animation",tn="transition",Tn="transitionend",rn="animation",nn="animationend";zr&&(void 0===window.ontransitionend&&void 0!==window.onwebkittransitionend&&(tn="WebkitTransition",Tn="webkitTransitionEnd"),void 0===window.onanimationend&&void 0!==window.onwebkitanimationend&&(rn="WebkitAnimation",nn="webkitAnimationEnd"));var sn=q?window.requestAnimationFrame?window.requestAnimationFrame.bind(window):setTimeout:function(e){return e()};function Rn(e){sn((function(){sn(e)}))}function An(e,E){var t=e._transitionClasses||(e._transitionClasses=[]);t.indexOf(E)<0&&(t.push(E),Jr(e,E))}function an(e,E){e._transitionClasses&&p(e._transitionClasses,E),Zr(e,E)}function on(e,E,t){var T=In(e,E),r=T.type,n=T.timeout,s=T.propCount;if(!r)return t();var R=r===en?Tn:nn,i=0,A=function(){e.removeEventListener(R,a),t()},a=function(E){E.target===e&&++i>=s&&A()};setTimeout((function(){i<s&&A()}),n+1),e.addEventListener(R,a)}var Sn=/\b(transform|all)(,|$)/;function In(e,E){var t,T=window.getComputedStyle(e),r=(T[tn+"Delay"]||"").split(", "),n=(T[tn+"Duration"]||"").split(", "),s=On(r,n),R=(T[rn+"Delay"]||"").split(", "),i=(T[rn+"Duration"]||"").split(", "),A=On(R,i),a=0,o=0;return E===en?s>0&&(t=en,a=s,o=n.length):E===En?A>0&&(t=En,a=A,o=i.length):o=(t=(a=Math.max(s,A))>0?s>A?en:En:null)?t===en?n.length:i.length:0,{type:t,timeout:a,propCount:o,hasTransform:t===en&&Sn.test(T[tn+"Property"])}}function On(e,E){for(;e.length<E.length;)e=e.concat(e);return Math.max.apply(null,E.map((function(E,t){return Nn(E)+Nn(e[t])})))}function Nn(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Ln(e,E){var t=e.elm;R(t._leaveCb)&&(t._leaveCb.cancelled=!0,t._leaveCb());var T=qr(e.data.transition);if(!s(T)&&!R(t._enterCb)&&1===t.nodeType){for(var r=T.css,n=T.type,i=T.enterClass,A=T.enterToClass,S=T.enterActiveClass,I=T.appearClass,O=T.appearToClass,N=T.appearActiveClass,L=T.beforeEnter,_=T.enter,l=T.afterEnter,c=T.enterCancelled,u=T.beforeAppear,p=T.appear,D=T.afterAppear,P=T.appearCancelled,d=T.duration,f=GE,M=GE.$vnode;M&&M.parent;)f=M.context,M=M.parent;var U=!f._isMounted||!e.isRootInsert;if(!U||p||""===p){var h=U&&I?I:i,v=U&&N?N:S,m=U&&O?O:A,G=U&&u||L,y=U&&a(p)?p:_,H=U&&D||l,g=U&&P||c,B=C(o(d)?d.enter:d);0;var F=!1!==r&&!ee,Y=ln(y),b=t._enterCb=V((function(){F&&(an(t,m),an(t,v)),b.cancelled?(F&&an(t,h),g&&g(t)):H&&H(t),t._enterCb=null}));e.data.show||Ke(e,"insert",(function(){var E=t.parentNode,T=E&&E._pending&&E._pending[e.key];T&&T.tag===e.tag&&T.elm._leaveCb&&T.elm._leaveCb(),y&&y(t,b)})),G&&G(t),F&&(An(t,h),An(t,v),Rn((function(){an(t,h),b.cancelled||(An(t,m),Y||(Cn(B)?setTimeout(b,B):on(t,n,b)))}))),e.data.show&&(E&&E(),y&&y(t,b)),F||Y||b()}}}function _n(e,E){var t=e.elm;R(t._enterCb)&&(t._enterCb.cancelled=!0,t._enterCb());var T=qr(e.data.transition);if(s(T)||1!==t.nodeType)return E();if(!R(t._leaveCb)){var r=T.css,n=T.type,i=T.leaveClass,A=T.leaveToClass,a=T.leaveActiveClass,S=T.beforeLeave,I=T.leave,O=T.afterLeave,N=T.leaveCancelled,L=T.delayLeave,_=T.duration,l=!1!==r&&!ee,c=ln(I),u=C(o(_)?_.leave:_);0;var p=t._leaveCb=V((function(){t.parentNode&&t.parentNode._pending&&(t.parentNode._pending[e.key]=null),l&&(an(t,A),an(t,a)),p.cancelled?(l&&an(t,i),N&&N(t)):(E(),O&&O(t)),t._leaveCb=null}));L?L(D):D()}function D(){p.cancelled||(!e.data.show&&t.parentNode&&((t.parentNode._pending||(t.parentNode._pending={}))[e.key]=e),S&&S(t),l&&(An(t,i),An(t,a),Rn((function(){an(t,i),p.cancelled||(An(t,A),c||(Cn(u)?setTimeout(p,u):on(t,n,p)))}))),I&&I(t,p),l||c||p())}}function Cn(e){return"number"==typeof e&&!isNaN(e)}function ln(e){if(s(e))return!1;var E=e.fns;return R(E)?ln(Array.isArray(E)?E[0]:E):(e._length||e.length)>1}function cn(e,E){!0!==E.data.show&&Ln(E)}var un=function(e){var E,t,T={},r=e.modules,a=e.nodeOps;for(E=0;E<gT.length;++E)for(T[gT[E]]=[],t=0;t<r.length;++t)R(r[t][gT[E]])&&T[gT[E]].push(r[t][gT[E]]);function o(e){var E=a.parentNode(e);R(E)&&a.removeChild(E,e)}function S(e,E,t,r,n,s,A){if(R(e.elm)&&R(s)&&(e=s[A]=Ce(e)),e.isRootInsert=!n,!function(e,E,t,r){var n=e.data;if(R(n)){var s=R(e.componentInstance)&&n.keepAlive;if(R(n=n.hook)&&R(n=n.init)&&n(e,!1),R(e.componentInstance))return I(e,E),O(t,e.elm,r),i(s)&&function(e,E,t,r){var n,s=e;for(;s.componentInstance;)if(R(n=(s=s.componentInstance._vnode).data)&&R(n=n.transition)){for(n=0;n<T.activate.length;++n)T.activate[n](HT,s);E.push(s);break}O(t,e.elm,r)}(e,E,t,r),!0}}(e,E,t,r)){var o=e.data,S=e.children,L=e.tag;R(L)?(e.elm=e.ns?a.createElementNS(e.ns,L):a.createElement(L,e),C(e),N(e,S,E),R(o)&&_(e,E),O(t,e.elm,r)):i(e.isComment)?(e.elm=a.createComment(e.text),O(t,e.elm,r)):(e.elm=a.createTextNode(e.text),O(t,e.elm,r))}}function I(e,E){R(e.data.pendingInsert)&&(E.push.apply(E,e.data.pendingInsert),e.data.pendingInsert=null),e.elm=e.componentInstance.$el,L(e)?(_(e,E),C(e)):(GT(e),E.push(e))}function O(e,E,t){R(e)&&(R(t)?a.parentNode(t)===e&&a.insertBefore(e,E,t):a.appendChild(e,E))}function N(e,E,t){if(n(E)){0;for(var T=0;T<E.length;++T)S(E[T],t,e.elm,null,!0,E,T)}else A(e.text)&&a.appendChild(e.elm,a.createTextNode(String(e.text)))}function L(e){for(;e.componentInstance;)e=e.componentInstance._vnode;return R(e.tag)}function _(e,t){for(var r=0;r<T.create.length;++r)T.create[r](HT,e);R(E=e.data.hook)&&(R(E.create)&&E.create(HT,e),R(E.insert)&&t.push(e))}function C(e){var E;if(R(E=e.fnScopeId))a.setStyleScope(e.elm,E);else for(var t=e;t;)R(E=t.context)&&R(E=E.$options._scopeId)&&a.setStyleScope(e.elm,E),t=t.parent;R(E=GE)&&E!==e.context&&E!==e.fnContext&&R(E=E.$options._scopeId)&&a.setStyleScope(e.elm,E)}function c(e,E,t,T,r,n){for(;T<=r;++T)S(t[T],n,e,E,!1,t,T)}function u(e){var E,t,r=e.data;if(R(r))for(R(E=r.hook)&&R(E=E.destroy)&&E(e),E=0;E<T.destroy.length;++E)T.destroy[E](e);if(R(E=e.children))for(t=0;t<e.children.length;++t)u(e.children[t])}function p(e,E,t){for(;E<=t;++E){var T=e[E];R(T)&&(R(T.tag)?(D(T),u(T)):o(T.elm))}}function D(e,E){if(R(E)||R(e.data)){var t,r=T.remove.length+1;for(R(E)?E.listeners+=r:E=function(e,E){function t(){0==--t.listeners&&o(e)}return t.listeners=E,t}(e.elm,r),R(t=e.componentInstance)&&R(t=t._vnode)&&R(t.data)&&D(t,E),t=0;t<T.remove.length;++t)T.remove[t](e,E);R(t=e.data.hook)&&R(t=t.remove)?t(e,E):E()}else o(e.elm)}function P(e,E,t,T){for(var r=t;r<T;r++){var n=E[r];if(R(n)&&BT(e,n))return r}}function d(e,E,t,r,n,A){if(e!==E){R(E.elm)&&R(r)&&(E=r[n]=Ce(E));var o=E.elm=e.elm;if(i(e.isAsyncPlaceholder))R(E.asyncFactory.resolved)?U(e.elm,E,t):E.isAsyncPlaceholder=!0;else if(i(E.isStatic)&&i(e.isStatic)&&E.key===e.key&&(i(E.isCloned)||i(E.isOnce)))E.componentInstance=e.componentInstance;else{var I,O=E.data;R(O)&&R(I=O.hook)&&R(I=I.prepatch)&&I(e,E);var N=e.children,_=E.children;if(R(O)&&L(E)){for(I=0;I<T.update.length;++I)T.update[I](e,E);R(I=O.hook)&&R(I=I.update)&&I(e,E)}s(E.text)?R(N)&&R(_)?N!==_&&function(e,E,t,T,r){var n,i,A,o=0,I=0,O=E.length-1,N=E[0],L=E[O],_=t.length-1,C=t[0],l=t[_],u=!r;for(;o<=O&&I<=_;)s(N)?N=E[++o]:s(L)?L=E[--O]:BT(N,C)?(d(N,C,T,t,I),N=E[++o],C=t[++I]):BT(L,l)?(d(L,l,T,t,_),L=E[--O],l=t[--_]):BT(N,l)?(d(N,l,T,t,_),u&&a.insertBefore(e,N.elm,a.nextSibling(L.elm)),N=E[++o],l=t[--_]):BT(L,C)?(d(L,C,T,t,I),u&&a.insertBefore(e,L.elm,N.elm),L=E[--O],C=t[++I]):(s(n)&&(n=FT(E,o,O)),s(i=R(C.key)?n[C.key]:P(C,E,o,O))?S(C,T,e,N.elm,!1,t,I):BT(A=E[i],C)?(d(A,C,T,t,I),E[i]=void 0,u&&a.insertBefore(e,A.elm,N.elm)):S(C,T,e,N.elm,!1,t,I),C=t[++I]);o>O?c(e,s(t[_+1])?null:t[_+1].elm,t,I,_,T):I>_&&p(E,o,O)}(o,N,_,t,A):R(_)?(R(e.text)&&a.setTextContent(o,""),c(o,null,_,0,_.length-1,t)):R(N)?p(N,0,N.length-1):R(e.text)&&a.setTextContent(o,""):e.text!==E.text&&a.setTextContent(o,E.text),R(O)&&R(I=O.hook)&&R(I=I.postpatch)&&I(e,E)}}}function f(e,E,t){if(i(t)&&R(e.parent))e.parent.data.pendingInsert=E;else for(var T=0;T<E.length;++T)E[T].data.hook.insert(E[T])}var M=l("attrs,class,staticClass,staticStyle,key");function U(e,E,t,T){var r,n=E.tag,s=E.data,A=E.children;if(T=T||s&&s.pre,E.elm=e,i(E.isComment)&&R(E.asyncFactory))return E.isAsyncPlaceholder=!0,!0;if(R(s)&&(R(r=s.hook)&&R(r=r.init)&&r(E,!0),R(r=E.componentInstance)))return I(E,t),!0;if(R(n)){if(R(A))if(e.hasChildNodes())if(R(r=s)&&R(r=r.domProps)&&R(r=r.innerHTML)){if(r!==e.innerHTML)return!1}else{for(var a=!0,o=e.firstChild,S=0;S<A.length;S++){if(!o||!U(o,A[S],t,T)){a=!1;break}o=o.nextSibling}if(!a||o)return!1}else N(E,A,t);if(R(s)){var O=!1;for(var L in s)if(!M(L)){O=!0,_(E,t);break}!O&&s.class&&Lt(s.class)}}else e.data!==E.text&&(e.data=E.text);return!0}return function(e,E,t,r){if(!s(E)){var n,A=!1,o=[];if(s(e))A=!0,S(E,o);else{var I=R(e.nodeType);if(!I&&BT(e,E))d(e,E,o,null,null,r);else{if(I){if(1===e.nodeType&&e.hasAttribute(x)&&(e.removeAttribute(x),t=!0),i(t)&&U(e,E,o))return f(E,o,!0),e;n=e,e=new Ne(a.tagName(n).toLowerCase(),{},[],void 0,n)}var O=e.elm,N=a.parentNode(O);if(S(E,o,O._leaveCb?null:N,a.nextSibling(O)),R(E.parent))for(var _=E.parent,C=L(E);_;){for(var l=0;l<T.destroy.length;++l)T.destroy[l](_);if(_.elm=E.elm,C){for(var c=0;c<T.create.length;++c)T.create[c](HT,_);var D=_.data.hook.insert;if(D.merged)for(var P=1;P<D.fns.length;P++)D.fns[P]()}else GT(_);_=_.parent}R(N)?p([e],0,0):R(e.tag)&&u(e)}}return f(E,o,A),E.elm}R(e)&&u(e)}}({nodeOps:vT,modules:[kT,tr,yr,Br,$r,q?{create:cn,activate:cn,remove:function(e,E){!0!==e.data.show?_n(e,E):E()}}:{}].concat(XT)});ee&&document.addEventListener("selectionchange",(function(){var e=document.activeElement;e&&e.vmodel&&hn(e,"input")}));var pn={inserted:function(e,E,t,T){"select"===t.tag?(T.elm&&!T.elm._vOptions?Ke(t,"postpatch",(function(){pn.componentUpdated(e,E,t)})):Dn(e,E,t.context),e._vOptions=[].map.call(e.options,fn)):("textarea"===t.tag||UT(e.type))&&(e._vModifiers=E.modifiers,E.modifiers.lazy||(e.addEventListener("compositionstart",Mn),e.addEventListener("compositionend",Un),e.addEventListener("change",Un),ee&&(e.vmodel=!0)))},componentUpdated:function(e,E,t){if("select"===t.tag){Dn(e,E,t.context);var T=e._vOptions,r=e._vOptions=[].map.call(e.options,fn);if(r.some((function(e,E){return!Y(e,T[E])})))(e.multiple?E.value.some((function(e){return dn(e,r)})):E.value!==E.oldValue&&dn(E.value,r))&&hn(e,"change")}}};function Dn(e,E,t){Pn(e,E,t),(z||Ee)&&setTimeout((function(){Pn(e,E,t)}),0)}function Pn(e,E,t){var T=E.value,r=e.multiple;if(!r||Array.isArray(T)){for(var n,s,R=0,i=e.options.length;R<i;R++)if(s=e.options[R],r)n=b(T,fn(s))>-1,s.selected!==n&&(s.selected=n);else if(Y(fn(s),T))return void(e.selectedIndex!==R&&(e.selectedIndex=R));r||(e.selectedIndex=-1)}}function dn(e,E){return E.every((function(E){return!Y(E,e)}))}function fn(e){return"_value"in e?e._value:e.value}function Mn(e){e.target.composing=!0}function Un(e){e.target.composing&&(e.target.composing=!1,hn(e.target,"input"))}function hn(e,E){var t=document.createEvent("HTMLEvents");t.initEvent(E,!0,!0),e.dispatchEvent(t)}function vn(e){return!e.componentInstance||e.data&&e.data.transition?e:vn(e.componentInstance._vnode)}var mn={bind:function(e,E,t){var T=E.value,r=(t=vn(t)).data&&t.data.transition,n=e.__vOriginalDisplay="none"===e.style.display?"":e.style.display;T&&r?(t.data.show=!0,Ln(t,(function(){e.style.display=n}))):e.style.display=T?n:"none"},update:function(e,E,t){var T=E.value;!T!=!E.oldValue&&((t=vn(t)).data&&t.data.transition?(t.data.show=!0,T?Ln(t,(function(){e.style.display=e.__vOriginalDisplay})):_n(t,(function(){e.style.display="none"}))):e.style.display=T?e.__vOriginalDisplay:"none")},unbind:function(e,E,t,T,r){r||(e.style.display=e.__vOriginalDisplay)}},Gn={model:pn,show:mn},yn={name:String,appear:Boolean,css:Boolean,mode:String,type:String,enterClass:String,leaveClass:String,enterToClass:String,leaveToClass:String,enterActiveClass:String,leaveActiveClass:String,appearClass:String,appearActiveClass:String,appearToClass:String,duration:[Number,String,Object]};function Hn(e){var E=e&&e.componentOptions;return E&&E.Ctor.options.abstract?Hn(ME(E.children)):e}function gn(e){var E={},t=e.$options;for(var T in t.propsData)E[T]=e[T];var r=t._parentListeners;for(var T in r)E[M(T)]=r[T];return E}function Bn(e,E){if(/\d-keep-alive$/.test(E.tag))return e("keep-alive",{props:E.componentOptions.propsData})}var Fn=function(e){return e.tag||LE(e)},Yn=function(e){return"show"===e.name},bn={name:"transition",props:yn,abstract:!0,render:function(e){var E=this,t=this.$slots.default;if(t&&(t=t.filter(Fn)).length){0;var T=this.mode;0;var r=t[0];if(function(e){for(;e=e.parent;)if(e.data.transition)return!0}(this.$vnode))return r;var n=Hn(r);if(!n)return r;if(this._leaving)return Bn(e,r);var s="__transition-".concat(this._uid,"-");n.key=null==n.key?n.isComment?s+"comment":s+n.tag:A(n.key)?0===String(n.key).indexOf(s)?n.key:s+n.key:n.key;var R=(n.data||(n.data={})).transition=gn(this),i=this._vnode,a=Hn(i);if(n.data.directives&&n.data.directives.some(Yn)&&(n.data.show=!0),a&&a.data&&!function(e,E){return E.key===e.key&&E.tag===e.tag}(n,a)&&!LE(a)&&(!a.componentInstance||!a.componentInstance._vnode.isComment)){var o=a.data.transition=y({},R);if("out-in"===T)return this._leaving=!0,Ke(o,"afterLeave",(function(){E._leaving=!1,E.$forceUpdate()})),Bn(e,r);if("in-out"===T){if(LE(n))return i;var S,I=function(){S()};Ke(R,"afterEnter",I),Ke(R,"enterCancelled",I),Ke(o,"delayLeave",(function(e){S=e}))}}return r}}},Vn=y({tag:String,moveClass:String},yn);delete Vn.mode;var Wn={props:Vn,beforeMount:function(){var e=this,E=this._update;this._update=function(t,T){var r=yE(e);e.__patch__(e._vnode,e.kept,!1,!0),e._vnode=e.kept,r(),E.call(e,t,T)}},render:function(e){for(var E=this.tag||this.$vnode.data.tag||"span",t=Object.create(null),T=this.prevChildren=this.children,r=this.$slots.default||[],n=this.children=[],s=gn(this),R=0;R<r.length;R++){if((a=r[R]).tag)if(null!=a.key&&0!==String(a.key).indexOf("__vlist"))n.push(a),t[a.key]=a,(a.data||(a.data={})).transition=s;else;}if(T){var i=[],A=[];for(R=0;R<T.length;R++){var a;(a=T[R]).data.transition=s,a.data.pos=a.elm.getBoundingClientRect(),t[a.key]?i.push(a):A.push(a)}this.kept=e(E,null,i),this.removed=A}return e(E,null,n)},updated:function(){var e=this.prevChildren,E=this.moveClass||(this.name||"v")+"-move";e.length&&this.hasMove(e[0].elm,E)&&(e.forEach(xn),e.forEach(Qn),e.forEach(Xn),this._reflow=document.body.offsetHeight,e.forEach((function(e){if(e.data.moved){var t=e.elm,T=t.style;An(t,E),T.transform=T.WebkitTransform=T.transitionDuration="",t.addEventListener(Tn,t._moveCb=function e(T){T&&T.target!==t||T&&!/transform$/.test(T.propertyName)||(t.removeEventListener(Tn,e),t._moveCb=null,an(t,E))})}})))},methods:{hasMove:function(e,E){if(!zr)return!1;if(this._hasMove)return this._hasMove;var t=e.cloneNode();e._transitionClasses&&e._transitionClasses.forEach((function(e){Zr(t,e)})),Jr(t,E),t.style.display="none",this.$el.appendChild(t);var T=In(t);return this.$el.removeChild(t),this._hasMove=T.hasTransform}}};function xn(e){e.elm._moveCb&&e.elm._moveCb(),e.elm._enterCb&&e.elm._enterCb()}function Qn(e){e.data.newPos=e.elm.getBoundingClientRect()}function Xn(e){var E=e.data.pos,t=e.data.newPos,T=E.left-t.left,r=E.top-t.top;if(T||r){e.data.moved=!0;var n=e.elm.style;n.transform=n.WebkitTransform="translate(".concat(T,"px,").concat(r,"px)"),n.transitionDuration="0s"}}var wn={Transition:bn,TransitionGroup:Wn};zt.config.mustUseProp=aT,zt.config.isReservedTag=dT,zt.config.isReservedAttr=iT,zt.config.getTagNamespace=fT,zt.config.isUnknownElement=function(e){if(!q)return!0;if(dT(e))return!1;if(e=e.toLowerCase(),null!=MT[e])return MT[e];var E=document.createElement(e);return e.indexOf("-")>-1?MT[e]=E.constructor===window.HTMLUnknownElement||E.constructor===window.HTMLElement:MT[e]=/HTMLUnknownElement/.test(E.toString())},y(zt.options.directives,Gn),y(zt.options.components,wn),zt.prototype.__patch__=q?un:g,zt.prototype.$mount=function(e,E){return function(e,E,t){var T;e.$el=E,e.$options.render||(e.$options.render=Le),FE(e,"beforeMount"),T=function(){e._update(e._render(),t)},new lt(e,T,g,{before:function(){e._isMounted&&!e._isDestroyed&&FE(e,"beforeUpdate")}},!0),t=!1;var r=e._preWatchers;if(r)for(var n=0;n<r.length;n++)r[n].run();return null==e.$vnode&&(e._isMounted=!0,FE(e,"mounted")),e}(this,e=e&&q?hT(e):void 0,E)},q&&setTimeout((function(){w.devtools&&Ae&&Ae.emit("init",zt)}),0);var Kn=/\{\{((?:.|\r?\n)+?)\}\}/g,$n=/[-.*+?^${}()|[\]\/\\]/g,kn=d((function(e){var E=e[0].replace($n,"\\$&"),t=e[1].replace($n,"\\$&");return new RegExp(E+"((?:.|\\n)+?)"+t,"g")}));var Jn={staticKeys:["staticClass"],transformNode:function(e,E){E.warn;var t=Nr(e,"class");t&&(e.staticClass=JSON.stringify(t.replace(/\s+/g," ").trim()));var T=Or(e,"class",!1);T&&(e.classBinding=T)},genData:function(e){var E="";return e.staticClass&&(E+="staticClass:".concat(e.staticClass,",")),e.classBinding&&(E+="class:".concat(e.classBinding,",")),E}};var Zn,qn={staticKeys:["staticStyle"],transformNode:function(e,E){E.warn;var t=Nr(e,"style");t&&(e.staticStyle=JSON.stringify(Fr(t)));var T=Or(e,"style",!1);T&&(e.styleBinding=T)},genData:function(e){var E="";return e.staticStyle&&(E+="staticStyle:".concat(e.staticStyle,",")),e.styleBinding&&(E+="style:(".concat(e.styleBinding,"),")),E}},jn=function(e){return(Zn=Zn||document.createElement("div")).innerHTML=e,Zn.textContent},zn=l("area,base,br,col,embed,frame,hr,img,input,isindex,keygen,link,meta,param,source,track,wbr"),es=l("colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source"),Es=l("address,article,aside,base,blockquote,body,caption,col,colgroup,dd,details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,title,tr,track"),ts=/^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,Ts=/^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/,rs="[a-zA-Z_][\\-\\.0-9_a-zA-Z".concat(K.source,"]*"),ns="((?:".concat(rs,"\\:)?").concat(rs,")"),ss=new RegExp("^<".concat(ns)),Rs=/^\s*(\/?)>/,is=new RegExp("^<\\/".concat(ns,"[^>]*>")),As=/^<!DOCTYPE [^>]+>/i,as=/^<!\--/,os=/^<!\[/,Ss=l("script,style,textarea",!0),Is={},Os={"&lt;":"<","&gt;":">","&quot;":'"',"&amp;":"&","&#10;":"\n","&#9;":"\t","&#39;":"'"},Ns=/&(?:lt|gt|quot|amp|#39);/g,Ls=/&(?:lt|gt|quot|amp|#39|#10|#9);/g,_s=l("pre,textarea",!0),Cs=function(e,E){return e&&_s(e)&&"\n"===E[0]};function ls(e,E){var t=E?Ls:Ns;return e.replace(t,(function(e){return Os[e]}))}function cs(e,E){for(var t,T,r=[],n=E.expectHTML,s=E.isUnaryTag||B,R=E.canBeLeftOpenTag||B,i=0,A=function(){if(t=e,T&&Ss(T)){var A=0,S=T.toLowerCase(),I=Is[S]||(Is[S]=new RegExp("([\\s\\S]*?)(</"+S+"[^>]*>)","i"));p=e.replace(I,(function(e,t,T){return A=T.length,Ss(S)||"noscript"===S||(t=t.replace(/<!\--([\s\S]*?)-->/g,"$1").replace(/<!\[CDATA\[([\s\S]*?)]]>/g,"$1")),Cs(S,t)&&(t=t.slice(1)),E.chars&&E.chars(t),""}));i+=e.length-p.length,e=p,o(S,i-A,i)}else{var O=e.indexOf("<");if(0===O){if(as.test(e)){var N=e.indexOf("--\x3e");if(N>=0)return E.shouldKeepComment&&E.comment&&E.comment(e.substring(4,N),i,i+N+3),a(N+3),"continue"}if(os.test(e)){var L=e.indexOf("]>");if(L>=0)return a(L+2),"continue"}var _=e.match(As);if(_)return a(_[0].length),"continue";var C=e.match(is);if(C){var l=i;return a(C[0].length),o(C[1],l,i),"continue"}var c=function(){var E=e.match(ss);if(E){var t={tagName:E[1],attrs:[],start:i};a(E[0].length);for(var T=void 0,r=void 0;!(T=e.match(Rs))&&(r=e.match(Ts)||e.match(ts));)r.start=i,a(r[0].length),r.end=i,t.attrs.push(r);if(T)return t.unarySlash=T[1],a(T[0].length),t.end=i,t}}();if(c)return function(e){var t=e.tagName,i=e.unarySlash;n&&("p"===T&&Es(t)&&o(T),R(t)&&T===t&&o(t));for(var A=s(t)||!!i,a=e.attrs.length,S=new Array(a),I=0;I<a;I++){var O=e.attrs[I],N=O[3]||O[4]||O[5]||"",L="a"===t&&"href"===O[1]?E.shouldDecodeNewlinesForHref:E.shouldDecodeNewlines;S[I]={name:O[1],value:ls(N,L)}}A||(r.push({tag:t,lowerCasedTag:t.toLowerCase(),attrs:S,start:e.start,end:e.end}),T=t);E.start&&E.start(t,S,A,e.start,e.end)}(c),Cs(c.tagName,e)&&a(1),"continue"}var u=void 0,p=void 0,D=void 0;if(O>=0){for(p=e.slice(O);!(is.test(p)||ss.test(p)||as.test(p)||os.test(p)||(D=p.indexOf("<",1))<0);)O+=D,p=e.slice(O);u=e.substring(0,O)}O<0&&(u=e),u&&a(u.length),E.chars&&u&&E.chars(u,i-u.length,i)}if(e===t)return E.chars&&E.chars(e),"break"};e;){if("break"===A())break}function a(E){i+=E,e=e.substring(E)}function o(e,t,n){var s,R;if(null==t&&(t=i),null==n&&(n=i),e)for(R=e.toLowerCase(),s=r.length-1;s>=0&&r[s].lowerCasedTag!==R;s--);else s=0;if(s>=0){for(var A=r.length-1;A>=s;A--)E.end&&E.end(r[A].tag,t,n);r.length=s,T=s&&r[s-1].tag}else"br"===R?E.start&&E.start(e,[],!0,t,n):"p"===R&&(E.start&&E.start(e,[],!1,t,n),E.end&&E.end(e,t,n))}o()}var us,ps,Ds,Ps,ds,fs,Ms,Us,hs=/^@|^v-on:/,vs=/^v-|^@|^:|^#/,ms=/([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/,Gs=/,([^,\}\]]*)(?:,([^,\}\]]*))?$/,ys=/^\(|\)$/g,Hs=/^\[.*\]$/,gs=/:(.*)$/,Bs=/^:|^\.|^v-bind:/,Fs=/\.[^.\]]+(?=[^\]]*$)/g,Ys=/^v-slot(:|$)|^#/,bs=/[\r\n]/,Vs=/[ \f\t\r\n]+/g,Ws=d(jn),xs="_empty_";function Qs(e,E,t){return{type:1,tag:e,attrsList:E,attrsMap:Zs(E),rawAttrsMap:{},parent:t,children:[]}}function Xs(e,E){us=E.warn||sr,fs=E.isPreTag||B,Ms=E.mustUseProp||B,Us=E.getTagNamespace||B;var t=E.isReservedTag||B;(function(e){return!(!(e.component||e.attrsMap[":is"]||e.attrsMap["v-bind:is"])&&(e.attrsMap.is?t(e.attrsMap.is):t(e.tag)))}),Ds=Rr(E.modules,"transformNode"),Ps=Rr(E.modules,"preTransformNode"),ds=Rr(E.modules,"postTransformNode"),ps=E.delimiters;var T,r,n=[],s=!1!==E.preserveWhitespace,R=E.whitespace,i=!1,A=!1;function a(e){if(o(e),i||e.processed||(e=ws(e,E)),n.length||e===T||T.if&&(e.elseif||e.else)&&$s(T,{exp:e.elseif,block:e}),r&&!e.forbidden)if(e.elseif||e.else)s=e,R=function(e){for(var E=e.length;E--;){if(1===e[E].type)return e[E];e.pop()}}(r.children),R&&R.if&&$s(R,{exp:s.elseif,block:s});else{if(e.slotScope){var t=e.slotTarget||'"default"';(r.scopedSlots||(r.scopedSlots={}))[t]=e}r.children.push(e),e.parent=r}var s,R;e.children=e.children.filter((function(e){return!e.slotScope})),o(e),e.pre&&(i=!1),fs(e.tag)&&(A=!1);for(var a=0;a<ds.length;a++)ds[a](e,E)}function o(e){if(!A)for(var E=void 0;(E=e.children[e.children.length-1])&&3===E.type&&" "===E.text;)e.children.pop()}return cs(e,{warn:us,expectHTML:E.expectHTML,isUnaryTag:E.isUnaryTag,canBeLeftOpenTag:E.canBeLeftOpenTag,shouldDecodeNewlines:E.shouldDecodeNewlines,shouldDecodeNewlinesForHref:E.shouldDecodeNewlinesForHref,shouldKeepComment:E.comments,outputSourceRange:E.outputSourceRange,start:function(e,t,s,R,o){var S=r&&r.ns||Us(e);z&&"svg"===S&&(t=function(e){for(var E=[],t=0;t<e.length;t++){var T=e[t];qs.test(T.name)||(T.name=T.name.replace(js,""),E.push(T))}return E}(t));var I,O=Qs(e,t,r);S&&(O.ns=S),"style"!==(I=O).tag&&("script"!==I.tag||I.attrsMap.type&&"text/javascript"!==I.attrsMap.type)||ie()||(O.forbidden=!0);for(var N=0;N<Ps.length;N++)O=Ps[N](O,E)||O;i||(!function(e){null!=Nr(e,"v-pre")&&(e.pre=!0)}(O),O.pre&&(i=!0)),fs(O.tag)&&(A=!0),i?function(e){var E=e.attrsList,t=E.length;if(t)for(var T=e.attrs=new Array(t),r=0;r<t;r++)T[r]={name:E[r].name,value:JSON.stringify(E[r].value)},null!=E[r].start&&(T[r].start=E[r].start,T[r].end=E[r].end);else e.pre||(e.plain=!0)}(O):O.processed||(Ks(O),function(e){var E=Nr(e,"v-if");if(E)e.if=E,$s(e,{exp:E,block:e});else{null!=Nr(e,"v-else")&&(e.else=!0);var t=Nr(e,"v-else-if");t&&(e.elseif=t)}}(O),function(e){null!=Nr(e,"v-once")&&(e.once=!0)}(O)),T||(T=O),s?a(O):(r=O,n.push(O))},end:function(e,E,t){var T=n[n.length-1];n.length-=1,r=n[n.length-1],a(T)},chars:function(e,E,t){if(r&&(!z||"textarea"!==r.tag||r.attrsMap.placeholder!==e)){var T,n=r.children;if(e=A||e.trim()?"script"===(T=r).tag||"style"===T.tag?e:Ws(e):n.length?R?"condense"===R&&bs.test(e)?"":" ":s?" ":"":""){A||"condense"!==R||(e=e.replace(Vs," "));var a=void 0,o=void 0;!i&&" "!==e&&(a=function(e,E){var t=E?kn(E):Kn;if(t.test(e)){for(var T,r,n,s=[],R=[],i=t.lastIndex=0;T=t.exec(e);){(r=T.index)>i&&(R.push(n=e.slice(i,r)),s.push(JSON.stringify(n)));var A=rr(T[1].trim());s.push("_s(".concat(A,")")),R.push({"@binding":A}),i=r+T[0].length}return i<e.length&&(R.push(n=e.slice(i)),s.push(JSON.stringify(n))),{expression:s.join("+"),tokens:R}}}(e,ps))?o={type:2,expression:a.expression,tokens:a.tokens,text:e}:" "===e&&n.length&&" "===n[n.length-1].text||(o={type:3,text:e}),o&&n.push(o)}}},comment:function(e,E,t){if(r){var T={type:3,text:e,isComment:!0};0,r.children.push(T)}}}),T}function ws(e,E){var t;!function(e){var E=Or(e,"key");if(E){e.key=E}}(e),e.plain=!e.key&&!e.scopedSlots&&!e.attrsList.length,function(e){var E=Or(e,"ref");E&&(e.ref=E,e.refInFor=function(e){var E=e;for(;E;){if(void 0!==E.for)return!0;E=E.parent}return!1}(e))}(e),function(e){var E;"template"===e.tag?(E=Nr(e,"scope"),e.slotScope=E||Nr(e,"slot-scope")):(E=Nr(e,"slot-scope"))&&(e.slotScope=E);var t=Or(e,"slot");t&&(e.slotTarget='""'===t?'"default"':t,e.slotTargetDynamic=!(!e.attrsMap[":slot"]&&!e.attrsMap["v-bind:slot"]),"template"===e.tag||e.slotScope||Ar(e,"slot",t,function(e,E){return e.rawAttrsMap[":"+E]||e.rawAttrsMap["v-bind:"+E]||e.rawAttrsMap[E]}(e,"slot")));if("template"===e.tag){if(s=Lr(e,Ys)){0;var T=ks(s),r=T.name,n=T.dynamic;e.slotTarget=r,e.slotTargetDynamic=n,e.slotScope=s.value||xs}}else{var s;if(s=Lr(e,Ys)){0;var R=e.scopedSlots||(e.scopedSlots={}),i=ks(s),A=i.name,a=(n=i.dynamic,R[A]=Qs("template",[],e));a.slotTarget=A,a.slotTargetDynamic=n,a.children=e.children.filter((function(e){if(!e.slotScope)return e.parent=a,!0})),a.slotScope=s.value||xs,e.children=[],e.plain=!1}}}(e),"slot"===(t=e).tag&&(t.slotName=Or(t,"name")),function(e){var E;(E=Or(e,"is"))&&(e.component=E);null!=Nr(e,"inline-template")&&(e.inlineTemplate=!0)}(e);for(var T=0;T<Ds.length;T++)e=Ds[T](e,E)||e;return function(e){var E,t,T,r,n,s,R,i,A=e.attrsList;for(E=0,t=A.length;E<t;E++){if(T=r=A[E].name,n=A[E].value,vs.test(T))if(e.hasBindings=!0,(s=Js(T.replace(vs,"")))&&(T=T.replace(Fs,"")),Bs.test(T))T=T.replace(Bs,""),n=rr(n),(i=Hs.test(T))&&(T=T.slice(1,-1)),s&&(s.prop&&!i&&"innerHtml"===(T=M(T))&&(T="innerHTML"),s.camel&&!i&&(T=M(T)),s.sync&&(R=lr(n,"$event"),i?Ir(e,'"update:"+('.concat(T,")"),R,null,!1,0,A[E],!0):(Ir(e,"update:".concat(M(T)),R,null,!1,0,A[E]),v(T)!==M(T)&&Ir(e,"update:".concat(v(T)),R,null,!1,0,A[E])))),s&&s.prop||!e.component&&Ms(e.tag,e.attrsMap.type,T)?ir(e,T,n,A[E],i):Ar(e,T,n,A[E],i);else if(hs.test(T))T=T.replace(hs,""),(i=Hs.test(T))&&(T=T.slice(1,-1)),Ir(e,T,n,s,!1,0,A[E],i);else{var a=(T=T.replace(vs,"")).match(gs),o=a&&a[1];i=!1,o&&(T=T.slice(0,-(o.length+1)),Hs.test(o)&&(o=o.slice(1,-1),i=!0)),or(e,T,r,n,o,i,s,A[E])}else Ar(e,T,JSON.stringify(n),A[E]),!e.component&&"muted"===T&&Ms(e.tag,e.attrsMap.type,T)&&ir(e,T,"true",A[E])}}(e),e}function Ks(e){var E;if(E=Nr(e,"v-for")){var t=function(e){var E=e.match(ms);if(!E)return;var t={};t.for=E[2].trim();var T=E[1].trim().replace(ys,""),r=T.match(Gs);r?(t.alias=T.replace(Gs,"").trim(),t.iterator1=r[1].trim(),r[2]&&(t.iterator2=r[2].trim())):t.alias=T;return t}(E);t&&y(e,t)}}function $s(e,E){e.ifConditions||(e.ifConditions=[]),e.ifConditions.push(E)}function ks(e){var E=e.name.replace(Ys,"");return E||"#"!==e.name[0]&&(E="default"),Hs.test(E)?{name:E.slice(1,-1),dynamic:!0}:{name:'"'.concat(E,'"'),dynamic:!1}}function Js(e){var E=e.match(Fs);if(E){var t={};return E.forEach((function(e){t[e.slice(1)]=!0})),t}}function Zs(e){for(var E={},t=0,T=e.length;t<T;t++)E[e[t].name]=e[t].value;return E}var qs=/^xmlns:NS\d+/,js=/^NS\d+:/;function zs(e){return Qs(e.tag,e.attrsList.slice(),e.parent)}var eR={preTransformNode:function(e,E){if("input"===e.tag){var t=e.attrsMap;if(!t["v-model"])return;var T=void 0;if((t[":type"]||t["v-bind:type"])&&(T=Or(e,"type")),t.type||T||!t["v-bind"]||(T="(".concat(t["v-bind"],").type")),T){var r=Nr(e,"v-if",!0),n=r?"&&(".concat(r,")"):"",s=null!=Nr(e,"v-else",!0),R=Nr(e,"v-else-if",!0),i=zs(e);Ks(i),ar(i,"type","checkbox"),ws(i,E),i.processed=!0,i.if="(".concat(T,")==='checkbox'")+n,$s(i,{exp:i.if,block:i});var A=zs(e);Nr(A,"v-for",!0),ar(A,"type","radio"),ws(A,E),$s(i,{exp:"(".concat(T,")==='radio'")+n,block:A});var a=zs(e);return Nr(a,"v-for",!0),ar(a,":type",T),ws(a,E),$s(i,{exp:r,block:a}),s?i.else=!0:R&&(i.elseif=R),i}}}},ER=[Jn,qn,eR];var tR,TR,rR={model:function(e,E,t){t;var T=E.value,r=E.modifiers,n=e.tag,s=e.attrsMap.type;if(e.component)return Cr(e,T,r),!1;if("select"===n)!function(e,E,t){var T=t&&t.number,r='Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;'+"return ".concat(T?"_n(val)":"val","})"),n="$event.target.multiple ? $$selectedVal : $$selectedVal[0]",s="var $$selectedVal = ".concat(r,";");s="".concat(s," ").concat(lr(E,n)),Ir(e,"change",s,null,!0)}(e,T,r);else if("input"===n&&"checkbox"===s)!function(e,E,t){var T=t&&t.number,r=Or(e,"value")||"null",n=Or(e,"true-value")||"true",s=Or(e,"false-value")||"false";ir(e,"checked","Array.isArray(".concat(E,")")+"?_i(".concat(E,",").concat(r,")>-1")+("true"===n?":(".concat(E,")"):":_q(".concat(E,",").concat(n,")"))),Ir(e,"change","var $$a=".concat(E,",")+"$$el=$event.target,"+"$$c=$$el.checked?(".concat(n,"):(").concat(s,");")+"if(Array.isArray($$a)){"+"var $$v=".concat(T?"_n("+r+")":r,",")+"$$i=_i($$a,$$v);"+"if($$el.checked){$$i<0&&(".concat(lr(E,"$$a.concat([$$v])"),")}")+"else{$$i>-1&&(".concat(lr(E,"$$a.slice(0,$$i).concat($$a.slice($$i+1))"),")}")+"}else{".concat(lr(E,"$$c"),"}"),null,!0)}(e,T,r);else if("input"===n&&"radio"===s)!function(e,E,t){var T=t&&t.number,r=Or(e,"value")||"null";r=T?"_n(".concat(r,")"):r,ir(e,"checked","_q(".concat(E,",").concat(r,")")),Ir(e,"change",lr(E,r),null,!0)}(e,T,r);else if("input"===n||"textarea"===n)!function(e,E,t){var T=e.attrsMap.type;0;var r=t||{},n=r.lazy,s=r.number,R=r.trim,i=!n&&"range"!==T,A=n?"change":"range"===T?fr:"input",a="$event.target.value";R&&(a="$event.target.value.trim()");s&&(a="_n(".concat(a,")"));var o=lr(E,a);i&&(o="if($event.target.composing)return;".concat(o));ir(e,"value","(".concat(E,")")),Ir(e,A,o,null,!0),(R||s)&&Ir(e,"blur","$forceUpdate()")}(e,T,r);else{if(!w.isReservedTag(n))return Cr(e,T,r),!1}return!0},text:function(e,E){E.value&&ir(e,"textContent","_s(".concat(E.value,")"),E)},html:function(e,E){E.value&&ir(e,"innerHTML","_s(".concat(E.value,")"),E)}},nR={expectHTML:!0,modules:ER,directives:rR,isPreTag:function(e){return"pre"===e},isUnaryTag:zn,mustUseProp:aT,canBeLeftOpenTag:es,isReservedTag:dT,getTagNamespace:fT,staticKeys:function(e){return e.reduce((function(e,E){return e.concat(E.staticKeys||[])}),[]).join(",")}(ER)},sR=d((function(e){return l("type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap"+(e?","+e:""))}));function RR(e,E){e&&(tR=sR(E.staticKeys||""),TR=E.isReservedTag||B,iR(e),AR(e,!1))}function iR(e){if(e.static=function(e){if(2===e.type)return!1;if(3===e.type)return!0;return!(!e.pre&&(e.hasBindings||e.if||e.for||c(e.tag)||!TR(e.tag)||function(e){for(;e.parent;){if("template"!==(e=e.parent).tag)return!1;if(e.for)return!0}return!1}(e)||!Object.keys(e).every(tR)))}(e),1===e.type){if(!TR(e.tag)&&"slot"!==e.tag&&null==e.attrsMap["inline-template"])return;for(var E=0,t=e.children.length;E<t;E++){var T=e.children[E];iR(T),T.static||(e.static=!1)}if(e.ifConditions)for(E=1,t=e.ifConditions.length;E<t;E++){var r=e.ifConditions[E].block;iR(r),r.static||(e.static=!1)}}}function AR(e,E){if(1===e.type){if((e.static||e.once)&&(e.staticInFor=E),e.static&&e.children.length&&(1!==e.children.length||3!==e.children[0].type))return void(e.staticRoot=!0);if(e.staticRoot=!1,e.children)for(var t=0,T=e.children.length;t<T;t++)AR(e.children[t],E||!!e.for);if(e.ifConditions)for(t=1,T=e.ifConditions.length;t<T;t++)AR(e.ifConditions[t].block,E)}}var aR=/^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/,oR=/\([^)]*?\);*$/,SR=/^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/,IR={esc:27,tab:9,enter:13,space:32,up:38,left:37,right:39,down:40,delete:[8,46]},NR={esc:["Esc","Escape"],tab:"Tab",enter:"Enter",space:[" ","Spacebar"],up:["Up","ArrowUp"],left:["Left","ArrowLeft"],right:["Right","ArrowRight"],down:["Down","ArrowDown"],delete:["Backspace","Delete","Del"]},LR=function(e){return"if(".concat(e,")return null;")},_R={stop:"$event.stopPropagation();",prevent:"$event.preventDefault();",self:LR("$event.target !== $event.currentTarget"),ctrl:LR("!$event.ctrlKey"),shift:LR("!$event.shiftKey"),alt:LR("!$event.altKey"),meta:LR("!$event.metaKey"),left:LR("'button' in $event && $event.button !== 0"),middle:LR("'button' in $event && $event.button !== 1"),right:LR("'button' in $event && $event.button !== 2")};function CR(e,E){var t=E?"nativeOn:":"on:",T="",r="";for(var n in e){var s=lR(e[n]);e[n]&&e[n].dynamic?r+="".concat(n,",").concat(s,","):T+='"'.concat(n,'":').concat(s,",")}return T="{".concat(T.slice(0,-1),"}"),r?t+"_d(".concat(T,",[").concat(r.slice(0,-1),"])"):t+T}function lR(e){if(!e)return"function(){}";if(Array.isArray(e))return"[".concat(e.map((function(e){return lR(e)})).join(","),"]");var E=SR.test(e.value),t=aR.test(e.value),T=SR.test(e.value.replace(oR,""));if(e.modifiers){var r="",n="",s=[],R=function(E){if(_R[E])n+=_R[E],IR[E]&&s.push(E);else if("exact"===E){var t=e.modifiers;n+=LR(["ctrl","shift","alt","meta"].filter((function(e){return!t[e]})).map((function(e){return"$event.".concat(e,"Key")})).join("||"))}else s.push(E)};for(var i in e.modifiers)R(i);s.length&&(r+=function(e){return"if(!$event.type.indexOf('key')&&"+"".concat(e.map(cR).join("&&"),")return null;")}(s)),n&&(r+=n);var A=E?"return ".concat(e.value,".apply(null, arguments)"):t?"return (".concat(e.value,").apply(null, arguments)"):T?"return ".concat(e.value):e.value;return"function($event){".concat(r).concat(A,"}")}return E||t?e.value:"function($event){".concat(T?"return ".concat(e.value):e.value,"}")}function cR(e){var E=parseInt(e,10);if(E)return"$event.keyCode!==".concat(E);var t=IR[e],T=NR[e];return"_k($event.keyCode,"+"".concat(JSON.stringify(e),",")+"".concat(JSON.stringify(t),",")+"$event.key,"+"".concat(JSON.stringify(T))+")"}var uR={on:function(e,E){e.wrapListeners=function(e){return"_g(".concat(e,",").concat(E.value,")")}},bind:function(e,E){e.wrapData=function(t){return"_b(".concat(t,",'").concat(e.tag,"',").concat(E.value,",").concat(E.modifiers&&E.modifiers.prop?"true":"false").concat(E.modifiers&&E.modifiers.sync?",true":"",")")}},cloak:g},pR=function(e){this.options=e,this.warn=e.warn||sr,this.transforms=Rr(e.modules,"transformCode"),this.dataGenFns=Rr(e.modules,"genData"),this.directives=y(y({},uR),e.directives);var E=e.isReservedTag||B;this.maybeComponent=function(e){return!!e.component||!E(e.tag)},this.onceId=0,this.staticRenderFns=[],this.pre=!1};function DR(e,E){var t=new pR(E),T=e?"script"===e.tag?"null":PR(e,t):'_c("div")';return{render:"with(this){return ".concat(T,"}"),staticRenderFns:t.staticRenderFns}}function PR(e,E){if(e.parent&&(e.pre=e.pre||e.parent.pre),e.staticRoot&&!e.staticProcessed)return dR(e,E);if(e.once&&!e.onceProcessed)return fR(e,E);if(e.for&&!e.forProcessed)return hR(e,E);if(e.if&&!e.ifProcessed)return MR(e,E);if("template"!==e.tag||e.slotTarget||E.pre){if("slot"===e.tag)return function(e,E){var t=e.slotName||'"default"',T=yR(e,E),r="_t(".concat(t).concat(T?",function(){return ".concat(T,"}"):""),n=e.attrs||e.dynamicAttrs?BR((e.attrs||[]).concat(e.dynamicAttrs||[]).map((function(e){return{name:M(e.name),value:e.value,dynamic:e.dynamic}}))):null,s=e.attrsMap["v-bind"];!n&&!s||T||(r+=",null");n&&(r+=",".concat(n));s&&(r+="".concat(n?"":",null",",").concat(s));return r+")"}(e,E);var t=void 0;if(e.component)t=function(e,E,t){var T=E.inlineTemplate?null:yR(E,t,!0);return"_c(".concat(e,",").concat(vR(E,t)).concat(T?",".concat(T):"",")")}(e.component,e,E);else{var T=void 0,r=E.maybeComponent(e);(!e.plain||e.pre&&r)&&(T=vR(e,E));var n=void 0,s=E.options.bindings;r&&s&&!1!==s.__isScriptSetup&&(n=function(e,E){var t=M(E),T=U(t),r=function(r){return e[E]===r?E:e[t]===r?t:e[T]===r?T:void 0},n=r("setup-const")||r("setup-reactive-const");if(n)return n;var s=r("setup-let")||r("setup-ref")||r("setup-maybe-ref");if(s)return s}(s,e.tag)),n||(n="'".concat(e.tag,"'"));var R=e.inlineTemplate?null:yR(e,E,!0);t="_c(".concat(n).concat(T?",".concat(T):"").concat(R?",".concat(R):"",")")}for(var i=0;i<E.transforms.length;i++)t=E.transforms[i](e,t);return t}return yR(e,E)||"void 0"}function dR(e,E){e.staticProcessed=!0;var t=E.pre;return e.pre&&(E.pre=e.pre),E.staticRenderFns.push("with(this){return ".concat(PR(e,E),"}")),E.pre=t,"_m(".concat(E.staticRenderFns.length-1).concat(e.staticInFor?",true":"",")")}function fR(e,E){if(e.onceProcessed=!0,e.if&&!e.ifProcessed)return MR(e,E);if(e.staticInFor){for(var t="",T=e.parent;T;){if(T.for){t=T.key;break}T=T.parent}return t?"_o(".concat(PR(e,E),",").concat(E.onceId++,",").concat(t,")"):PR(e,E)}return dR(e,E)}function MR(e,E,t,T){return e.ifProcessed=!0,UR(e.ifConditions.slice(),E,t,T)}function UR(e,E,t,T){if(!e.length)return T||"_e()";var r=e.shift();return r.exp?"(".concat(r.exp,")?").concat(n(r.block),":").concat(UR(e,E,t,T)):"".concat(n(r.block));function n(e){return t?t(e,E):e.once?fR(e,E):PR(e,E)}}function hR(e,E,t,T){var r=e.for,n=e.alias,s=e.iterator1?",".concat(e.iterator1):"",R=e.iterator2?",".concat(e.iterator2):"";return e.forProcessed=!0,"".concat(T||"_l","((").concat(r,"),")+"function(".concat(n).concat(s).concat(R,"){")+"return ".concat((t||PR)(e,E))+"})"}function vR(e,E){var t="{",T=function(e,E){var t=e.directives;if(!t)return;var T,r,n,s,R="directives:[",i=!1;for(T=0,r=t.length;T<r;T++){n=t[T],s=!0;var A=E.directives[n.name];A&&(s=!!A(e,n,E.warn)),s&&(i=!0,R+='{name:"'.concat(n.name,'",rawName:"').concat(n.rawName,'"').concat(n.value?",value:(".concat(n.value,"),expression:").concat(JSON.stringify(n.value)):"").concat(n.arg?",arg:".concat(n.isDynamicArg?n.arg:'"'.concat(n.arg,'"')):"").concat(n.modifiers?",modifiers:".concat(JSON.stringify(n.modifiers)):"","},"))}if(i)return R.slice(0,-1)+"]"}(e,E);T&&(t+=T+","),e.key&&(t+="key:".concat(e.key,",")),e.ref&&(t+="ref:".concat(e.ref,",")),e.refInFor&&(t+="refInFor:true,"),e.pre&&(t+="pre:true,"),e.component&&(t+='tag:"'.concat(e.tag,'",'));for(var r=0;r<E.dataGenFns.length;r++)t+=E.dataGenFns[r](e);if(e.attrs&&(t+="attrs:".concat(BR(e.attrs),",")),e.props&&(t+="domProps:".concat(BR(e.props),",")),e.events&&(t+="".concat(CR(e.events,!1),",")),e.nativeEvents&&(t+="".concat(CR(e.nativeEvents,!0),",")),e.slotTarget&&!e.slotScope&&(t+="slot:".concat(e.slotTarget,",")),e.scopedSlots&&(t+="".concat(function(e,E,t){var T=e.for||Object.keys(E).some((function(e){var t=E[e];return t.slotTargetDynamic||t.if||t.for||mR(t)})),r=!!e.if;if(!T)for(var n=e.parent;n;){if(n.slotScope&&n.slotScope!==xs||n.for){T=!0;break}n.if&&(r=!0),n=n.parent}var s=Object.keys(E).map((function(e){return GR(E[e],t)})).join(",");return"scopedSlots:_u([".concat(s,"]").concat(T?",null,true":"").concat(!T&&r?",null,false,".concat(function(e){var E=5381,t=e.length;for(;t;)E=33*E^e.charCodeAt(--t);return E>>>0}(s)):"",")")}(e,e.scopedSlots,E),",")),e.model&&(t+="model:{value:".concat(e.model.value,",callback:").concat(e.model.callback,",expression:").concat(e.model.expression,"},")),e.inlineTemplate){var n=function(e,E){var t=e.children[0];0;if(t&&1===t.type){var T=DR(t,E.options);return"inlineTemplate:{render:function(){".concat(T.render,"},staticRenderFns:[").concat(T.staticRenderFns.map((function(e){return"function(){".concat(e,"}")})).join(","),"]}")}}(e,E);n&&(t+="".concat(n,","))}return t=t.replace(/,$/,"")+"}",e.dynamicAttrs&&(t="_b(".concat(t,',"').concat(e.tag,'",').concat(BR(e.dynamicAttrs),")")),e.wrapData&&(t=e.wrapData(t)),e.wrapListeners&&(t=e.wrapListeners(t)),t}function mR(e){return 1===e.type&&("slot"===e.tag||e.children.some(mR))}function GR(e,E){var t=e.attrsMap["slot-scope"];if(e.if&&!e.ifProcessed&&!t)return MR(e,E,GR,"null");if(e.for&&!e.forProcessed)return hR(e,E,GR);var T=e.slotScope===xs?"":String(e.slotScope),r="function(".concat(T,"){")+"return ".concat("template"===e.tag?e.if&&t?"(".concat(e.if,")?").concat(yR(e,E)||"undefined",":undefined"):yR(e,E)||"undefined":PR(e,E),"}"),n=T?"":",proxy:true";return"{key:".concat(e.slotTarget||'"default"',",fn:").concat(r).concat(n,"}")}function yR(e,E,t,T,r){var n=e.children;if(n.length){var s=n[0];if(1===n.length&&s.for&&"template"!==s.tag&&"slot"!==s.tag){var R=t?E.maybeComponent(s)?",1":",0":"";return"".concat((T||PR)(s,E)).concat(R)}var i=t?function(e,E){for(var t=0,T=0;T<e.length;T++){var r=e[T];if(1===r.type){if(HR(r)||r.ifConditions&&r.ifConditions.some((function(e){return HR(e.block)}))){t=2;break}(E(r)||r.ifConditions&&r.ifConditions.some((function(e){return E(e.block)})))&&(t=1)}}return t}(n,E.maybeComponent):0,A=r||gR;return"[".concat(n.map((function(e){return A(e,E)})).join(","),"]").concat(i?",".concat(i):"")}}function HR(e){return void 0!==e.for||"template"===e.tag||"slot"===e.tag}function gR(e,E){return 1===e.type?PR(e,E):3===e.type&&e.isComment?function(e){return"_e(".concat(JSON.stringify(e.text),")")}(e):"_v(".concat(2===(t=e).type?t.expression:FR(JSON.stringify(t.text)),")");var t}function BR(e){for(var E="",t="",T=0;T<e.length;T++){var r=e[T],n=FR(r.value);r.dynamic?t+="".concat(r.name,",").concat(n,","):E+='"'.concat(r.name,'":').concat(n,",")}return E="{".concat(E.slice(0,-1),"}"),t?"_d(".concat(E,",[").concat(t.slice(0,-1),"])"):E}function FR(e){return e.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")}new RegExp("\\b"+"do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,super,throw,while,yield,delete,export,import,return,switch,default,extends,finally,continue,debugger,function,arguments".split(",").join("\\b|\\b")+"\\b"),new RegExp("\\b"+"delete,typeof,void".split(",").join("\\s*\\([^\\)]*\\)|\\b")+"\\s*\\([^\\)]*\\)");function YR(e,E){try{return new Function(e)}catch(t){return E.push({err:t,code:e}),g}}function bR(e){var E=Object.create(null);return function(t,T,r){(T=y({},T)).warn;delete T.warn;var n=T.delimiters?String(T.delimiters)+t:t;if(E[n])return E[n];var s=e(t,T);var R={},i=[];return R.render=YR(s.render,i),R.staticRenderFns=s.staticRenderFns.map((function(e){return YR(e,i)})),E[n]=R}}var VR,WR,xR=(VR=function(e,E){var t=Xs(e.trim(),E);!1!==E.optimize&&RR(t,E);var T=DR(t,E);return{ast:t,render:T.render,staticRenderFns:T.staticRenderFns}},function(e){function E(E,t){var T=Object.create(e),r=[],n=[];if(t)for(var s in t.modules&&(T.modules=(e.modules||[]).concat(t.modules)),t.directives&&(T.directives=y(Object.create(e.directives||null),t.directives)),t)"modules"!==s&&"directives"!==s&&(T[s]=t[s]);T.warn=function(e,E,t){(t?n:r).push(e)};var R=VR(E.trim(),T);return R.errors=r,R.tips=n,R}return{compile:E,compileToFunctions:bR(E)}}),QR=xR(nR).compileToFunctions;function XR(e){return(WR=WR||document.createElement("div")).innerHTML=e?'<a href="\n"/>':'<div a="\n"/>',WR.innerHTML.indexOf("&#10;")>0}var wR=!!q&&XR(!1),KR=!!q&&XR(!0),$R=d((function(e){var E=hT(e);return E&&E.innerHTML})),kR=zt.prototype.$mount;zt.prototype.$mount=function(e,E){if((e=e&&hT(e))===document.body||e===document.documentElement)return this;var t=this.$options;if(!t.render){var T=t.template;if(T)if("string"==typeof T)"#"===T.charAt(0)&&(T=$R(T));else{if(!T.nodeType)return this;T=T.innerHTML}else e&&(T=function(e){if(e.outerHTML)return e.outerHTML;var E=document.createElement("div");return E.appendChild(e.cloneNode(!0)),E.innerHTML}(e));if(T){0;var r=QR(T,{outputSourceRange:!1,shouldDecodeNewlines:wR,shouldDecodeNewlinesForHref:KR,delimiters:t.delimiters,comments:t.comments},this),n=r.render,s=r.staticRenderFns;t.render=n,t.staticRenderFns=s}}return kR.call(this,e,E)},zt.compile=QR;var JR=t(906),ZR=t.n(JR);function qR(e,E,t,T,r,n,s,R){var i,A="function"==typeof e?e.options:e;if(E&&(A.render=E,A.staticRenderFns=t,A._compiled=!0),T&&(A.functional=!0),n&&(A._scopeId="data-v-"+n),s?(i=function(e){(e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext)||"undefined"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),r&&r.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(s)},A._ssrRegister=i):r&&(i=R?function(){r.call(this,(A.functional?this.parent:this).$root.$options.shadowRoot)}:r),i)if(A.functional){A._injectStyles=i;var a=A.render;A.render=function(e,E){return i.call(E),a(e,E)}}else{var o=A.beforeCreate;A.beforeCreate=o?[].concat(o,i):[i]}return{exports:e,options:A}}const jR=qR({},(function(){var e=this._self._c;return e("section",{staticClass:"hero is-primary"},[e("div",{staticClass:"hero-body"},[e("div",{staticClass:"container"},[e("svg",[e("use",{attrs:{"xlink:href":"#logo",href:"#logo"}})])])])])}),[],!1,null,null,null).exports;const zR={data:function(){return{serverInfo:null}},created:function(){var e=this;fetch("".concat("/query-adviser/api","/server-info")).then((function(e){return e.json()})).then((function(E){e.serverInfo=E}))}};const ei=qR(zR,(function(){var e=this,E=e._self._c;return E("footer",{staticClass:"footer"},[E("div",{staticClass:"content has-text-centered"},[e._m(0),e._v(" "),E("sub",{staticClass:"is-small"},[e._v("\n            "+e._s(e.serverInfo)+"\n        ")])])])}),[function(){var e=this,E=e._self._c;return E("p",[E("strong",[e._v("Laravel Query Adviser")]),e._v(" by\n            "),E("a",{attrs:{href:"https://socialblue.com"}},[e._v("Social Blue")]),e._v(".\n        ")])}],!1,null,null,null).exports;const Ei=qR({data:function(){return{message:"",showNotification:!1}},methods:{show:function(e){var E=this;this.message=e,this.showNotification=!0,setTimeout((function(){E.hide()}),2500)},hide:function(){this.message="",this.showNotification=!1}},created:function(){var e=this;window.EventBus.$on("show-notification",(function(E){e.show(E.message)}))}},(function(){var e=this,E=e._self._c;return E("transition",{attrs:{name:"component-fade",mode:"out-in"}},[e.showNotification?E("nav",{staticClass:"navbar is-fixed-bottom"},[E("div",{staticClass:"notification is-info is-fullwidth"},[E("button",{staticClass:"delete",on:{click:function(E){e.showNotification=!1}}}),e._v("\n            "+e._s(e.message)+"\n        ")])]):e._e()])}),[],!1,null,null,null).exports;const ti={name:"iconSheet"};var Ti=t(379),ri=t.n(Ti),ni=t(274),si={insert:"head",singleton:!1};ri()(ni.Z,si);ni.Z.locals;const Ri={components:{notification:Ei,pageHeader:jR,pageFooter:ei,svgSheet:qR(ti,(function(){var e=this,E=e._self._c;return E("svg",{attrs:{height:"0",width:"0"}},[E("defs",[E("symbol",{attrs:{id:"sql-time",viewBox:"34.046 37.202 439.919 429.365"}},[E("title",[e._v("Sql Time")]),e._v(" "),E("path",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-width":"50px",fill:"none"},attrs:{d:"M 247.441 438.212 C 388.426 438.212 476.541 284.952 406.049 162.346 C 335.557 39.739 159.327 39.739 88.832 162.346 C 67.878 198.794 60.005 241.355 66.528 282.927",transform:"matrix(0.063963, -0.997952, 0.997952, 0.063963, -22.039139, 485.105804)"}}),e._v(" "),E("path",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-width":"5px",fill:"rgb(58, 184, 157)"},attrs:{d:"M -436.261 -340.243 Q -428.915 -355.719 -421.57 -340.243 L -399.532 -293.816 Q -392.186 -278.34 -406.878 -278.34 L -450.953 -278.34 Q -465.645 -278.34 -458.299 -293.816 Z",transform:"matrix(-0.997849, -0.065561, 0.065561, -0.997849, 21.454376, -27.446959)",shape:"triangle -465.645 -355.719 73.459 77.379 0.5 0.2 1@f6cde521"}}),e._v(" "),E("g",[E("polyline",{staticStyle:{"stroke-width":"20px","stroke-linejoin":"round","stroke-linecap":"round",fill:"rgb(58, 184, 157)",stroke:"rgb(58, 184, 157)"},attrs:{points:"249.505 111.088 249.609 154.495"}}),e._v(" "),E("polyline",{staticStyle:{"stroke-width":"20px","stroke-linejoin":"round","stroke-linecap":"round",fill:"rgb(58, 184, 157)",stroke:"rgb(58, 184, 157)"},attrs:{points:"253.462 350.181 253.817 393.269"}}),e._v(" "),E("polyline",{staticStyle:{"stroke-width":"20px","stroke-linejoin":"round","stroke-linecap":"round",fill:"rgb(58, 184, 157)",stroke:"rgb(58, 184, 157)"},attrs:{points:"128.394 237.548 128.498 280.954",transform:"matrix(0.017452, 0.999848, -0.999848, 0.017452, 385.415884, 126.300122)"}}),e._v(" "),E("polyline",{staticStyle:{"stroke-width":"20px","stroke-linejoin":"round","stroke-linecap":"round",fill:"rgb(58, 184, 157)",stroke:"rgb(58, 184, 157)"},attrs:{points:"365.635 232.16 365.739 275.566",transform:"matrix(0.017452, 0.999848, -0.999848, 0.017452, 613.129387, -116.198729)"}})]),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 326.418 417.631 Q 326.418 413.198 324.152 410.932 Q 321.886 408.666 315.909 406.225 Q 305.002 402.092 300.221 396.538 Q 295.44 390.985 295.44 383.415 Q 295.44 374.251 301.939 368.697 Q 308.439 363.144 318.449 363.144 Q 325.123 363.144 330.353 365.958 Q 335.582 368.772 338.396 373.902 Q 341.21 379.032 341.21 385.556 L 326.617 385.556 Q 326.617 380.476 324.451 377.812 Q 322.284 375.147 318.2 375.147 Q 314.365 375.147 312.224 377.413 Q 310.082 379.679 310.082 383.514 Q 310.082 386.503 312.473 388.918 Q 314.863 391.334 320.94 393.924 Q 331.548 397.759 336.354 403.337 Q 341.16 408.915 341.16 417.531 Q 341.16 426.994 335.134 432.323 Q 329.107 437.652 318.748 437.652 Q 311.726 437.652 305.948 434.763 Q 300.171 431.875 296.909 426.496 Q 293.647 421.117 293.647 413.796 L 308.339 413.796 Q 308.339 420.071 310.779 422.91 Q 313.22 425.749 318.748 425.749 Q 326.418 425.749 326.418 417.631 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 401.858 406.026 Q 401.858 424.006 392.146 432.174 L 402.157 441.138 L 392.943 449.605 L 379.595 437.403 L 375.76 437.652 Q 363.458 437.652 356.511 429.31 Q 349.563 420.967 349.513 406.225 L 349.513 394.87 Q 349.513 379.928 356.436 371.536 Q 363.359 363.144 375.66 363.144 Q 387.663 363.144 394.636 371.213 Q 401.609 379.281 401.858 393.874 Z M 387.165 394.77 Q 387.165 384.859 384.327 380.128 Q 381.488 375.396 375.66 375.396 Q 369.833 375.396 367.044 380.003 Q 364.255 384.61 364.156 394.023 L 364.156 406.026 Q 364.156 415.987 367.019 420.718 Q 369.883 425.45 375.76 425.45 Q 381.488 425.45 384.302 420.743 Q 387.116 416.037 387.165 406.375 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 427.055 424.504 L 452.754 424.504 L 452.754 436.656 L 412.413 436.656 L 412.413 364.14 L 427.055 364.14 Z"}}),e._v(" "),E("g",{attrs:{transform:"matrix(0.707107, 0.707107, -0.707107, 0.707107, 249.550446, -96.62793)"}},[E("polyline",{staticStyle:{fill:"rgb(216, 216, 216)","stroke-width":"20px","stroke-linejoin":"round","stroke-linecap":"round",stroke:"rgb(58, 184, 157)"},attrs:{points:"249.505 111.088 249.609 154.495"}}),e._v(" "),E("polyline",{staticStyle:{fill:"rgb(216, 216, 216)","stroke-width":"20px","stroke-linejoin":"round","stroke-linecap":"round",stroke:"rgb(58, 184, 157)"},attrs:{points:"253.462 350.181 253.817 393.269"}}),e._v(" "),E("polyline",{staticStyle:{"stroke-width":"20px","stroke-linejoin":"round","stroke-linecap":"round",fill:"rgb(206, 206, 206)",stroke:"rgb(58, 184, 157)"},attrs:{points:"128.394 237.548 128.498 280.954",transform:"matrix(0.017452, 0.999848, -0.999848, 0.017452, 385.415884, 126.300122)"}}),e._v(" "),E("polyline",{staticStyle:{fill:"rgb(216, 216, 216)","stroke-width":"20px","stroke-linejoin":"round","stroke-linecap":"round",stroke:"rgb(58, 184, 157)"},attrs:{points:"365.635 232.16 365.739 275.566",transform:"matrix(0.017452, 0.999848, -0.999848, 0.017452, 613.129387, -116.198729)"}})]),e._v(" "),E("polyline",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)","stroke-width":"19px","stroke-linecap":"round","stroke-linejoin":"round"},attrs:{points:"168.219 164.254 244.316 257.241"}})]),e._v(" "),E("symbol",{attrs:{id:"query",viewBox:"104 96 85 88"}},[E("title",[e._v("Query")]),e._v(" "),E("g",[E("title",[e._v("Magnifying glass")]),e._v(" "),E("ellipse",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-width":"1.86439px","stroke-linejoin":"round","stroke-linecap":"square",fill:"rgb(58, 184, 157)"},attrs:{cx:"133.707",cy:"122.941",rx:"24.368",ry:"24.368"}}),e._v(" "),E("ellipse",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-width":"1.86439px","stroke-linejoin":"round","stroke-linecap":"square",fill:"rgb(255, 255, 255)"},attrs:{cx:"133.837",cy:"122.649",rx:"17.899",ry:"17.899"}}),e._v(" "),E("g",{attrs:{transform:"matrix(1, 0, 0, 1, 0.868287, -3.233797)"}},[E("title",[e._v("Graph")]),e._v(" "),E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)"},attrs:{x:"137.82",y:"127.903",width:"8.622",height:"9.681"}}),e._v(" "),E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)"},attrs:{x:"129.198",y:"123.063",width:"8.622",height:"14.521"}}),e._v(" "),E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)"},attrs:{x:"120.576",y:"113.382",width:"8.622",height:"24.202"}})]),e._v(" "),E("rect",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-width":"1.86439px","stroke-linejoin":"round","stroke-linecap":"square",fill:"rgb(58, 184, 157)"},attrs:{x:"127.857",y:"108.138",width:"48.944",height:"10.804",rx:"3.658",ry:"3.658",transform:"matrix(-0.681998, -0.731354, 0.731354, -0.681998, 189.106796, 349.15683)"}})]),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 118.771 168.708 Q 118.771 167.318 118.061 166.607 Q 117.35 165.896 115.475 165.13 Q 112.053 163.833 110.553 162.091 Q 109.053 160.349 109.053 157.974 Q 109.053 155.099 111.092 153.357 Q 113.131 151.614 116.271 151.614 Q 118.365 151.614 120.006 152.497 Q 121.646 153.38 122.529 154.989 Q 123.412 156.599 123.412 158.646 L 118.834 158.646 Q 118.834 157.052 118.154 156.216 Q 117.475 155.38 116.193 155.38 Q 114.99 155.38 114.318 156.091 Q 113.646 156.802 113.646 158.005 Q 113.646 158.943 114.396 159.7 Q 115.146 160.458 117.053 161.271 Q 120.381 162.474 121.889 164.224 Q 123.396 165.974 123.396 168.677 Q 123.396 171.646 121.506 173.318 Q 119.615 174.989 116.365 174.989 Q 114.162 174.989 112.35 174.083 Q 110.537 173.177 109.514 171.489 Q 108.49 169.802 108.49 167.505 L 113.1 167.505 Q 113.1 169.474 113.865 170.364 Q 114.631 171.255 116.365 171.255 Q 118.771 171.255 118.771 168.708 Z M 107.334 177.281 L 124.615 177.281 L 124.615 178.766 L 107.334 178.766 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 142.43 165.068 Q 142.43 170.708 139.383 173.271 L 142.524 176.083 L 139.633 178.739 L 135.446 174.911 L 134.242 174.989 Q 130.383 174.989 128.203 172.372 Q 126.024 169.755 126.008 165.13 L 126.008 161.568 Q 126.008 156.88 128.18 154.247 Q 130.352 151.614 134.211 151.614 Q 137.977 151.614 140.164 154.146 Q 142.352 156.677 142.43 161.255 Z M 137.821 161.536 Q 137.821 158.427 136.93 156.943 Q 136.039 155.458 134.211 155.458 Q 132.383 155.458 131.508 156.904 Q 130.633 158.349 130.602 161.302 L 130.602 165.068 Q 130.602 168.193 131.5 169.677 Q 132.399 171.161 134.242 171.161 Q 136.039 171.161 136.922 169.685 Q 137.805 168.208 137.821 165.177 Z M 124.602 177.281 L 143.914 177.281 L 143.914 178.766 L 124.602 178.766 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 150.339 170.864 L 158.401 170.864 L 158.401 174.677 L 145.745 174.677 L 145.745 151.927 L 150.339 151.927 Z M 143.917 177.281 L 159.229 177.281 L 159.229 178.766 L 143.917 178.766 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre"},attrs:{d:"M 250.872 154.665 L 250.872 152.518 L 252.425 152.518 L 252.425 152.771 L 251.156 152.771 L 251.156 153.429 L 252.344 153.429 L 252.344 153.681 L 251.156 153.681 L 251.156 154.412 L 252.475 154.412 L 252.475 154.665 Z M 252.817 154.665 L 252.817 153.109 L 253.055 153.109 L 253.055 153.331 Q 253.226 153.074 253.55 153.074 Q 253.69 153.074 253.808 153.125 Q 253.926 153.175 253.985 153.257 Q 254.043 153.339 254.067 153.452 Q 254.082 153.525 254.082 153.708 L 254.082 154.665 L 253.818 154.665 L 253.818 153.719 Q 253.818 153.558 253.787 153.478 Q 253.756 153.398 253.678 153.35 Q 253.6 153.303 253.494 153.303 Q 253.326 153.303 253.203 153.41 Q 253.081 153.517 253.081 153.815 L 253.081 154.665 Z M 255.065 154.429 L 255.103 154.662 Q 254.992 154.686 254.904 154.686 Q 254.76 154.686 254.681 154.64 Q 254.602 154.595 254.57 154.521 Q 254.538 154.447 254.538 154.209 L 254.538 153.314 L 254.344 153.314 L 254.344 153.109 L 254.538 153.109 L 254.538 152.724 L 254.8 152.566 L 254.8 153.109 L 255.065 153.109 L 255.065 153.314 L 254.8 153.314 L 254.8 154.224 Q 254.8 154.337 254.814 154.369 Q 254.828 154.401 254.859 154.42 Q 254.891 154.439 254.949 154.439 Q 254.993 154.439 255.065 154.429 Z M 256.383 154.164 L 256.655 154.198 Q 256.591 154.436 256.416 154.568 Q 256.242 154.7 255.971 154.7 Q 255.63 154.7 255.43 154.49 Q 255.23 154.28 255.23 153.9 Q 255.23 153.508 255.432 153.291 Q 255.634 153.074 255.956 153.074 Q 256.268 153.074 256.466 153.287 Q 256.664 153.499 256.664 153.884 Q 256.664 153.908 256.662 153.955 L 255.502 153.955 Q 255.517 154.211 255.647 154.347 Q 255.778 154.483 255.972 154.483 Q 256.117 154.483 256.22 154.407 Q 256.323 154.331 256.383 154.164 Z M 255.517 153.738 L 256.386 153.738 Q 256.368 153.541 256.286 153.443 Q 256.16 153.291 255.959 153.291 Q 255.778 153.291 255.654 153.413 Q 255.53 153.534 255.517 153.738 Z M 256.971 154.665 L 256.971 153.109 L 257.209 153.109 L 257.209 153.345 Q 257.299 153.18 257.376 153.127 Q 257.453 153.074 257.545 153.074 Q 257.679 153.074 257.816 153.159 L 257.726 153.404 Q 257.629 153.347 257.532 153.347 Q 257.446 153.347 257.377 153.399 Q 257.308 153.451 257.279 153.543 Q 257.235 153.684 257.235 153.851 L 257.235 154.665 Z M 258.791 155.264 L 258.762 155.017 Q 258.848 155.04 258.912 155.04 Q 259 155.04 259.053 155.011 Q 259.106 154.981 259.139 154.929 Q 259.164 154.889 259.22 154.732 Q 259.227 154.71 259.243 154.668 L 258.653 153.109 L 258.937 153.109 L 259.261 154.01 Q 259.324 154.182 259.374 154.371 Q 259.419 154.189 259.482 154.016 L 259.815 153.109 L 260.078 153.109 L 259.487 154.691 Q 259.391 154.948 259.339 155.044 Q 259.268 155.175 259.178 155.236 Q 259.087 155.296 258.961 155.296 Q 258.885 155.296 258.791 155.264 Z M 260.205 153.887 Q 260.205 153.455 260.445 153.247 Q 260.645 153.074 260.934 153.074 Q 261.255 153.074 261.458 153.284 Q 261.662 153.495 261.662 153.865 Q 261.662 154.165 261.572 154.338 Q 261.482 154.51 261.31 154.605 Q 261.138 154.7 260.934 154.7 Q 260.607 154.7 260.406 154.491 Q 260.205 154.281 260.205 153.887 Z M 260.476 153.887 Q 260.476 154.186 260.606 154.335 Q 260.736 154.483 260.934 154.483 Q 261.13 154.483 261.261 154.334 Q 261.391 154.185 261.391 153.878 Q 261.391 153.59 261.26 153.441 Q 261.129 153.292 260.934 153.292 Q 260.736 153.292 260.606 153.44 Q 260.476 153.588 260.476 153.887 Z M 262.979 154.665 L 262.979 154.436 Q 262.797 154.7 262.485 154.7 Q 262.347 154.7 262.228 154.647 Q 262.109 154.595 262.051 154.515 Q 261.993 154.435 261.969 154.319 Q 261.953 154.242 261.953 154.073 L 261.953 153.109 L 262.217 153.109 L 262.217 153.972 Q 262.217 154.179 262.233 154.25 Q 262.258 154.354 262.339 154.414 Q 262.419 154.473 262.538 154.473 Q 262.656 154.473 262.76 154.412 Q 262.864 154.352 262.908 154.247 Q 262.951 154.142 262.951 153.943 L 262.951 153.109 L 263.215 153.109 L 263.215 154.665 Z M 263.628 154.665 L 263.628 153.109 L 263.866 153.109 L 263.866 153.345 Q 263.956 153.18 264.033 153.127 Q 264.11 153.074 264.203 153.074 Q 264.336 153.074 264.474 153.159 L 264.383 153.404 Q 264.286 153.347 264.189 153.347 Q 264.103 153.347 264.034 153.399 Q 263.965 153.451 263.936 153.543 Q 263.892 153.684 263.892 153.851 L 263.892 154.665 Z M 266.02 154.429 L 266.058 154.662 Q 265.946 154.686 265.859 154.686 Q 265.715 154.686 265.636 154.64 Q 265.557 154.595 265.525 154.521 Q 265.492 154.447 265.492 154.209 L 265.492 153.314 L 265.299 153.314 L 265.299 153.109 L 265.492 153.109 L 265.492 152.724 L 265.755 152.566 L 265.755 153.109 L 266.02 153.109 L 266.02 153.314 L 265.755 153.314 L 265.755 154.224 Q 265.755 154.337 265.768 154.369 Q 265.782 154.401 265.814 154.42 Q 265.845 154.439 265.904 154.439 Q 265.948 154.439 266.02 154.429 Z M 267.353 154.164 L 267.625 154.198 Q 267.561 154.436 267.387 154.568 Q 267.212 154.7 266.941 154.7 Q 266.6 154.7 266.4 154.49 Q 266.2 154.28 266.2 153.9 Q 266.2 153.508 266.402 153.291 Q 266.604 153.074 266.927 153.074 Q 267.239 153.074 267.436 153.287 Q 267.634 153.499 267.634 153.884 Q 267.634 153.908 267.633 153.955 L 266.472 153.955 Q 266.487 154.211 266.617 154.347 Q 266.748 154.483 266.943 154.483 Q 267.088 154.483 267.19 154.407 Q 267.293 154.331 267.353 154.164 Z M 266.487 153.738 L 267.356 153.738 Q 267.338 153.541 267.256 153.443 Q 267.13 153.291 266.929 153.291 Q 266.748 153.291 266.624 153.413 Q 266.5 153.534 266.487 153.738 Z M 267.769 154.665 L 268.337 153.856 L 267.811 153.109 L 268.141 153.109 L 268.379 153.474 Q 268.447 153.578 268.488 153.648 Q 268.552 153.552 268.606 153.477 L 268.869 153.109 L 269.184 153.109 L 268.646 153.842 L 269.225 154.665 L 268.901 154.665 L 268.582 154.182 L 268.497 154.051 L 268.088 154.665 Z M 270.02 154.429 L 270.058 154.662 Q 269.947 154.686 269.859 154.686 Q 269.716 154.686 269.636 154.64 Q 269.557 154.595 269.525 154.521 Q 269.493 154.447 269.493 154.209 L 269.493 153.314 L 269.299 153.314 L 269.299 153.109 L 269.493 153.109 L 269.493 152.724 L 269.755 152.566 L 269.755 153.109 L 270.02 153.109 L 270.02 153.314 L 269.755 153.314 L 269.755 154.224 Q 269.755 154.337 269.769 154.369 Q 269.783 154.401 269.814 154.42 Q 269.846 154.439 269.904 154.439 Q 269.948 154.439 270.02 154.429 Z M 271.101 154.665 L 271.101 152.518 L 271.365 152.518 L 271.365 153.288 Q 271.549 153.074 271.83 153.074 Q 272.003 153.074 272.131 153.142 Q 272.258 153.21 272.313 153.331 Q 272.368 153.451 272.368 153.679 L 272.368 154.665 L 272.104 154.665 L 272.104 153.679 Q 272.104 153.481 272.019 153.391 Q 271.933 153.301 271.776 153.301 Q 271.659 153.301 271.556 153.362 Q 271.453 153.423 271.409 153.527 Q 271.365 153.631 271.365 153.814 L 271.365 154.665 Z M 273.822 154.164 L 274.095 154.198 Q 274.03 154.436 273.856 154.568 Q 273.682 154.7 273.411 154.7 Q 273.069 154.7 272.87 154.49 Q 272.67 154.28 272.67 153.9 Q 272.67 153.508 272.872 153.291 Q 273.074 153.074 273.396 153.074 Q 273.708 153.074 273.906 153.287 Q 274.104 153.499 274.104 153.884 Q 274.104 153.908 274.102 153.955 L 272.942 153.955 Q 272.957 154.211 273.087 154.347 Q 273.217 154.483 273.412 154.483 Q 273.557 154.483 273.66 154.407 Q 273.762 154.331 273.822 154.164 Z M 272.957 153.738 L 273.825 153.738 Q 273.808 153.541 273.726 153.443 Q 273.6 153.291 273.399 153.291 Q 273.217 153.291 273.094 153.413 Q 272.97 153.534 272.957 153.738 Z M 274.427 154.665 L 274.427 153.109 L 274.664 153.109 L 274.664 153.345 Q 274.755 153.18 274.832 153.127 Q 274.909 153.074 275.001 153.074 Q 275.134 153.074 275.272 153.159 L 275.181 153.404 Q 275.084 153.347 274.988 153.347 Q 274.901 153.347 274.832 153.399 Q 274.764 153.451 274.734 153.543 Q 274.69 153.684 274.69 153.851 L 274.69 154.665 Z M 276.495 154.164 L 276.767 154.198 Q 276.703 154.436 276.528 154.568 Q 276.354 154.7 276.083 154.7 Q 275.742 154.7 275.542 154.49 Q 275.342 154.28 275.342 153.9 Q 275.342 153.508 275.544 153.291 Q 275.746 153.074 276.068 153.074 Q 276.38 153.074 276.578 153.287 Q 276.776 153.499 276.776 153.884 Q 276.776 153.908 276.774 153.955 L 275.614 153.955 Q 275.629 154.211 275.759 154.347 Q 275.89 154.483 276.084 154.483 Q 276.229 154.483 276.332 154.407 Q 276.435 154.331 276.495 154.164 Z M 275.629 153.738 L 276.498 153.738 Q 276.48 153.541 276.398 153.443 Q 276.272 153.291 276.071 153.291 Q 275.89 153.291 275.766 153.413 Q 275.642 153.534 275.629 153.738 Z"}})]),e._v(" "),E("symbol",{attrs:{id:"explain",viewBox:"-63.717 6.935 73.958 76.909"}},[E("title",[e._v("Explain")]),e._v(" "),E("g",{attrs:{transform:"matrix(1, 0, 0, 1, -166.947403, -88.23024)"}},[E("g",[E("title",[e._v("Magnifying glass")]),e._v(" "),E("ellipse",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-width":"1.86439px","stroke-linejoin":"round","stroke-linecap":"square",fill:"rgb(58, 184, 157)"},attrs:{cx:"133.707",cy:"122.941",rx:"24.368",ry:"24.368"}}),e._v(" "),E("ellipse",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-width":"1.86439px","stroke-linejoin":"round","stroke-linecap":"square",fill:"rgb(255, 255, 255)"},attrs:{cx:"133.837",cy:"122.649",rx:"17.899",ry:"17.899"}}),e._v(" "),E("g",{attrs:{transform:"matrix(1, 0, 0, 1, 0.780285, -2.499035)"}},[E("title",[e._v("Graph")]),e._v(" "),E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)"},attrs:{x:"137.82",y:"127.903",width:"8.622",height:"9.681"}}),e._v(" "),E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)"},attrs:{x:"129.198",y:"123.063",width:"8.622",height:"14.521"}}),e._v(" "),E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)"},attrs:{x:"120.576",y:"113.382",width:"8.622",height:"24.202"}})]),e._v(" "),E("rect",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-width":"1.86439px","stroke-linejoin":"round","stroke-linecap":"square",fill:"rgb(58, 184, 157)"},attrs:{x:"84.641",y:"96.221",width:"32.4",height:"9.613",rx:"3.658",ry:"3.658",transform:"matrix(-0.681998, -0.731354, 0.731354, -0.681998, 156.204498, 297.483093)"}})]),e._v(" "),E("path",{staticStyle:{fill:"rgb(58, 184, 157)",stroke:"rgb(0, 0, 0)","stroke-width":"2px","white-space":"pre"},attrs:{d:"M 129.908 131.157 Q 129.908 126.44 130.835 123.661 Q 131.761 120.881 134.153 118.355 Q 136.68 115.558 137.522 113.772 Q 138.365 111.987 138.365 110.168 Q 138.365 104.541 134.726 104.541 Q 133.109 104.541 132.031 106.091 Q 130.953 107.641 130.885 110.269 L 121.351 110.269 Q 121.418 103.732 125.006 100.127 Q 128.594 96.522 134.726 96.522 Q 140.993 96.522 144.463 100.01 Q 147.933 103.497 147.933 109.763 Q 147.933 114.952 143.654 119.938 L 140.858 123.105 Q 139.477 124.756 138.904 126.525 Q 138.331 128.293 138.264 131.157 Z M 129.032 141.467 Q 129.032 139.176 130.498 137.727 Q 131.963 136.278 134.221 136.278 Q 136.545 136.278 137.994 137.744 Q 139.443 139.21 139.443 141.467 Q 139.443 143.69 138.028 145.173 Q 136.613 146.655 134.221 146.655 Q 131.862 146.655 130.447 145.173 Q 129.032 143.69 129.032 141.467 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 111.603 161.916 L 107.802 161.916 L 107.802 165.12 L 112.301 165.12 L 112.301 167.145 L 105.361 167.145 L 105.361 155.059 L 112.284 155.059 L 112.284 157.093 L 107.802 157.093 L 107.802 159.948 L 111.603 159.948 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 116.579 160.828 L 117.625 158.164 L 120.115 158.164 L 118.065 162.555 L 120.19 167.145 L 117.691 167.145 L 116.587 164.331 L 115.492 167.145 L 112.985 167.145 L 115.11 162.555 L 113.076 158.164 L 115.575 158.164 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 128.26 162.937 Q 128.26 165.053 127.534 166.182 Q 126.808 167.311 125.372 167.311 Q 124.276 167.311 123.612 166.423 L 123.612 170.598 L 121.263 170.598 L 121.263 158.164 L 123.437 158.164 L 123.52 158.985 Q 124.193 157.998 125.355 157.998 Q 126.791 157.998 127.517 159.043 Q 128.244 160.089 128.26 162.248 Z M 125.919 162.347 Q 125.919 161.044 125.633 160.504 Q 125.347 159.965 124.666 159.965 Q 123.944 159.965 123.612 160.571 L 123.612 164.779 Q 123.927 165.36 124.683 165.36 Q 125.38 165.36 125.65 164.771 Q 125.919 164.182 125.919 162.937 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 132.151 167.145 L 129.794 167.145 L 129.794 154.395 L 132.151 154.395 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 138.234 167.145 Q 138.134 166.937 138.035 166.448 Q 137.404 167.311 136.325 167.311 Q 135.196 167.311 134.453 166.564 Q 133.71 165.817 133.71 164.63 Q 133.71 163.219 134.611 162.447 Q 135.511 161.675 137.205 161.658 L 137.919 161.658 L 137.919 160.936 Q 137.919 160.33 137.711 160.081 Q 137.504 159.832 137.105 159.832 Q 136.225 159.832 136.225 160.861 L 133.876 160.861 Q 133.876 159.616 134.81 158.807 Q 135.744 157.998 137.172 157.998 Q 138.649 157.998 139.458 158.765 Q 140.268 159.533 140.268 160.961 L 140.268 165.186 Q 140.284 166.348 140.6 167.004 L 140.6 167.145 Z M 136.848 165.468 Q 137.238 165.468 137.512 165.311 Q 137.786 165.153 137.919 164.937 L 137.919 163.069 L 137.354 163.069 Q 136.757 163.069 136.412 163.451 Q 136.068 163.833 136.068 164.472 Q 136.068 165.468 136.848 165.468 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 144.418 167.145 L 142.061 167.145 L 142.061 158.164 L 144.418 158.164 Z M 141.953 155.839 Q 141.953 155.291 142.301 154.943 Q 142.65 154.594 143.231 154.594 Q 143.812 154.594 144.161 154.943 Q 144.509 155.291 144.509 155.839 Q 144.509 156.379 144.165 156.736 Q 143.821 157.093 143.231 157.093 Q 142.642 157.093 142.297 156.736 Q 141.953 156.379 141.953 155.839 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 148.385 158.164 L 148.451 159.052 Q 149.248 157.998 150.534 157.998 Q 152.85 157.998 152.917 161.243 L 152.917 167.145 L 150.559 167.145 L 150.559 161.417 Q 150.559 160.654 150.331 160.309 Q 150.103 159.965 149.53 159.965 Q 148.891 159.965 148.534 160.621 L 148.534 167.145 L 146.177 167.145 L 146.177 158.164 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre"},attrs:{d:"M 285.44 147.867 L 285.44 145.362 L 287.251 145.362 L 287.251 145.657 L 285.771 145.657 L 285.771 146.425 L 287.157 146.425 L 287.157 146.719 L 285.771 146.719 L 285.771 147.571 L 287.309 147.571 L 287.309 147.867 Z M 287.706 147.867 L 287.706 146.052 L 287.983 146.052 L 287.983 146.31 Q 288.183 146.011 288.561 146.011 Q 288.725 146.011 288.863 146.07 Q 289 146.129 289.069 146.225 Q 289.137 146.32 289.164 146.452 Q 289.181 146.537 289.181 146.751 L 289.181 147.867 L 288.874 147.867 L 288.874 146.763 Q 288.874 146.575 288.838 146.482 Q 288.802 146.389 288.711 146.333 Q 288.619 146.278 288.496 146.278 Q 288.299 146.278 288.157 146.402 Q 288.014 146.527 288.014 146.876 L 288.014 147.867 Z M 290.332 147.592 L 290.376 147.864 Q 290.246 147.891 290.144 147.891 Q 289.976 147.891 289.884 147.838 Q 289.791 147.785 289.754 147.699 Q 289.716 147.612 289.716 147.336 L 289.716 146.291 L 289.491 146.291 L 289.491 146.052 L 289.716 146.052 L 289.716 145.603 L 290.022 145.418 L 290.022 146.052 L 290.332 146.052 L 290.332 146.291 L 290.022 146.291 L 290.022 147.353 Q 290.022 147.484 290.038 147.522 Q 290.055 147.559 290.091 147.582 Q 290.128 147.604 290.197 147.604 Q 290.248 147.604 290.332 147.592 Z M 291.871 147.283 L 292.189 147.322 Q 292.114 147.6 291.91 147.754 Q 291.707 147.908 291.391 147.908 Q 290.993 147.908 290.759 147.663 Q 290.526 147.418 290.526 146.975 Q 290.526 146.517 290.762 146.264 Q 290.998 146.011 291.374 146.011 Q 291.738 146.011 291.969 146.259 Q 292.199 146.507 292.199 146.956 Q 292.199 146.983 292.198 147.038 L 290.844 147.038 Q 290.861 147.337 291.013 147.496 Q 291.165 147.655 291.393 147.655 Q 291.562 147.655 291.681 147.566 Q 291.801 147.477 291.871 147.283 Z M 290.861 146.785 L 291.875 146.785 Q 291.854 146.556 291.758 146.442 Q 291.611 146.264 291.377 146.264 Q 291.165 146.264 291.021 146.406 Q 290.877 146.548 290.861 146.785 Z M 292.563 147.867 L 292.563 146.052 L 292.84 146.052 L 292.84 146.327 Q 292.946 146.134 293.036 146.073 Q 293.125 146.011 293.233 146.011 Q 293.389 146.011 293.549 146.11 L 293.443 146.396 Q 293.33 146.329 293.218 146.329 Q 293.117 146.329 293.036 146.39 Q 292.956 146.45 292.922 146.558 Q 292.871 146.722 292.871 146.917 L 292.871 147.867 Z M 294.678 148.566 L 294.644 148.277 Q 294.745 148.305 294.82 148.305 Q 294.922 148.305 294.984 148.27 Q 295.046 148.236 295.085 148.175 Q 295.114 148.128 295.179 147.946 Q 295.187 147.92 295.206 147.87 L 294.517 146.052 L 294.849 146.052 L 295.227 147.103 Q 295.3 147.303 295.358 147.523 Q 295.411 147.312 295.485 147.11 L 295.873 146.052 L 296.18 146.052 L 295.49 147.898 Q 295.379 148.197 295.317 148.31 Q 295.235 148.462 295.129 148.533 Q 295.023 148.604 294.876 148.604 Q 294.787 148.604 294.678 148.566 Z M 296.327 146.96 Q 296.327 146.455 296.608 146.213 Q 296.842 146.011 297.179 146.011 Q 297.553 146.011 297.79 146.256 Q 298.028 146.502 298.028 146.934 Q 298.028 147.284 297.923 147.485 Q 297.818 147.686 297.617 147.797 Q 297.416 147.908 297.179 147.908 Q 296.797 147.908 296.562 147.664 Q 296.327 147.419 296.327 146.96 Z M 296.644 146.96 Q 296.644 147.308 296.796 147.482 Q 296.948 147.655 297.179 147.655 Q 297.408 147.655 297.56 147.481 Q 297.712 147.306 297.712 146.949 Q 297.712 146.613 297.559 146.439 Q 297.406 146.266 297.179 146.266 Q 296.948 146.266 296.796 146.438 Q 296.644 146.611 296.644 146.96 Z M 299.569 147.867 L 299.569 147.6 Q 299.357 147.908 298.993 147.908 Q 298.833 147.908 298.693 147.846 Q 298.554 147.785 298.487 147.692 Q 298.419 147.599 298.392 147.464 Q 298.373 147.373 298.373 147.177 L 298.373 146.052 L 298.681 146.052 L 298.681 147.059 Q 298.681 147.3 298.699 147.383 Q 298.728 147.505 298.822 147.574 Q 298.916 147.643 299.055 147.643 Q 299.193 147.643 299.315 147.572 Q 299.436 147.501 299.486 147.379 Q 299.537 147.257 299.537 147.024 L 299.537 146.052 L 299.844 146.052 L 299.844 147.867 Z M 300.33 147.867 L 300.33 146.052 L 300.607 146.052 L 300.607 146.327 Q 300.713 146.134 300.802 146.073 Q 300.892 146.011 301 146.011 Q 301.155 146.011 301.316 146.11 L 301.21 146.396 Q 301.097 146.329 300.984 146.329 Q 300.883 146.329 300.803 146.39 Q 300.723 146.45 300.689 146.558 Q 300.637 146.722 300.637 146.917 L 300.637 147.867 Z M 303.13 147.592 L 303.174 147.864 Q 303.045 147.891 302.942 147.891 Q 302.775 147.891 302.682 147.838 Q 302.59 147.785 302.552 147.699 Q 302.515 147.612 302.515 147.336 L 302.515 146.291 L 302.289 146.291 L 302.289 146.052 L 302.515 146.052 L 302.515 145.603 L 302.821 145.418 L 302.821 146.052 L 303.13 146.052 L 303.13 146.291 L 302.821 146.291 L 302.821 147.353 Q 302.821 147.484 302.837 147.522 Q 302.853 147.559 302.89 147.582 Q 302.927 147.604 302.995 147.604 Q 303.046 147.604 303.13 147.592 Z M 304.67 147.283 L 304.988 147.322 Q 304.912 147.6 304.709 147.754 Q 304.506 147.908 304.189 147.908 Q 303.791 147.908 303.558 147.663 Q 303.325 147.418 303.325 146.975 Q 303.325 146.517 303.561 146.264 Q 303.796 146.011 304.172 146.011 Q 304.536 146.011 304.767 146.259 Q 304.998 146.507 304.998 146.956 Q 304.998 146.983 304.996 147.038 L 303.643 147.038 Q 303.66 147.337 303.812 147.496 Q 303.964 147.655 304.191 147.655 Q 304.36 147.655 304.48 147.566 Q 304.6 147.477 304.67 147.283 Z M 303.66 146.785 L 304.673 146.785 Q 304.653 146.556 304.557 146.442 Q 304.41 146.264 304.176 146.264 Q 303.964 146.264 303.819 146.406 Q 303.675 146.548 303.66 146.785 Z M 305.16 147.867 L 305.823 146.924 L 305.21 146.052 L 305.594 146.052 L 305.873 146.478 Q 305.951 146.599 305.999 146.681 Q 306.074 146.568 306.137 146.481 L 306.443 146.052 L 306.811 146.052 L 306.184 146.907 L 306.859 147.867 L 306.481 147.867 L 306.108 147.303 L 306.009 147.151 L 305.533 147.867 Z M 307.787 147.592 L 307.831 147.864 Q 307.701 147.891 307.599 147.891 Q 307.431 147.891 307.339 147.838 Q 307.247 147.785 307.209 147.699 Q 307.172 147.612 307.172 147.336 L 307.172 146.291 L 306.946 146.291 L 306.946 146.052 L 307.172 146.052 L 307.172 145.603 L 307.478 145.418 L 307.478 146.052 L 307.787 146.052 L 307.787 146.291 L 307.478 146.291 L 307.478 147.353 Q 307.478 147.484 307.494 147.522 Q 307.51 147.559 307.547 147.582 Q 307.583 147.604 307.652 147.604 Q 307.703 147.604 307.787 147.592 Z M 309.053 147.867 L 309.053 145.362 L 309.361 145.362 L 309.361 146.261 Q 309.576 146.011 309.904 146.011 Q 310.106 146.011 310.254 146.091 Q 310.403 146.17 310.467 146.31 Q 310.531 146.45 310.531 146.717 L 310.531 147.867 L 310.224 147.867 L 310.224 146.717 Q 310.224 146.486 310.124 146.381 Q 310.024 146.276 309.841 146.276 Q 309.704 146.276 309.584 146.347 Q 309.463 146.418 309.412 146.539 Q 309.361 146.66 309.361 146.874 L 309.361 147.867 Z M 312.233 147.283 L 312.551 147.322 Q 312.476 147.6 312.272 147.754 Q 312.069 147.908 311.753 147.908 Q 311.355 147.908 311.121 147.663 Q 310.888 147.418 310.888 146.975 Q 310.888 146.517 311.124 146.264 Q 311.36 146.011 311.736 146.011 Q 312.1 146.011 312.331 146.259 Q 312.561 146.507 312.561 146.956 Q 312.561 146.983 312.56 147.038 L 311.206 147.038 Q 311.223 147.337 311.375 147.496 Q 311.527 147.655 311.755 147.655 Q 311.924 147.655 312.043 147.566 Q 312.163 147.477 312.233 147.283 Z M 311.223 146.785 L 312.237 146.785 Q 312.216 146.556 312.12 146.442 Q 311.973 146.264 311.739 146.264 Q 311.527 146.264 311.383 146.406 Q 311.239 146.548 311.223 146.785 Z M 312.925 147.867 L 312.925 146.052 L 313.202 146.052 L 313.202 146.327 Q 313.308 146.134 313.398 146.073 Q 313.487 146.011 313.595 146.011 Q 313.751 146.011 313.911 146.11 L 313.805 146.396 Q 313.692 146.329 313.58 146.329 Q 313.479 146.329 313.398 146.39 Q 313.318 146.45 313.284 146.558 Q 313.233 146.722 313.233 146.917 L 313.233 147.867 Z M 315.343 147.283 L 315.661 147.322 Q 315.586 147.6 315.382 147.754 Q 315.179 147.908 314.863 147.908 Q 314.465 147.908 314.231 147.663 Q 313.998 147.418 313.998 146.975 Q 313.998 146.517 314.234 146.264 Q 314.47 146.011 314.846 146.011 Q 315.21 146.011 315.44 146.259 Q 315.671 146.507 315.671 146.956 Q 315.671 146.983 315.669 147.038 L 314.316 147.038 Q 314.333 147.337 314.485 147.496 Q 314.637 147.655 314.864 147.655 Q 315.034 147.655 315.153 147.566 Q 315.273 147.477 315.343 147.283 Z M 314.333 146.785 L 315.346 146.785 Q 315.326 146.556 315.23 146.442 Q 315.083 146.264 314.849 146.264 Q 314.637 146.264 314.493 146.406 Q 314.348 146.548 314.333 146.785 Z"}})])]),e._v(" "),E("symbol",{attrs:{id:"execute",viewBox:"100 90 101.473 72.386"}},[E("title",[e._v("Execute")]),e._v(" "),E("g",{attrs:{transform:"matrix(1, 0, 0, 1, 18.17033, -2.303241)"}},[E("path",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-width":"16.2px",fill:"rgb(58, 184, 157)"},attrs:{transform:"matrix(0.123457, 0, 0, 0.123457, 79.113129, 73.839157)",d:"M 540.634 243.384 L 568.089 243.384 L 582.972 281.613 A 139.17 139.17 0 0 1 603.926 287.765 L 637.115 263.652 L 660.212 278.495 L 652.065 318.702 A 139.17 139.17 0 0 1 666.366 335.206 L 707.323 332.864 L 718.728 357.838 L 690.137 387.258 A 139.17 139.17 0 0 1 693.244 408.874 L 728.966 429.046 L 725.059 456.222 L 685.101 465.513 A 139.17 139.17 0 0 1 676.029 485.378 L 695.174 521.661 L 677.195 542.411 L 638.556 528.624 A 139.17 139.17 0 0 1 620.185 540.431 L 616.675 581.304 L 590.331 589.039 L 565.281 556.552 A 139.17 139.17 0 0 1 543.442 556.552 L 518.391 589.039 L 492.048 581.304 L 488.538 540.431 A 139.17 139.17 0 0 1 470.166 528.624 L 431.528 542.411 L 413.549 521.661 L 432.694 485.378 A 139.17 139.17 0 0 1 423.622 465.513 L 383.663 456.222 L 379.756 429.046 L 415.478 408.874 A 139.17 139.17 0 0 1 418.586 387.258 L 389.994 357.838 L 401.4 332.864 L 442.357 335.206 A 139.17 139.17 0 0 1 456.658 318.702 L 448.511 278.495 L 471.607 263.652 L 504.796 287.765 A 139.17 139.17 0 0 1 525.75 281.613 Z M 554.361 371.42 A 46.39 46.39 0 0 0 554.361 464.201 A 46.39 46.39 0 0 0 554.361 371.42"}}),e._v(" "),E("path",{staticStyle:{stroke:"rgb(0, 0, 0)",fill:"none","stroke-width":"4px"},attrs:{d:"M 147.958 154.125 C 165.865 154.125 178.881 137.111 174.194 119.828"}}),e._v(" "),E("path",{staticStyle:{stroke:"rgb(0, 0, 0)",fill:"none","stroke-width":"4px"},attrs:{d:"M 118.113 131.743 C 136.02 131.743 149.036 114.729 144.349 97.446",transform:"matrix(-1, 0, 0, -1, 263.424767, 229.188995)"}}),e._v(" "),E("path",{staticStyle:{stroke:"rgb(0, 0, 0)",fill:"rgb(58, 184, 157)"},attrs:{d:"M 113.221 71.481 Q 114.075 69.772 114.93 71.481 L 117.494 76.608 Q 118.348 78.317 116.639 78.317 L 111.512 78.317 Q 109.803 78.317 110.658 76.608 Z",transform:"matrix(0, 1, -1, 0, 225.252579, -16.365372)"}}),e._v(" "),E("path",{staticStyle:{stroke:"rgb(0, 0, 0)",fill:"rgb(58, 184, 157)"},attrs:{d:"M -106.385 -68.063 Q -105.53 -69.772 -104.676 -68.063 L -102.112 -62.936 Q -101.258 -61.227 -102.967 -61.227 L -108.094 -61.227 Q -109.803 -61.227 -108.948 -62.936 Z",transform:"matrix(0, 1, 1, 0, 207.321473, 259.570527)"}})]),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 114.845 149.786 Q 114.845 148.483 114.178 147.816 Q 113.512 147.15 111.754 146.432 Q 108.546 145.216 107.14 143.583 Q 105.733 141.949 105.733 139.723 Q 105.733 137.028 107.645 135.394 Q 109.557 133.761 112.501 133.761 Q 114.464 133.761 116.002 134.589 Q 117.54 135.416 118.368 136.925 Q 119.195 138.434 119.195 140.353 L 114.903 140.353 Q 114.903 138.859 114.266 138.075 Q 113.629 137.291 112.428 137.291 Q 111.3 137.291 110.67 137.958 Q 110.04 138.624 110.04 139.752 Q 110.04 140.631 110.743 141.341 Q 111.446 142.052 113.233 142.814 Q 116.353 143.942 117.767 145.582 Q 119.181 147.223 119.181 149.757 Q 119.181 152.54 117.408 154.108 Q 115.636 155.675 112.589 155.675 Q 110.523 155.675 108.824 154.825 Q 107.125 153.976 106.165 152.394 Q 105.206 150.812 105.206 148.658 L 109.527 148.658 Q 109.527 150.504 110.245 151.339 Q 110.963 152.174 112.589 152.174 Q 114.845 152.174 114.845 149.786 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 137.025 146.373 Q 137.025 151.661 134.169 154.064 L 137.113 156.7 L 134.403 159.191 L 130.478 155.602 L 129.35 155.675 Q 125.732 155.675 123.688 153.221 Q 121.645 150.768 121.63 146.432 L 121.63 143.092 Q 121.63 138.697 123.666 136.229 Q 125.702 133.761 129.32 133.761 Q 132.851 133.761 134.901 136.134 Q 136.952 138.507 137.025 142.799 Z M 132.704 143.063 Q 132.704 140.148 131.869 138.756 Q 131.034 137.364 129.32 137.364 Q 127.607 137.364 126.786 138.719 Q 125.966 140.074 125.937 142.843 L 125.937 146.373 Q 125.937 149.303 126.779 150.695 Q 127.621 152.086 129.35 152.086 Q 131.034 152.086 131.862 150.702 Q 132.69 149.318 132.704 146.476 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 144.428 151.808 L 151.987 151.808 L 151.987 155.382 L 140.122 155.382 L 140.122 134.054 L 144.428 134.054 Z"}})]),e._v(" "),E("symbol",{attrs:{id:"triangle",viewBox:"0 0 220 220"}},[E("title",[e._v("Triangle")]),e._v(" "),E("polygon",{staticStyle:{"fill-rule":"nonzero",stroke:"rgb(51, 51, 51)","stroke-miterlimit":"20","stroke-dashoffset":"-3px","paint-order":"stroke","stroke-width":"50px","stroke-linejoin":"round","stroke-linecap":"round",fill:"rgb(58, 184, 157)"},attrs:{points:"40 40 180 110 40 190"}})]),e._v(" "),E("symbol",{attrs:{id:"copy",viewBox:"0 0 85.119 92.9"}},[E("title",[e._v("Copy")]),e._v(" "),E("g",{attrs:{transform:"matrix(1, 0, 0, 1, -13.9725, -7.250724)"}},[E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)","stroke-width":"6px","stroke-linecap":"round","stroke-linejoin":"round"},attrs:{x:"24.115",y:"13.163",width:"38.675",height:"45.896"}}),e._v(" "),E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)","stroke-linejoin":"round","stroke-linecap":"round","stroke-width":"6px"},attrs:{x:"42.974",y:"24.294",width:"40.052",height:"45.935"}}),e._v(" "),E("path",{staticStyle:{stroke:"rgb(0, 0, 0)",fill:"rgb(58, 184, 157)","stroke-width":"4px","stroke-linecap":"square","stroke-linejoin":"bevel"},attrs:{d:"M -92.575 -53.621 H -89.698 L -92.575 -63.98 L -62.65 -48.73 L -92.575 -33.48 L -89.698 -43.838 H -92.575 V -53.621 Z",transform:"matrix(-1, 0, 0, -1, 0, 0)"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 30.192 85.531 Q 30.095 87.72 28.962 88.845 Q 27.828 89.97 25.762 89.97 Q 23.592 89.97 22.436 88.542 Q 21.28 87.113 21.28 84.468 L 21.28 82.315 Q 21.28 79.678 22.475 78.25 Q 23.671 76.821 25.798 76.821 Q 27.889 76.821 28.975 77.99 Q 30.06 79.159 30.21 81.348 L 27.617 81.348 Q 27.582 79.994 27.199 79.48 Q 26.817 78.966 25.798 78.966 Q 24.76 78.966 24.33 79.691 Q 23.899 80.416 23.873 82.077 L 23.873 84.494 Q 23.873 86.401 24.299 87.113 Q 24.725 87.825 25.762 87.825 Q 26.782 87.825 27.169 87.329 Q 27.555 86.832 27.608 85.531 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 31.356 84.731 Q 31.356 82.569 32.375 81.339 Q 33.395 80.108 35.196 80.108 Q 37.016 80.108 38.035 81.339 Q 39.055 82.569 39.055 84.749 L 39.055 85.356 Q 39.055 87.526 38.044 88.748 Q 37.033 89.97 35.214 89.97 Q 33.386 89.97 32.371 88.744 Q 31.356 87.518 31.356 85.338 Z M 33.852 85.356 Q 33.852 87.904 35.214 87.904 Q 36.471 87.904 36.567 85.777 L 36.576 84.731 Q 36.576 83.431 36.216 82.802 Q 35.856 82.174 35.196 82.174 Q 34.564 82.174 34.208 82.802 Q 33.852 83.431 33.852 84.731 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 48.009 85.338 Q 48.009 87.579 47.24 88.774 Q 46.471 89.97 44.95 89.97 Q 43.79 89.97 43.087 89.029 L 43.087 93.45 L 40.6 93.45 L 40.6 80.284 L 42.903 80.284 L 42.991 81.154 Q 43.702 80.108 44.933 80.108 Q 46.453 80.108 47.222 81.216 Q 47.991 82.323 48.009 84.608 Z M 45.531 84.714 Q 45.531 83.334 45.227 82.763 Q 44.924 82.191 44.203 82.191 Q 43.439 82.191 43.087 82.833 L 43.087 87.289 Q 43.421 87.904 44.221 87.904 Q 44.959 87.904 45.245 87.28 Q 45.531 86.656 45.531 85.338 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 52.463 85.654 L 53.729 80.284 L 56.383 80.284 L 53.254 91.218 Q 52.551 93.635 50.609 93.635 Q 50.161 93.635 49.589 93.468 L 49.589 91.525 L 49.879 91.534 Q 50.459 91.534 50.754 91.31 Q 51.048 91.086 51.198 90.532 L 51.391 89.891 L 48.649 80.284 L 51.321 80.284 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 67.115 86.437 Q 67.115 85.654 66.715 85.254 Q 66.315 84.855 65.261 84.424 Q 63.336 83.694 62.492 82.714 Q 61.648 81.734 61.648 80.398 Q 61.648 78.781 62.795 77.801 Q 63.942 76.821 65.709 76.821 Q 66.887 76.821 67.81 77.318 Q 68.732 77.815 69.229 78.72 Q 69.726 79.625 69.726 80.776 L 67.15 80.776 Q 67.15 79.88 66.768 79.41 Q 66.386 78.94 65.665 78.94 Q 64.988 78.94 64.61 79.339 Q 64.232 79.739 64.232 80.416 Q 64.232 80.943 64.654 81.37 Q 65.076 81.796 66.148 82.253 Q 68.021 82.93 68.869 83.914 Q 69.717 84.898 69.717 86.419 Q 69.717 88.089 68.653 89.029 Q 67.59 89.97 65.762 89.97 Q 64.523 89.97 63.503 89.46 Q 62.483 88.95 61.908 88.001 Q 61.332 87.052 61.332 85.76 L 63.925 85.76 Q 63.925 86.867 64.356 87.368 Q 64.786 87.869 65.762 87.869 Q 67.115 87.869 67.115 86.437 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 70.973 84.731 Q 70.973 82.394 71.755 81.251 Q 72.537 80.108 74.076 80.108 Q 75.324 80.108 76.062 81.233 L 76.22 80.284 L 78.391 80.284 L 78.391 93.45 L 75.895 93.45 L 75.895 89.056 Q 75.201 89.97 74.067 89.97 Q 72.564 89.97 71.777 88.805 Q 70.991 87.641 70.973 85.452 Z M 73.469 85.356 Q 73.469 86.735 73.768 87.32 Q 74.067 87.904 74.787 87.904 Q 75.543 87.904 75.895 87.315 L 75.895 82.789 Q 75.543 82.174 74.796 82.174 Q 74.084 82.174 73.781 82.745 Q 73.478 83.316 73.469 84.652 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 82.856 89.794 L 80.36 89.794 L 80.36 76.294 L 82.856 76.294 Z"}})])]),e._v(" "),E("symbol",{attrs:{id:"logo",viewBox:"0 0 32 50"}},[E("title",[e._v("Logo")]),e._v(" "),E("g",{attrs:{transform:"matrix(1, 0, 0, 1, -1.772368, -0.239217)"}},[E("g",{attrs:{transform:"matrix(0.24134, 0, 0, 0.350729, 14.036423, 10.076302)"}},[E("title",[e._v("Database")]),e._v(" "),E("ellipse",{staticStyle:{fill:"rgb(236, 236, 236)","stroke-width":"13.5119px",stroke:"rgb(51, 51, 51)"},attrs:{cx:"15.005",cy:"83.365",rx:"50",ry:"20"}},[E("title",[e._v("bottom")])]),e._v(" "),E("ellipse",{staticStyle:{fill:"rgb(236, 236, 236)","stroke-width":"13.5119px",stroke:"rgb(51, 51, 51)"},attrs:{cx:"15.005",cy:"57.365",rx:"50",ry:"20"}},[E("title",[e._v("middle-bottom")])]),e._v(" "),E("ellipse",{staticStyle:{fill:"rgb(236, 236, 236)","stroke-width":"13.5119px",stroke:"rgb(51, 51, 51)"},attrs:{cx:"15.005",cy:"33.365",rx:"50",ry:"20"}},[E("title",[e._v("middle-tup")])]),e._v(" "),E("path",{staticStyle:{fill:"rgb(236, 236, 236)","stroke-width":"13.5119px",stroke:"rgb(51, 51, 51)"},attrs:{d:"M 65.424 7.365 L 65.005 85.598"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(236, 236, 236)","stroke-width":"13.5119px",stroke:"rgb(51, 51, 51)"},attrs:{d:"M -34.576 7.365 L -34.995 85.598"}}),e._v(" "),E("ellipse",{staticStyle:{"paint-order":"fill",fill:"rgb(236, 236, 236)","stroke-width":"13.5119px",stroke:"rgb(51, 51, 51)"},attrs:{cx:"15.005",cy:"7.365",rx:"50",ry:"20"}},[E("title",[e._v("top")])])]),e._v(" "),E("g",{attrs:{transform:"matrix(0.132459, 0, 0, 0.132459, -47.525974, 0.651215)"}},[E("title",[e._v("Relation")]),e._v(" "),E("g",{attrs:{transform:"matrix(1.560455, 0, 0, 1.560455, 178.17189, -112.217316)"}},[E("title",[e._v("Relation line")]),e._v(" "),E("line",{staticStyle:{"stroke-width":"4.05494px",fill:"rgb(58, 184, 158)","paint-order":"stroke",stroke:"rgb(58, 184, 158)"},attrs:{x1:"201.221",y1:"177.314",x2:"201.221",y2:"193.534"}}),e._v(" "),E("line",{staticStyle:{"stroke-width":"4.05494px",fill:"rgb(58, 184, 158)","paint-order":"stroke",stroke:"rgb(58, 184, 158)"},attrs:{x1:"219.114",y1:"191.84",x2:"219.114",y2:"211.014",transform:"matrix(0, -1, 1, 0, 17.686996, 420.541)"}}),e._v(" "),E("line",{staticStyle:{"stroke-width":"4.05494px",fill:"rgb(58, 184, 158)","paint-order":"stroke",stroke:"rgb(58, 184, 158)"},attrs:{x1:"183.625",y1:"191.84",x2:"183.625",y2:"211.014",transform:"matrix(0, -1, 1, 0, -17.802002, 385.052002)"}}),e._v(" "),E("line",{staticStyle:{"stroke-width":"4.05494px",fill:"rgb(58, 184, 158)","paint-order":"stroke",stroke:"rgb(58, 184, 158)"},attrs:{x1:"236.603",y1:"208.121",x2:"236.603",y2:"224.341"}}),e._v(" "),E("line",{staticStyle:{"stroke-width":"4.05494px",fill:"rgb(58, 184, 158)","paint-order":"stroke",stroke:"rgb(58, 184, 158)"},attrs:{x1:"165.111",y1:"208.121",x2:"165.111",y2:"224.341"}}),e._v(" "),E("ellipse",{staticStyle:{fill:"rgb(216, 216, 216)","stroke-linejoin":"round",stroke:"rgb(58, 184, 157)","paint-order":"stroke","stroke-width":"12.1648px"},attrs:{cx:"166.481",cy:"201.381",rx:"2.685",ry:"2.685"}}),e._v(" "),E("ellipse",{staticStyle:{fill:"rgb(216, 216, 216)","stroke-linejoin":"round",stroke:"rgb(58, 184, 157)","paint-order":"stroke","stroke-width":"12.1648px"},attrs:{cx:"236.471",cy:"201.381",rx:"2.685",ry:"2.685"}}),e._v(" "),E("ellipse",{staticStyle:{fill:"rgb(216, 216, 216)","stroke-linejoin":"round",stroke:"rgb(58, 184, 157)","paint-order":"stroke","stroke-width":"12.1648px"},attrs:{cx:"201.355",cy:"201.381",rx:"2.685",ry:"2.685"}})]),e._v(" "),E("g",{attrs:{transform:"matrix(0.499693, 0, 0, 0.499693, 408.701843, 199.424301)"}},[E("title",[e._v("Entity Parent")]),e._v(" "),E("rect",{staticStyle:{"stroke-linejoin":"round",fill:"rgb(255, 255, 255)","paint-order":"fill","fill-rule":"nonzero",stroke:"rgb(58, 184, 157)","stroke-width":"17.9814px"},attrs:{x:"230",y:"75",width:"100",height:"69.919"}}),e._v(" "),E("path",{staticStyle:{"stroke-linejoin":"round",fill:"rgb(255, 255, 255)","paint-order":"fill","fill-rule":"nonzero",stroke:"rgb(58, 184, 157)","stroke-width":"5.99379px"},attrs:{d:"M 230 104.699 L 330 104.408"}})]),e._v(" "),E("g",{attrs:{transform:"matrix(1.113404, 0, 0, 1.17075, 180.136734, -10.4697)"}},[E("title",[e._v("Entity Parent")]),e._v(" "),E("rect",{staticStyle:{"stroke-linejoin":"round",fill:"rgb(255, 255, 255)","paint-order":"fill","fill-rule":"nonzero",stroke:"rgb(58, 184, 157)","stroke-width":"17.9814px"},attrs:{x:"230",y:"75",width:"100",height:"69.919"}}),e._v(" "),E("path",{staticStyle:{"stroke-linejoin":"round",fill:"rgb(255, 255, 255)","paint-order":"fill","fill-rule":"nonzero",stroke:"rgb(58, 184, 157)","stroke-width":"5.99379px"},attrs:{d:"M 230 104.699 L 330 104.408"}})]),e._v(" "),E("g",{attrs:{transform:"matrix(0.499693, 0, 0, 0.499693, 299.85614, 199.424164)"}},[E("title",[e._v("Entity Parent")]),e._v(" "),E("rect",{staticStyle:{"stroke-linejoin":"round",fill:"rgb(255, 255, 255)","paint-order":"fill","fill-rule":"nonzero",stroke:"rgb(58, 184, 157)","stroke-width":"17.9814px"},attrs:{x:"230",y:"75",width:"100",height:"69.919"}}),e._v(" "),E("path",{staticStyle:{"stroke-linejoin":"round",fill:"rgb(255, 255, 255)","paint-order":"fill","fill-rule":"nonzero",stroke:"rgb(58, 184, 157)","stroke-width":"5.99379px"},attrs:{d:"M 230 104.699 L 330 104.408"}})])]),e._v(" "),E("g",{attrs:{transform:"matrix(0.208277, 0, 0, 0.208526, -9.577927, 8.398914)"}},[E("title",[e._v("Magnifying glass")]),e._v(" "),E("ellipse",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-linejoin":"round","stroke-linecap":"square",fill:"rgb(58, 184, 157)","stroke-width":"3.16004px"},attrs:{cx:"133.707",cy:"122.941",rx:"24.368",ry:"24.368"}}),e._v(" "),E("ellipse",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-linejoin":"round","stroke-linecap":"square",fill:"rgb(255, 255, 255)","stroke-width":"3.16004px"},attrs:{cx:"133.837",cy:"122.649",rx:"17.899",ry:"17.899"}}),e._v(" "),E("g",{attrs:{transform:"matrix(0.658456, 0, 0, 1.172879, 46.702843, -25.645754)"}},[E("title",[e._v("Graph")]),e._v(" "),E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)","stroke-width":"3.4505px"},attrs:{x:"137.82",y:"127.903",width:"8.622",height:"9.681"}}),e._v(" "),E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)","stroke-width":"3.4505px"},attrs:{x:"129.198",y:"123.063",width:"8.622",height:"14.521"}}),e._v(" "),E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)","stroke-width":"3.4505px"},attrs:{x:"120.576",y:"113.382",width:"8.622",height:"24.202"}})]),e._v(" "),E("rect",{staticStyle:{stroke:"rgb(0, 0, 0)","stroke-linejoin":"round","stroke-linecap":"square",fill:"rgb(58, 184, 157)","stroke-width":"3.16004px"},attrs:{x:"127.857",y:"108.138",width:"48.944",height:"10.804",rx:"3.658",ry:"3.658",transform:"matrix(-0.681998, -0.731354, 0.731354, -0.681998, 189.106796, 349.15683)"}})])])]),e._v(" "),E("symbol",{attrs:{id:"referrer",viewBox:"0 0 100 100"}},[E("title",[e._v("Referrer")]),e._v(" "),E("g",{attrs:{transform:"matrix(1, 0, 0, 1, -0.302373, 9.743923)"}},[E("rect",{staticStyle:{"stroke-linejoin":"round","stroke-width":"6px",fill:"rgb(58, 184, 157)",stroke:"rgb(51, 51, 51)"},attrs:{x:"7.442",y:"14.503",width:"38",height:"51.554"}}),e._v(" "),E("rect",{staticStyle:{fill:"rgb(216, 216, 216)",stroke:"rgb(0, 0, 0)","stroke-linejoin":"round","stroke-width":"6px"},attrs:{x:"40.044",y:"3.634",width:"38",height:"48.366"}}),e._v(" "),E("path",{staticStyle:{stroke:"rgb(51, 51, 51)",fill:"rgb(58, 184, 157)"},attrs:{d:"M 43.709 54.735 C 43.709 54.735 42.611 54.748 51.611 54.748 C 56.611 54.748 59.579 49.748 59.579 49.748 C 59.686 49.588 58.579 48.748 52.571 46.748 C 56.563 44.748 63.334 41.206 70.534 36.748 C 71.563 43.748 73.604 55.748 73.604 55.748 C 73.609 56.748 69.596 53.748 66.592 52.748 C 65.592 52.748 62.628 59.529 55.639 62.529 C 55.639 62.529 53.644 63.529 43.644 63.529 C 43.644 63.529 43.639 62.529 43.611 55.748 L 43.709 54.735 Z",transform:"matrix(1, -0.000641, 0.000641, 1, -0.032127, 0.037578)"}})]),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 28.273 90.88 L 26.99 90.88 L 26.99 95.556 L 24.406 95.556 L 24.406 82.759 L 28.528 82.759 Q 30.471 82.759 31.53 83.765 Q 32.589 84.772 32.589 86.626 Q 32.589 89.175 30.734 90.195 L 32.975 95.433 L 32.975 95.556 L 30.198 95.556 Z M 26.99 88.727 L 28.458 88.727 Q 29.231 88.727 29.618 88.213 Q 30.005 87.699 30.005 86.837 Q 30.005 84.912 28.502 84.912 L 26.99 84.912 Z M 23.369 97.021 L 33.336 97.021 L 33.336 97.856 L 23.369 97.856 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 38.07 95.732 Q 36.153 95.732 35.081 94.589 Q 34.009 93.447 34.009 91.32 L 34.009 90.564 Q 34.009 88.314 34.993 87.092 Q 35.978 85.87 37.815 85.87 Q 39.608 85.87 40.513 87.017 Q 41.418 88.164 41.436 90.414 L 41.436 91.636 L 36.487 91.636 Q 36.54 92.691 36.953 93.179 Q 37.366 93.666 38.228 93.666 Q 39.476 93.666 40.311 92.814 L 41.286 94.317 Q 40.829 94.95 39.959 95.341 Q 39.089 95.732 38.07 95.732 Z M 36.505 89.896 L 38.992 89.896 L 38.992 89.667 Q 38.975 88.815 38.711 88.375 Q 38.447 87.936 37.797 87.936 Q 37.147 87.936 36.852 88.402 Q 36.558 88.868 36.505 89.896 Z M 33.323 97.021 L 41.937 97.021 L 41.937 97.856 L 33.323 97.856 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 43.41 95.556 L 43.41 87.918 L 42.259 87.918 L 42.259 86.046 L 43.41 86.046 L 43.41 85.194 Q 43.419 83.62 44.241 82.746 Q 45.063 81.871 46.513 81.871 Q 46.952 81.871 47.638 82.047 L 47.62 84.034 Q 47.366 83.954 47.014 83.954 Q 45.907 83.954 45.907 85.273 L 45.907 86.046 L 47.392 86.046 L 47.392 87.918 L 45.907 87.918 L 45.907 95.556 Z M 41.934 97.021 L 47.831 97.021 L 47.831 97.856 L 41.934 97.856 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 52.368 95.732 Q 50.452 95.732 49.38 94.589 Q 48.308 93.447 48.308 91.32 L 48.308 90.564 Q 48.308 88.314 49.292 87.092 Q 50.276 85.87 52.113 85.87 Q 53.906 85.87 54.812 87.017 Q 55.717 88.164 55.734 90.414 L 55.734 91.636 L 50.786 91.636 Q 50.839 92.691 51.252 93.179 Q 51.665 93.666 52.526 93.666 Q 53.774 93.666 54.609 92.814 L 55.585 94.317 Q 55.128 94.95 54.258 95.341 Q 53.388 95.732 52.368 95.732 Z M 50.804 89.896 L 53.291 89.896 L 53.291 89.667 Q 53.273 88.815 53.01 88.375 Q 52.746 87.936 52.096 87.936 Q 51.445 87.936 51.151 88.402 Q 50.857 88.868 50.804 89.896 Z M 47.622 97.021 L 56.235 97.021 L 56.235 97.856 L 47.622 97.856 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 61.831 88.446 L 61.005 88.375 Q 59.986 88.375 59.625 89.272 L 59.625 95.556 L 57.129 95.556 L 57.129 86.046 L 59.476 86.046 L 59.546 87.075 Q 60.135 85.87 61.172 85.87 Q 61.594 85.87 61.858 85.985 Z M 56.233 97.021 L 62.2 97.021 L 62.2 97.856 L 56.233 97.856 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 66.776 95.732 Q 64.86 95.732 63.788 94.589 Q 62.716 93.447 62.716 91.32 L 62.716 90.564 Q 62.716 88.314 63.7 87.092 Q 64.685 85.87 66.521 85.87 Q 68.314 85.87 69.22 87.017 Q 70.125 88.164 70.143 90.414 L 70.143 91.636 L 65.194 91.636 Q 65.247 92.691 65.66 93.179 Q 66.073 93.666 66.935 93.666 Q 68.183 93.666 69.018 92.814 L 69.993 94.317 Q 69.536 94.95 68.666 95.341 Q 67.796 95.732 66.776 95.732 Z M 65.212 89.896 L 67.699 89.896 L 67.699 89.667 Q 67.682 88.815 67.418 88.375 Q 67.154 87.936 66.504 87.936 Q 65.853 87.936 65.559 88.402 Q 65.265 88.868 65.212 89.896 Z M 62.03 97.021 L 70.644 97.021 L 70.644 97.856 L 62.03 97.856 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 76.239 88.446 L 75.413 88.375 Q 74.394 88.375 74.033 89.272 L 74.033 95.556 L 71.537 95.556 L 71.537 86.046 L 73.884 86.046 L 73.954 87.075 Q 74.543 85.87 75.58 85.87 Q 76.002 85.87 76.266 85.985 Z M 70.641 97.021 L 76.609 97.021 L 76.609 97.856 L 70.641 97.856 Z"}})]),e._v(" "),E("symbol",{attrs:{id:"url",viewBox:"0 0 100 100"}},[E("title",[e._v("Url")]),e._v(" "),E("g",{attrs:{transform:"matrix(1, 0, 0, 1, 3.549847, -10.927372)"}},[E("line",{staticStyle:{fill:"rgb(216, 216, 216)","stroke-width":"9px","stroke-linejoin":"round","stroke-linecap":"round",stroke:"rgb(58, 184, 157)"},attrs:{x1:"27.2",y1:"45",x2:"65.7",y2:"45"}}),e._v(" "),E("path",{staticStyle:{fill:"none","stroke-width":"13px","stroke-linecap":"round",stroke:"rgb(51, 51, 51)"},attrs:{d:"M 65.7 63.98 C 80.793 63.98 90.226 47.641 82.679 34.571 C 79.267 28.66 73.027 24.949 66.204 24.774"}}),e._v(" "),E("path",{staticStyle:{fill:"none","stroke-width":"13px","stroke-linecap":"round",stroke:"rgb(51, 51, 51)"},attrs:{d:"M 7.565 24.774 C 22.658 24.774 32.091 41.113 24.544 54.183 C 21.132 60.094 14.892 63.805 8.069 63.98",transform:"matrix(-1, 0, 0, -1, 34.765306, 88.754002)"}})]),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 39.558 62.428 L 39.558 80.639 Q 39.522 84.74 37.299 86.917 Q 35.077 89.094 30.922 89.094 Q 26.694 89.094 24.463 86.89 Q 22.232 84.686 22.232 80.513 L 22.232 62.428 L 27.58 62.428 L 27.58 80.531 Q 27.58 82.771 28.302 83.729 Q 29.025 84.686 30.922 84.686 Q 32.819 84.686 33.523 83.738 Q 34.228 82.789 34.246 80.621 L 34.246 62.428 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 51.544 79.122 L 48.906 79.122 L 48.906 88.733 L 43.595 88.733 L 43.595 62.428 L 52.068 62.428 Q 56.06 62.428 58.237 64.497 Q 60.414 66.566 60.414 70.378 Q 60.414 75.617 56.602 77.712 L 61.209 88.48 L 61.209 88.733 L 55.5 88.733 Z M 48.906 74.695 L 51.923 74.695 Q 53.513 74.695 54.308 73.639 Q 55.103 72.582 55.103 70.811 Q 55.103 66.855 52.014 66.855 L 48.906 66.855 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 69.375 84.325 L 78.697 84.325 L 78.697 88.733 L 64.064 88.733 L 64.064 62.428 L 69.375 62.428 Z"}})]),e._v(" "),E("symbol",{attrs:{id:"src",viewBox:"0 0 100 100"}},[E("title",[e._v("File Source")]),e._v(" "),E("g",{attrs:{transform:"matrix(1, 0, 0, 1, 13.408999, 2.918516)"}},[E("path",{staticStyle:{stroke:"rgb(0, 0, 0)",fill:"none","stroke-width":"4px"},attrs:{d:"M 39.313 3.858 L 11.869 3.858 L 11.869 69.279 L 61.313 69.222 L 61.313 25.858"}}),e._v(" "),E("path",{staticStyle:{stroke:"rgb(0, 0, 0)",opacity:"0.8",fill:"none","stroke-width":"4px","stroke-linecap":"round"},attrs:{d:"M 41.418 6.503 L 51.075 16.015 L 58.644 23.729 L 41.418 23.729 L 41.418 6.503 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(58, 184, 157)","white-space":"pre"},attrs:{d:"M 26.57 46.976 L 34.312 50.376 L 34.312 55.196 L 21.87 48.975 L 21.87 44.908 L 34.312 38.67 L 34.312 43.489 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(58, 184, 157)","white-space":"pre"},attrs:{d:"M 46.418 46.907 L 38.523 43.472 L 38.523 38.687 L 51.135 44.908 L 51.135 48.975 L 38.523 55.213 L 38.523 50.428 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 28.839 82.589 Q 28.839 81.806 28.439 81.406 Q 28.039 81.007 26.984 80.576 Q 25.059 79.846 24.216 78.866 Q 23.372 77.886 23.372 76.55 Q 23.372 74.933 24.519 73.953 Q 25.666 72.973 27.432 72.973 Q 28.61 72.973 29.533 73.47 Q 30.456 73.967 30.952 74.872 Q 31.449 75.777 31.449 76.928 L 28.874 76.928 Q 28.874 76.032 28.491 75.562 Q 28.109 75.092 27.388 75.092 Q 26.712 75.092 26.334 75.491 Q 25.956 75.891 25.956 76.568 Q 25.956 77.095 26.378 77.522 Q 26.8 77.948 27.872 78.405 Q 29.744 79.082 30.592 80.066 Q 31.44 81.05 31.44 82.571 Q 31.44 84.241 30.377 85.181 Q 29.313 86.122 27.485 86.122 Q 26.246 86.122 25.226 85.612 Q 24.207 85.102 23.631 84.153 Q 23.055 83.204 23.055 81.912 L 25.648 81.912 Q 25.648 83.019 26.079 83.52 Q 26.509 84.021 27.485 84.021 Q 28.839 84.021 28.839 82.589 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 37.014 81.27 L 35.73 81.27 L 35.73 85.946 L 33.146 85.946 L 33.146 73.149 L 37.269 73.149 Q 39.211 73.149 40.27 74.155 Q 41.329 75.162 41.329 77.016 Q 41.329 79.565 39.475 80.585 L 41.716 85.823 L 41.716 85.946 L 38.938 85.946 Z M 35.73 79.117 L 37.198 79.117 Q 37.972 79.117 38.358 78.603 Q 38.745 78.089 38.745 77.227 Q 38.745 75.302 37.242 75.302 L 35.73 75.302 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 51.783 81.683 Q 51.686 83.872 50.552 84.997 Q 49.418 86.122 47.353 86.122 Q 45.182 86.122 44.026 84.694 Q 42.87 83.265 42.87 80.62 L 42.87 78.467 Q 42.87 75.83 44.066 74.402 Q 45.261 72.973 47.388 72.973 Q 49.48 72.973 50.565 74.142 Q 51.651 75.311 51.8 77.5 L 49.207 77.5 Q 49.172 76.146 48.79 75.632 Q 48.408 75.118 47.388 75.118 Q 46.351 75.118 45.92 75.843 Q 45.49 76.568 45.463 78.229 L 45.463 80.646 Q 45.463 82.553 45.889 83.265 Q 46.316 83.977 47.353 83.977 Q 48.372 83.977 48.759 83.481 Q 49.146 82.984 49.199 81.683 Z"}})])]),e._v(" "),E("symbol",{attrs:{id:"exec",viewBox:"0 0 100 100"}},[E("title",[e._v("Function call")]),e._v(" "),E("path",{staticStyle:{fill:"rgb(58, 184, 157)","white-space":"pre"},attrs:{d:"M 34.089 54.801 Q 29.223 53.222 29.11 47.566 L 29.11 44.085 Q 29.11 40.718 26.902 40.718 L 26.902 37.366 Q 29.11 37.366 29.11 33.95 L 29.11 30.438 Q 29.239 24.846 34.089 23.267 L 34.959 25.877 Q 33.348 26.651 33.203 29.89 L 33.187 33.918 Q 33.187 37.543 30.625 39.026 Q 33.187 40.524 33.187 44.198 Q 33.187 47.872 33.219 48.404 Q 33.396 51.433 34.943 52.174 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(58, 184, 157)","white-space":"pre"},attrs:{d:"M 37.844 46.68 Q 37.844 45.584 38.577 44.875 Q 39.31 44.166 40.487 44.166 Q 41.631 44.166 42.388 44.867 Q 43.145 45.568 43.145 46.68 Q 43.145 47.808 42.38 48.492 Q 41.615 49.177 40.487 49.177 Q 39.343 49.177 38.593 48.484 Q 37.844 47.792 37.844 46.68 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(58, 184, 157)","white-space":"pre"},attrs:{d:"M 47.455 46.68 Q 47.455 45.584 48.188 44.875 Q 48.921 44.166 50.097 44.166 Q 51.241 44.166 51.999 44.867 Q 52.756 45.568 52.756 46.68 Q 52.756 47.808 51.991 48.492 Q 51.225 49.177 50.097 49.177 Q 48.953 49.177 48.204 48.484 Q 47.455 47.792 47.455 46.68 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(58, 184, 157)","white-space":"pre"},attrs:{d:"M 57.05 46.68 Q 57.05 45.584 57.783 44.875 Q 58.516 44.166 59.692 44.166 Q 60.836 44.166 61.594 44.867 Q 62.351 45.568 62.351 46.68 Q 62.351 47.808 61.586 48.492 Q 60.82 49.177 59.692 49.177 Q 58.548 49.177 57.799 48.484 Q 57.05 47.792 57.05 46.68 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(58, 184, 157)","white-space":"pre"},attrs:{d:"M 65.5 52.174 Q 66.402 51.755 66.838 50.619 Q 67.273 49.483 67.273 47.308 L 67.273 44.15 Q 67.273 40.46 69.899 39.042 Q 67.273 37.608 67.273 33.918 Q 67.273 30.228 67.256 29.89 Q 67.111 26.635 65.484 25.877 L 66.354 23.267 Q 68.836 24.073 70.068 25.877 Q 71.301 27.682 71.333 30.615 L 71.333 33.966 Q 71.333 37.366 73.557 37.366 L 73.557 40.718 Q 71.333 40.718 71.333 44.118 L 71.333 47.614 Q 71.204 53.222 66.354 54.801 Z"}}),e._v(" "),E("rect",{staticStyle:{stroke:"rgb(0, 0, 0)",fill:"none","stroke-width":"6px"},attrs:{x:"17",y:"5",width:"66",height:"66"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 36.741 86.236 L 32.044 86.236 L 32.044 90.194 L 37.602 90.194 L 37.602 92.696 L 29.03 92.696 L 29.03 77.766 L 37.581 77.766 L 37.581 80.279 L 32.044 80.279 L 32.044 83.806 L 36.741 83.806 Z M 27.83 94.405 L 38.135 94.405 L 38.135 95.379 L 27.83 95.379 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 44.004 82.893 L 46.013 77.766 L 49.469 77.766 L 45.962 85.17 L 49.551 92.696 L 46.054 92.696 L 44.004 87.477 L 41.963 92.696 L 38.467 92.696 L 42.055 85.17 L 38.538 77.766 L 41.994 77.766 Z M 38.128 94.405 L 49.879 94.405 L 49.879 95.379 L 38.128 95.379 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 58.775 86.236 L 54.078 86.236 L 54.078 90.194 L 59.636 90.194 L 59.636 92.696 L 51.064 92.696 L 51.064 77.766 L 59.616 77.766 L 59.616 80.279 L 54.078 80.279 L 54.078 83.806 L 58.775 83.806 Z M 49.864 94.405 L 60.169 94.405 L 60.169 95.379 L 49.864 95.379 Z"}}),e._v(" "),E("path",{staticStyle:{fill:"rgb(51, 51, 51)","white-space":"pre","text-decoration":"underline solid rgba(0, 0, 0, 0.85)"},attrs:{d:"M 71.498 87.723 Q 71.385 90.276 70.063 91.589 Q 68.74 92.901 66.33 92.901 Q 63.798 92.901 62.449 91.235 Q 61.101 89.569 61.101 86.482 L 61.101 83.97 Q 61.101 80.894 62.495 79.227 Q 63.89 77.561 66.371 77.561 Q 68.812 77.561 70.078 78.925 Q 71.344 80.289 71.519 82.842 L 68.494 82.842 Q 68.453 81.263 68.007 80.663 Q 67.561 80.063 66.371 80.063 Q 65.161 80.063 64.659 80.909 Q 64.156 81.755 64.126 83.693 L 64.126 86.513 Q 64.126 88.738 64.623 89.569 Q 65.12 90.399 66.33 90.399 Q 67.52 90.399 67.971 89.82 Q 68.422 89.24 68.484 87.723 Z M 60.178 94.405 L 72.154 94.405 L 72.154 95.379 L 60.178 95.379 Z"}})])])])}),[],!1,null,"e7d5b9e8",null).exports},computed:{routeKey:function(){var e,E;return null!==(e=null===(E=this.$route.matched[0])||void 0===E?void 0:E.path)&&void 0!==e?e:"home"}}};var ii=t(242),Ai={insert:"head",singleton:!1};ri()(ii.Z,Ai);ii.Z.locals;const ai=qR(Ri,(function(){var e=this,E=e._self._c;return E("div",{staticClass:"laravel-query-adviser"},[E("router-view",{key:e.routeKey}),e._v(" "),E("page-footer"),e._v(" "),E("notification"),e._v(" "),E("svg-sheet")],1)}),[],!1,null,null,null).exports;const oi=qR({props:{sessionKey:{default:function(){return!1}},queries:{type:Number,default:function(){return 0}},routes:{type:Number,default:function(){return 0}},queryTime:{type:Number,default:function(){return 0}},firstQueryLogged:{default:function(){return!1}},lastQueryLogged:{default:function(){return!1}}},methods:{formatDate:function(e){return e.toLocaleString("en-us",{weekday:"short",day:"numeric",month:"short",year:"2-digit"})},export:function(){window.location.href="/laravel-query-adviser/api/session/export?session-key=".concat(this.sessionKey)}},filters:{round:function(e){return e.toFixed(2)}},computed:{firstQueryLoggedDate:function(){return!!this.firstQueryLogged&&this.formatDate(new Date(1e3*this.firstQueryLogged))},timeLog:function(){return!(!this.lastQueryLogged||!this.firstQueryLogged)&&"".concat(new Date(1e3*this.firstQueryLogged).toLocaleString("en-us",{hour:"2-digit",minute:"2-digit",second:"2-digit",hourCycle:"h24"})," -\n                 ").concat(new Date(1e3*this.lastQueryLogged).toLocaleString("en-us",{hour:"2-digit",minute:"2-digit",second:"2-digit",hourCycle:"h24"}))}}},(function(){var e=this,E=e._self._c;return E("nav",{staticClass:"level is-normal"},[E("div",{staticClass:"level-item has-text-centered"},[E("div",[E("p",{staticClass:"heading"},[e._v("Queries")]),e._v(" "),E("p",{staticClass:"title"},[e._v(e._s(e.queries))])])]),e._v(" "),E("div",{staticClass:"level-item has-text-centered"},[E("div",[E("p",{staticClass:"heading"},[e._v("Routes")]),e._v(" "),E("p",{staticClass:"title"},[e._v(e._s(e.routes))])])]),e._v(" "),E("div",{staticClass:"level-item has-text-centered"},[E("div",[E("p",{staticClass:"heading"},[e._v("Total Query time")]),e._v(" "),E("p",{staticClass:"title"},[e._v(e._s(e._f("round")(e.queryTime))+" ms")])])]),e._v(" "),E("div",{staticClass:"level-item has-text-centered"},[E("div",[E("p",{staticClass:"heading"},[e._v("AVG Query time")]),e._v(" "),E("p",{staticClass:"title"},[e._v(e._s(e._f("round")(e.queryTime/e.queries))+" ms")])])]),e._v(" "),e.firstQueryLoggedDate?E("div",{staticClass:"level-item has-text-centered"},[E("div",[E("p",[e._v(e._s(e.firstQueryLoggedDate))]),e._v(" "),E("p",[e._v(e._s(e.timeLog))])])]):e._e(),e._v(" "),E("div",{staticClass:"level-item level-right"},[E("p",{staticClass:"level-item"},[e.sessionKey?E("router-link",{staticClass:"button is-text",attrs:{to:{name:"session",params:{sessionKey:e.sessionKey,queries:e.queries,routes:e.routes,queryTime:e.queryTime,firstQueryLogged:e.firstQueryLogged,lastQueryLogged:e.lastQueryLogged}}}},[E("i",{staticClass:"material-icons"},[e._v("info")])]):e._e(),e._v(" "),e.sessionKey?E("router-link",{staticClass:"button is-text",attrs:{to:{name:"session-export",params:{sessionKey:e.sessionKey}}}},[E("i",{staticClass:"material-icons"},[e._v("file_download")])]):e._e()],1)])])}),[],!1,null,null,null).exports;var Si="/query-adviser/api/session";function Ii(){return fetch("".concat(Si,"/clear")).then((function(e){return window.EventBus.$emit("show-notification",{message:"Session cache cleared"}),e.json()}))}function Oi(e){return fetch("".concat(Si,"/").concat(e,"/export")).then((function(e){return e.blob()})).then((function(E){var t=window.URL.createObjectURL(E),T=document.createElement("a");T.href=t,T.download="".concat(e,".json"),T.click()}))}const Ni={components:{QueryStatistics:oi},props:{config:{default:function(){return{ttl:3600}}}},data:function(){return{sessions:[],isActive:!1,hasQueries:!1,activeSessionsId:null,loading:!1}},methods:{startSession:function(){var e=this;fetch("".concat(Si,"/start")).then((function(e){return e.json()})).then((function(){e.pollActiveSession()}))},stopSession:function(){var e=this;fetch("".concat(Si,"/stop")).then((function(e){return e.json()})).then((function(){e.getList(),e.isActive=!1,e.hasQueries=!1,e.activeSessionsId=null}))},hasActiveSession:function(){return fetch("".concat(Si,"/is-active")).then((function(e){return e.json()}))},getList:function(){var e=this;return this.loading=!0,fetch("".concat(Si,"/")).then((function(e){return e.json()})).then((function(E){e.sessions=E})).finally((function(){e.loading=!1}))},exportSession:function(e){return Oi(e.params.sessionKey)},pollActiveSession:function(){var e=this;this.hasActiveSession().then((function(E){var t,T,r;e.isActive=null!==(t=E.active)&&void 0!==t&&t,e.hasQueries=null!==(T=null==E?void 0:E.has_queries)&&void 0!==T&&T,e.activeSessionId=null!==(r=null==E?void 0:E.active_session_id)&&void 0!==r&&r,e.isActive?setTimeout((function(){e.pollActiveSession()}),1e3):e.getList()}))},clearSessionCache:function(){var e=this;Ii().then((function(){e.sessions=[],e.loading=!0,e.pollActiveSession()}))}},beforeRouteEnter:function(e,E,t){t((function(e){e.getList(),e.pollActiveSession()}))},beforeRouteUpdate:function(e,E,t){"session-export"===e.name?this.exportSession(e).then(t):"sessions"===e.name?(this.getList(),this.pollActiveSession(),t()):t()}},Li=Ni;var _i=t(711),Ci={insert:"head",singleton:!1};ri()(_i.Z,Ci);_i.Z.locals;var li=qR(Li,(function(){var e=this,E=e._self._c;return E("main",{staticClass:"is-vertical tile"},[E("router-view",{attrs:{name:"dialog"}}),e._v(" "),E("nav",{staticClass:"panel is-primary"},[E("div",{staticClass:"panel-heading"},[E("span",[e._v("\n                Sessions\n            ")]),e._v(" "),E("router-link",{staticClass:"button is-primary material-icons is-text is-pulled-right is-small",attrs:{tag:"span",to:{name:"session-import"}}},[e._v("file_upload")]),e._v(" "),E("span",{staticClass:"button is-primary material-icons is-text is-pulled-right is-small",attrs:{title:"clear query cache"},on:{click:e.clearSessionCache}},[e._v("\n                delete_sweeps\n            ")])],1)]),e._v(" "),E("section",{staticClass:"hero"},[e.sessions.length>0&&!e.isActive?[E("div",{staticClass:"hero-body"},[E("div",{staticClass:"container"},[E("h1",{staticClass:"title"},[e._v("\n                        You have sessions\n                    ")]),e._v(" "),E("p",[e._v("\n                        To add another session press play. "),e.isActive?e._e():E("span",{staticClass:"material-icons is-text button",on:{click:e.startSession}},[e._v("play_arrow")])])])]),e._v(" "),e._l(e.sessions,(function(t){return E("div",{staticClass:"card"},[E("query-statistics",e._b({},"query-statistics",t,!1))],1)}))]:e.loading&&0===e.sessions.length?E("div",{staticClass:"hero-body"},[e._m(0)]):E("div",{staticClass:"hero-body"},[E("div",{staticClass:"container"},[e.sessions.length>0?E("h1",{staticClass:"title"},[e._v("\n                    You have an active session.\n                ")]):E("h1",{staticClass:"title"},[e._v("\n                    No sessions found.\n                ")]),e._v(" "),E("h2",{staticClass:"subtitle"},[e._v("\n                    Sessions are stored for "+e._s(e.config.ttl/60)+" minutes. You can keep them longer by changing the config value of "),E("br"),e._v(" "),E("code",[e._v("cache.ttl")]),e._v(" in "),E("code",[e._v("laravel-query-adviser.php")])]),e._v(" "),E("ul",{staticClass:"steps"},[E("li",{staticClass:"step-item is-success"},[E("div",{staticClass:"step-marker"},[E("span",{staticClass:"icon"},[e.isActive?E("i",{staticClass:"material-icons"},[e._v("done")]):E("i",{staticClass:"material-icons",on:{click:e.startSession}},[e._v("play_arrow")])])]),e._v(" "),e._m(1)]),e._v(" "),E("li",{class:["step-item",{"is-active":e.isActive&&!e.hasQueries}]},[E("div",{staticClass:"step-marker"},[e.hasQueries?e.isActive&&e.hasQueries?E("i",{staticClass:"material-icons"},[e._v("done")]):e._e():E("i",{staticClass:"material-icons"},[e._v("open_in_browser")])]),e._v(" "),e._m(2)]),e._v(" "),E("li",{class:["step-item",{"is-active":e.isActive&&e.hasQueries}]},[E("div",{staticClass:"step-marker"},[E("span",{staticClass:"icon"},[e.isActive&&e.hasQueries?E("i",{staticClass:"material-icons",on:{click:e.stopSession}},[e._v("stop")]):e.isActive?!e.isActive&&e.hasQueries?E("i",{staticClass:"material-icons"},[e._v("done")]):e._e():E("i",{staticClass:"material-icons"},[e._v("stop")])])]),e._v(" "),e._m(3)]),e._v(" "),E("li",{class:["step-item",{"is-active":!e.isActive&&e.hasQueries}]},[e._m(4),e._v(" "),e._m(5)])])])])],2)],1)}),[function(){var e=this,E=e._self._c;return E("div",{staticClass:"container"},[E("div",{staticClass:"button is-primary is-text is-large is-loading"}),e._v(" "),E("h1",{staticClass:"title"},[e._v("\n                    Loading..\n                ")])])},function(){var e=this,E=e._self._c;return E("div",{staticClass:"step-details is-completed"},[E("p",{staticClass:"step-title"},[e._v("Step 1")]),e._v(" "),E("p",[e._v("Start a new session")])])},function(){var e=this,E=e._self._c;return E("div",{staticClass:"step-details"},[E("p",{staticClass:"step-title"},[e._v("Step 2")]),e._v(" "),E("p",[e._v("Open your application page where you would like to track the queries.")])])},function(){var e=this,E=e._self._c;return E("div",{staticClass:"step-details"},[E("p",{staticClass:"step-title"},[e._v("Step 3")]),e._v(" "),E("p",[e._v("Stop the sessions")])])},function(){var e=this._self._c;return e("div",{staticClass:"step-marker"},[e("span",{staticClass:"icon"},[e("i",{staticClass:"material-icons"},[this._v("info")])])])},function(){var e=this,E=e._self._c;return E("div",{staticClass:"step-details"},[E("p",{staticClass:"step-title"},[e._v("Step 4")]),e._v(" "),E("p",[e._v("Open the session details.")])])}],!1,null,null,null);const ci=li.exports;const ui=qR({data:function(){return{loading:!1}},methods:{uploadSession:function(){var e=this,E=new FormData(this.$refs.fileUpload);this.loading=!0,function(e){var E={Accept:"application/json, text-plain, */*","X-Requested-With":"XMLHttpRequest","X-CSRF-TOKEN":window.Laravel.csrfToken};return fetch("/query-adviser/api/session/import",{method:"POST",body:e,headers:E}).then((function(e){return e.json()}))}(E).then((function(){e.hide()}))},hide:function(){this.loading=!1,this.$router.push({name:"sessions"})}}},(function(){var e=this,E=e._self._c;return E("div",{class:["modal","is-active"]},[E("div",{staticClass:"modal-background"}),e._v(" "),E("div",{staticClass:"modal-card"},[E("header",{staticClass:"modal-card-head"},[E("p",{staticClass:"modal-card-title"},[e._v("Session import")]),e._v(" "),E("button",{staticClass:"delete",attrs:{"aria-label":"close"},on:{click:e.hide}})]),e._v(" "),E("section",{staticClass:"modal-card-body"},[e.loading?E("div",{staticClass:"button is-primary is-large is-loading"}):E("form",{ref:"fileUpload"},[E("input",{attrs:{type:"file",name:"session"},on:{change:function(E){return e.uploadSession()}}})])])])])}),[],!1,null,null,null).exports;let pi;!function(e){e.QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",e.IDENTIFIER="IDENTIFIER",e.STRING="STRING",e.VARIABLE="VARIABLE",e.RESERVED_KEYWORD="RESERVED_KEYWORD",e.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",e.RESERVED_PHRASE="RESERVED_PHRASE",e.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",e.RESERVED_CLAUSE="RESERVED_CLAUSE",e.RESERVED_SELECT="RESERVED_SELECT",e.RESERVED_JOIN="RESERVED_JOIN",e.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",e.ARRAY_KEYWORD="ARRAY_KEYWORD",e.CASE="CASE",e.END="END",e.WHEN="WHEN",e.ELSE="ELSE",e.THEN="THEN",e.LIMIT="LIMIT",e.BETWEEN="BETWEEN",e.AND="AND",e.OR="OR",e.XOR="XOR",e.OPERATOR="OPERATOR",e.COMMA="COMMA",e.ASTERISK="ASTERISK",e.DOT="DOT",e.OPEN_PAREN="OPEN_PAREN",e.CLOSE_PAREN="CLOSE_PAREN",e.LINE_COMMENT="LINE_COMMENT",e.BLOCK_COMMENT="BLOCK_COMMENT",e.NUMBER="NUMBER",e.NAMED_PARAMETER="NAMED_PARAMETER",e.QUOTED_PARAMETER="QUOTED_PARAMETER",e.NUMBERED_PARAMETER="NUMBERED_PARAMETER",e.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",e.DELIMITER="DELIMITER",e.EOF="EOF"}(pi||(pi={}));const Di=e=>({type:pi.EOF,raw:"«EOF»",text:"«EOF»",start:e}),Pi=Di(1/0),di=e=>E=>E.type===e.type&&E.text===e.text,fi={ARRAY:di({text:"ARRAY",type:pi.RESERVED_KEYWORD}),BY:di({text:"BY",type:pi.RESERVED_KEYWORD}),SET:di({text:"SET",type:pi.RESERVED_CLAUSE}),STRUCT:di({text:"STRUCT",type:pi.RESERVED_KEYWORD}),WINDOW:di({text:"WINDOW",type:pi.RESERVED_CLAUSE})},Mi=e=>e===pi.RESERVED_KEYWORD||e===pi.RESERVED_FUNCTION_NAME||e===pi.RESERVED_PHRASE||e===pi.RESERVED_CLAUSE||e===pi.RESERVED_SELECT||e===pi.RESERVED_SET_OPERATION||e===pi.RESERVED_JOIN||e===pi.ARRAY_KEYWORD||e===pi.CASE||e===pi.END||e===pi.WHEN||e===pi.ELSE||e===pi.THEN||e===pi.LIMIT||e===pi.BETWEEN||e===pi.AND||e===pi.OR||e===pi.XOR,Ui=e=>e.flatMap(hi),hi=e=>Hi(yi(e)).map((e=>e.trim())),vi=/[^[\]{}]+/y,mi=/\{.*?\}/y,Gi=/\[.*?\]/y,yi=e=>{let E=0;const t=[];for(;E<e.length;){vi.lastIndex=E;const T=vi.exec(e);T&&(t.push([T[0].trim()]),E+=T[0].length),Gi.lastIndex=E;const r=Gi.exec(e);if(r){const e=r[0].slice(1,-1).split("|").map((e=>e.trim()));t.push(["",...e]),E+=r[0].length}mi.lastIndex=E;const n=mi.exec(e);if(n){const e=n[0].slice(1,-1).split("|").map((e=>e.trim()));t.push(e),E+=n[0].length}if(!T&&!r&&!n)throw new Error(`Unbalanced parenthesis in: ${e}`)}return t},Hi=([e,...E])=>void 0===e?[""]:Hi(E).flatMap((E=>e.map((e=>e.trim()+" "+E.trim())))),gi=e=>e[e.length-1],Bi=e=>e.sort(((e,E)=>E.length-e.length||e.localeCompare(E))),Fi=e=>e.reduce(((e,E)=>Math.max(e,E.length)),0),Yi=e=>e.replace(/\s+/gu," "),bi=e=>{return E=Object.values(e).flat(),[...new Set(E)];var E},Vi=e=>/\n/.test(e),Wi=bi({keywords:["ALL","AND","ANY","ARRAY","AS","ASC","ASSERT_ROWS_MODIFIED","AT","BETWEEN","BY","CASE","CAST","COLLATE","CONTAINS","CREATE","CROSS","CUBE","CURRENT","DEFAULT","DEFINE","DESC","DISTINCT","ELSE","END","ENUM","ESCAPE","EXCEPT","EXCLUDE","EXISTS","EXTRACT","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","GROUP","GROUPING","GROUPS","HASH","HAVING","IF","IGNORE","IN","INNER","INTERSECT","INTERVAL","INTO","IS","JOIN","LATERAL","LEFT","LIKE","LIMIT","LOOKUP","MERGE","NATURAL","NEW","NO","NOT","NULL","NULLS","OF","ON","OR","ORDER","OUTER","OVER","PARTITION","PRECEDING","PROTO","RANGE","RECURSIVE","RESPECT","RIGHT","ROLLUP","ROWS","SELECT","SET","SOME","STRUCT","TABLE","TABLESAMPLE","THEN","TO","TREAT","TRUE","UNBOUNDED","UNION","UNNEST","USING","WHEN","WHERE","WINDOW","WITH","WITHIN"],datatypes:["ARRAY","BOOL","BYTES","DATE","DATETIME","GEOGRAPHY","INTERVAL","INT64","INT","SMALLINT","INTEGER","BIGINT","TINYINT","BYTEINT","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","FLOAT64","STRING","STRUCT","TIME","TIMEZONE"],stringFormat:["HEX","BASEX","BASE64M","ASCII","UTF-8","UTF8"],misc:["SAFE"],ddl:["LIKE","COPY","CLONE","IN","OUT","INOUT","RETURNS","LANGUAGE","CASCADE","RESTRICT","DETERMINISTIC"]}),xi=bi({aead:["KEYS.NEW_KEYSET","KEYS.ADD_KEY_FROM_RAW_BYTES","AEAD.DECRYPT_BYTES","AEAD.DECRYPT_STRING","AEAD.ENCRYPT","KEYS.KEYSET_CHAIN","KEYS.KEYSET_FROM_JSON","KEYS.KEYSET_TO_JSON","KEYS.ROTATE_KEYSET","KEYS.KEYSET_LENGTH"],aggregateAnalytic:["ANY_VALUE","ARRAY_AGG","AVG","CORR","COUNT","COUNTIF","COVAR_POP","COVAR_SAMP","MAX","MIN","ST_CLUSTERDBSCAN","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","VAR_POP","VAR_SAMP"],aggregate:["ANY_VALUE","ARRAY_AGG","ARRAY_CONCAT_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","COUNTIF","LOGICAL_AND","LOGICAL_OR","MAX","MIN","STRING_AGG","SUM"],approximateAggregate:["APPROX_COUNT_DISTINCT","APPROX_QUANTILES","APPROX_TOP_COUNT","APPROX_TOP_SUM"],array:["ARRAY_CONCAT","ARRAY_LENGTH","ARRAY_TO_STRING","GENERATE_ARRAY","GENERATE_DATE_ARRAY","GENERATE_TIMESTAMP_ARRAY","ARRAY_REVERSE","OFFSET","SAFE_OFFSET","ORDINAL","SAFE_ORDINAL"],bitwise:["BIT_COUNT"],conversion:["PARSE_BIGNUMERIC","PARSE_NUMERIC","SAFE_CAST"],date:["CURRENT_DATE","EXTRACT","DATE","DATE_ADD","DATE_SUB","DATE_DIFF","DATE_TRUNC","DATE_FROM_UNIX_DATE","FORMAT_DATE","LAST_DAY","PARSE_DATE","UNIX_DATE"],datetime:["CURRENT_DATETIME","DATETIME","EXTRACT","DATETIME_ADD","DATETIME_SUB","DATETIME_DIFF","DATETIME_TRUNC","FORMAT_DATETIME","LAST_DAY","PARSE_DATETIME"],debugging:["ERROR"],federatedQuery:["EXTERNAL_QUERY"],geography:["S2_CELLIDFROMPOINT","S2_COVERINGCELLIDS","ST_ANGLE","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_AZIMUTH","ST_BOUNDARY","ST_BOUNDINGBOX","ST_BUFFER","ST_BUFFERWITHTOLERANCE","ST_CENTROID","ST_CENTROID_AGG","ST_CLOSESTPOINT","ST_CLUSTERDBSCAN","ST_CONTAINS","ST_CONVEXHULL","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DUMP","ST_DWITHIN","ST_ENDPOINT","ST_EQUALS","ST_EXTENT","ST_EXTERIORRING","ST_GEOGFROM","ST_GEOGFROMGEOJSON","ST_GEOGFROMTEXT","ST_GEOGFROMWKB","ST_GEOGPOINT","ST_GEOGPOINTFROMGEOHASH","ST_GEOHASH","ST_GEOMETRYTYPE","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_INTERSECTSBOX","ST_ISCOLLECTION","ST_ISEMPTY","ST_LENGTH","ST_MAKELINE","ST_MAKEPOLYGON","ST_MAKEPOLYGONORIENTED","ST_MAXDISTANCE","ST_NPOINTS","ST_NUMGEOMETRIES","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SIMPLIFY","ST_SNAPTOGRID","ST_STARTPOINT","ST_TOUCHES","ST_UNION","ST_UNION_AGG","ST_WITHIN","ST_X","ST_Y"],hash:["FARM_FINGERPRINT","MD5","SHA1","SHA256","SHA512"],hll:["HLL_COUNT.INIT","HLL_COUNT.MERGE","HLL_COUNT.MERGE_PARTIAL","HLL_COUNT.EXTRACT"],interval:["MAKE_INTERVAL","EXTRACT","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL"],json:["JSON_EXTRACT","JSON_QUERY","JSON_EXTRACT_SCALAR","JSON_VALUE","JSON_EXTRACT_ARRAY","JSON_QUERY_ARRAY","JSON_EXTRACT_STRING_ARRAY","JSON_VALUE_ARRAY","TO_JSON_STRING"],math:["ABS","SIGN","IS_INF","IS_NAN","IEEE_DIVIDE","RAND","SQRT","POW","POWER","EXP","LN","LOG","LOG10","GREATEST","LEAST","DIV","SAFE_DIVIDE","SAFE_MULTIPLY","SAFE_NEGATE","SAFE_ADD","SAFE_SUBTRACT","MOD","ROUND","TRUNC","CEIL","CEILING","FLOOR","COS","COSH","ACOS","ACOSH","SIN","SINH","ASIN","ASINH","TAN","TANH","ATAN","ATANH","ATAN2","RANGE_BUCKET"],navigation:["FIRST_VALUE","LAST_VALUE","NTH_VALUE","LEAD","LAG","PERCENTILE_CONT","PERCENTILE_DISC"],net:["NET.IP_FROM_STRING","NET.SAFE_IP_FROM_STRING","NET.IP_TO_STRING","NET.IP_NET_MASK","NET.IP_TRUNC","NET.IPV4_FROM_INT64","NET.IPV4_TO_INT64","NET.HOST","NET.PUBLIC_SUFFIX","NET.REG_DOMAIN"],numbering:["RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","NTILE","ROW_NUMBER"],security:["SESSION_USER"],statisticalAggregate:["CORR","COVAR_POP","COVAR_SAMP","STDDEV_POP","STDDEV_SAMP","STDDEV","VAR_POP","VAR_SAMP","VARIANCE"],string:["ASCII","BYTE_LENGTH","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CODE_POINTS_TO_BYTES","CODE_POINTS_TO_STRING","CONCAT","CONTAINS_SUBSTR","ENDS_WITH","FORMAT","FROM_BASE32","FROM_BASE64","FROM_HEX","INITCAP","INSTR","LEFT","LENGTH","LPAD","LOWER","LTRIM","NORMALIZE","NORMALIZE_AND_CASEFOLD","OCTET_LENGTH","REGEXP_CONTAINS","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","REPEAT","REVERSE","RIGHT","RPAD","RTRIM","SAFE_CONVERT_BYTES_TO_STRING","SOUNDEX","SPLIT","STARTS_WITH","STRPOS","SUBSTR","SUBSTRING","TO_BASE32","TO_BASE64","TO_CODE_POINTS","TO_HEX","TRANSLATE","TRIM","UNICODE","UPPER"],time:["CURRENT_TIME","TIME","EXTRACT","TIME_ADD","TIME_SUB","TIME_DIFF","TIME_TRUNC","FORMAT_TIME","PARSE_TIME"],timestamp:["CURRENT_TIMESTAMP","EXTRACT","STRING","TIMESTAMP","TIMESTAMP_ADD","TIMESTAMP_SUB","TIMESTAMP_DIFF","TIMESTAMP_TRUNC","FORMAT_TIMESTAMP","PARSE_TIMESTAMP","TIMESTAMP_SECONDS","TIMESTAMP_MILLIS","TIMESTAMP_MICROS","UNIX_SECONDS","UNIX_MILLIS","UNIX_MICROS"],uuid:["GENERATE_UUID"],conditional:["COALESCE","IF","IFNULL","NULLIF"],legacyAggregate:["AVG","BIT_AND","BIT_OR","BIT_XOR","CORR","COUNT","COVAR_POP","COVAR_SAMP","EXACT_COUNT_DISTINCT","FIRST","GROUP_CONCAT","GROUP_CONCAT_UNQUOTED","LAST","MAX","MIN","NEST","NTH","QUANTILES","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","TOP","UNIQUE","VARIANCE","VAR_POP","VAR_SAMP"],legacyBitwise:["BIT_COUNT"],legacyCasting:["BOOLEAN","BYTES","CAST","FLOAT","HEX_STRING","INTEGER","STRING"],legacyComparison:["COALESCE","GREATEST","IFNULL","IS_INF","IS_NAN","IS_EXPLICITLY_DEFINED","LEAST","NVL"],legacyDatetime:["CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE","DATE_ADD","DATEDIFF","DAY","DAYOFWEEK","DAYOFYEAR","FORMAT_UTC_USEC","HOUR","MINUTE","MONTH","MSEC_TO_TIMESTAMP","NOW","PARSE_UTC_USEC","QUARTER","SEC_TO_TIMESTAMP","SECOND","STRFTIME_UTC_USEC","TIME","TIMESTAMP","TIMESTAMP_TO_MSEC","TIMESTAMP_TO_SEC","TIMESTAMP_TO_USEC","USEC_TO_TIMESTAMP","UTC_USEC_TO_DAY","UTC_USEC_TO_HOUR","UTC_USEC_TO_MONTH","UTC_USEC_TO_WEEK","UTC_USEC_TO_YEAR","WEEK","YEAR"],legacyIp:["FORMAT_IP","PARSE_IP","FORMAT_PACKED_IP","PARSE_PACKED_IP"],legacyJson:["JSON_EXTRACT","JSON_EXTRACT_SCALAR"],legacyMath:["ABS","ACOS","ACOSH","ASIN","ASINH","ATAN","ATANH","ATAN2","CEIL","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG2","LOG10","PI","POW","RADIANS","RAND","ROUND","SIN","SINH","SQRT","TAN","TANH"],legacyRegex:["REGEXP_MATCH","REGEXP_EXTRACT","REGEXP_REPLACE"],legacyString:["CONCAT","INSTR","LEFT","LENGTH","LOWER","LPAD","LTRIM","REPLACE","RIGHT","RPAD","RTRIM","SPLIT","SUBSTR","UPPER"],legacyTableWildcard:["TABLE_DATE_RANGE","TABLE_DATE_RANGE_STRICT","TABLE_QUERY"],legacyUrl:["HOST","DOMAIN","TLD"],legacyWindow:["AVG","COUNT","MAX","MIN","STDDEV","SUM","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER"],legacyMisc:["CURRENT_USER","EVERY","FROM_BASE64","HASH","FARM_FINGERPRINT","IF","POSITION","SHA1","SOME","TO_BASE64"],other:["BQ.JOBS.CANCEL","BQ.REFRESH_MATERIALIZED_VIEW"],ddl:["OPTIONS"],pivot:["PIVOT","UNPIVOT"],dataTypes:["BYTES","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","STRING"]}),Qi=Ui(["SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]"]),Xi=Ui(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","OMIT RECORD IF","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]","UPDATE SET","CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]","CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]","CLUSTER BY","FOR SYSTEM_TIME AS OF","WITH CONNECTION","WITH PARTITION COLUMNS","REMOTE WITH CONNECTION"]),wi=Ui(["UPDATE","DELETE [FROM]","DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME TO","ALTER COLUMN [IF EXISTS]","SET DEFAULT COLLATE","SET OPTIONS","DROP NOT NULL","SET DATA TYPE","ALTER SCHEMA [IF EXISTS]","ALTER [MATERIALIZED] VIEW [IF EXISTS]","ALTER BI_CAPACITY","TRUNCATE TABLE","CREATE SCHEMA [IF NOT EXISTS]","DEFAULT COLLATE","CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]","CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]","GRANT TO","FILTER USING","CREATE CAPACITY","AS JSON","CREATE RESERVATION","CREATE ASSIGNMENT","CREATE SEARCH INDEX [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","DROP [MATERIALIZED] VIEW [IF EXISTS]","DROP [TABLE] FUNCTION [IF EXISTS]","DROP PROCEDURE [IF EXISTS]","DROP ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","DROP CAPACITY [IF EXISTS]","DROP RESERVATION [IF EXISTS]","DROP ASSIGNMENT [IF EXISTS]","DROP SEARCH INDEX [IF EXISTS]","DROP [IF EXISTS]","GRANT","REVOKE","DECLARE","EXECUTE IMMEDIATE","LOOP","END LOOP","REPEAT","END REPEAT","WHILE","END WHILE","BREAK","LEAVE","CONTINUE","ITERATE","FOR","END FOR","BEGIN","BEGIN TRANSACTION","COMMIT TRANSACTION","ROLLBACK TRANSACTION","RAISE","RETURN","CALL","ASSERT","EXPORT DATA"]),Ki=Ui(["UNION {ALL | DISTINCT}","EXCEPT DISTINCT","INTERSECT DISTINCT"]),$i=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),ki=Ui(["TABLESAMPLE SYSTEM","ANY TYPE","ALL COLUMNS","NOT DETERMINISTIC","{ROWS | RANGE} BETWEEN"]),Ji={tokenizerOptions:{reservedSelect:Qi,reservedClauses:[...Xi,...wi],reservedSetOperations:Ki,reservedJoins:$i,reservedPhrases:ki,reservedKeywords:Wi,reservedFunctionNames:xi,extraParens:["[]"],stringTypes:[{quote:'""".."""',prefixes:["R","B","RB","BR"]},{quote:"'''..'''",prefixes:["R","B","RB","BR"]},'""-bs',"''-bs",{quote:'""-raw',prefixes:["R","B","RB","BR"],requirePrefix:!0},{quote:"''-raw",prefixes:["R","B","RB","BR"],requirePrefix:!0}],identTypes:["``"],identChars:{dashes:!0},paramTypes:{positional:!0,named:["@"],quoted:["@"]},lineCommentTypes:["--","#"],operators:["&","|","^","~",">>","<<","||"],postProcess:function(e){return function(e){let E=Pi;return e.map((e=>"OFFSET"===e.text&&"["===E.text?(E=e,{...e,type:pi.RESERVED_FUNCTION_NAME}):(E=e,e)))}(function(e){const E=[];for(let T=0;T<e.length;T++){var t;const r=e[T];if((fi.ARRAY(r)||fi.STRUCT(r))&&"<"===(null===(t=e[T+1])||void 0===t?void 0:t.text)){const t=qi(e,T+1),n=e.slice(T,t+1);E.push({type:pi.IDENTIFIER,raw:n.map(Zi("raw")).join(""),text:n.map(Zi("text")).join(""),start:r.start}),T=t}else E.push(r)}return E}(e))}},formatOptions:{onelineClauses:wi}};const Zi=e=>E=>E.type===pi.IDENTIFIER||E.type===pi.COMMA?E[e]+" ":E[e];function qi(e,E){let t=0;for(let T=E;T<e.length;T++){const E=e[T];if("<"===E.text?t++:">"===E.text?t--:">>"===E.text&&(t-=2),0===t)return T}return e.length-1}const ji=bi({aggregate:["ARRAY_AGG","AVG","CORR","CORRELATION","COUNT","COUNT_BIG","COVAR_POP","COVARIANCE","COVAR","COVAR_SAMP","COVARIANCE_SAMP","CUME_DIST","GROUPING","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_ICPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR","VAR_SAMP","VARIANCE_SAMP","XMLAGG"],scalar:["ABS","ABSVAL","ACOS","ADD_DAYS","ADD_MONTHS","ARRAY_DELETE","ARRAY_FIRST","ARRAY_LAST","ARRAY_NEXT","ARRAY_PRIOR","ARRAY_TRIM","ASCII","ASCII_CHR","ASCII_STR","ASCIISTR","ASIN","ATAN","ATANH","ATAN2","BIGINT","BINARY","BITAND","BITANDNOT","BITOR","BITXOR","BITNOT","BLOB","BTRIM","CARDINALITY","CCSID_ENCODING","CEILING","CEIL","CHAR","CHAR9","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CLOB","COALESCE","COLLATION_KEY","COMPARE_DECFLOAT","CONCAT","CONTAINS","COS","COSH","DATE","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEK_ISO","DAYOFYEAR","DAYS","DAYS_BETWEEN","DBCLOB","DECFLOAT","DECFLOAT_FORMAT","DECFLOAT_SORTKEY","DECIMAL","DEC","DECODE","DECRYPT_BINARY","DECRYPT_BIT","DECRYPT_CHAR","DECRYPT_DB","DECRYPT_DATAKEY_BIGINT","DECRYPT_DATAKEY_BIT","DECRYPT_DATAKEY_CLOB","DECRYPT_DATAKEY_DBCLOB","DECRYPT_DATAKEY_DECIMAL","DECRYPT_DATAKEY_INTEGER","DECRYPT_DATAKEY_VARCHAR","DECRYPT_DATAKEY_VARGRAPHIC","DEGREES","DIFFERENCE","DIGITS","DOUBLE_PRECISION","DOUBLE","DSN_XMLVALIDATE","EBCDIC_CHR","EBCDIC_STR","ENCRYPT_DATAKEY","ENCRYPT_TDES","EXP","EXTRACT","FLOAT","FLOOR","GENERATE_UNIQUE","GENERATE_UNIQUE_BINARY","GETHINT","GETVARIABLE","GRAPHIC","GREATEST","HASH","HASH_CRC32","HASH_MD5","HASH_SHA1","HASH_SHA256","HEX","HOUR","IDENTITY_VAL_LOCAL","IFNULL","INSERT","INSTR","INTEGER","INT","JULIAN_DAY","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LN","LOCATE","LOCATE_IN_STRING","LOG10","LOWER","LPAD","LTRIM","MAX","MAX_CARDINALITY","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MOD","MONTH","MONTHS_BETWEEN","MQREAD","MQREADCLOB","MQRECEIVE","MQRECEIVECLOB","MQSEND","MULTIPLY_ALT","NEXT_DAY","NEXT_MONTH","NORMALIZE_DECFLOAT","NORMALIZE_STRING","NULLIF","NVL","OVERLAY","PACK","POSITION","POSSTR","POWER","POW","QUANTIZE","QUARTER","RADIANS","RAISE_ERROR","RANDOM","RAND","REAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RIGHT","ROUND","ROUND_TIMESTAMP","ROWID","RPAD","RTRIM","SCORE","SECOND","SIGN","SIN","SINH","SMALLINT","SOUNDEX","SOAPHTTPC","SOAPHTTPV","SOAPHTTPNC","SOAPHTTPNV","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTRING","TAN","TANH","TIME","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMP_TZ","TO_CHAR","TO_CLOB","TO_DATE","TO_NUMBER","TOTALORDER","TO_TIMESTAMP","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRUNC","TRUNC_TIMESTAMP","UCASE","UNICODE","UNICODE_STR","UNISTR","UPPER","VALUE","VARBINARY","VARCHAR","VARCHAR9","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT","VARGRAPHIC","VERIFY_GROUP_FOR_USER","VERIFY_ROLE_FOR_USER","VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER","WEEK","WEEK_ISO","WRAP","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLMODIFY","XMLNAMESPACES","XMLPARSE","XMLPI","XMLQUERY","XMLSERIALIZE","XMLTEXT","XMLXSROBJECTID","XSLTRANSFORM","YEAR"],table:["ADMIN_TASK_LIST","ADMIN_TASK_OUTPUT","ADMIN_TASK_STATUS","BLOCKING_THREADS","MQREADALL","MQREADALLCLOB","MQRECEIVEALL","MQRECEIVEALLCLOB","XMLTABLE"],row:["UNPACK"],olap:["CUME_DIST","PERCENT_RANK","RANK","DENSE_RANK","NTILE","LAG","LEAD","ROW_NUMBER","FIRST_VALUE","LAST_VALUE","NTH_VALUE","RATIO_TO_REPORT"],cast:["CAST"]}),zi=bi({standard:["ALL","ALLOCATE","ALLOW","ALTERAND","ANY","AS","ARRAY","ARRAY_EXISTS","ASENSITIVE","ASSOCIATE","ASUTIME","AT","AUDIT","AUX","AUXILIARY","BEFORE","BEGIN","BETWEEN","BUFFERPOOL","BY","CAPTURE","CASCADED","CAST","CCSID","CHARACTER","CHECK","CLONE","CLUSTER","COLLECTION","COLLID","COLUMN","CONDITION","CONNECTION","CONSTRAINT","CONTENT","CONTINUE","CREATE","CUBE","CURRENT","CURRENT_DATE","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRVAL","CURSOR","DATA","DATABASE","DBINFO","DECLARE","DEFAULT","DESCRIPTOR","DETERMINISTIC","DISABLE","DISALLOW","DISTINCT","DO","DOCUMENT","DSSIZE","DYNAMIC","EDITPROC","ELSE","ELSEIF","ENCODING","ENCRYPTION","ENDING","END-EXEC","ERASE","ESCAPE","EXCEPTION","EXISTS","EXIT","EXTERNAL","FENCED","FIELDPROC","FINAL","FIRST","FOR","FREE","FULL","FUNCTION","GENERATED","GET","GLOBAL","GOTO","GROUP","HANDLER","HOLD","HOURS","IF","IMMEDIATE","IN","INCLUSIVE","INDEX","INHERIT","INNER","INOUT","INSENSITIVE","INTO","IS","ISOBID","ITERATE","JAR","KEEP","KEY","LANGUAGE","LAST","LC_CTYPE","LEAVE","LIKE","LOCAL","LOCALE","LOCATOR","LOCATORS","LOCK","LOCKMAX","LOCKSIZE","LONG","LOOP","MAINTAINED","MATERIALIZED","MICROSECONDS","MINUTEMINUTES","MODIFIES","MONTHS","NEXT","NEXTVAL","NO","NONE","NOT","NULL","NULLS","NUMPARTS","OBID","OF","OLD","ON","OPTIMIZATION","OPTIMIZE","ORDER","ORGANIZATION","OUT","OUTER","PACKAGE","PARAMETER","PART","PADDED","PARTITION","PARTITIONED","PARTITIONING","PATH","PIECESIZE","PERIOD","PLAN","PRECISION","PREVVAL","PRIOR","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PSID","PUBLIC","QUERY","QUERYNO","READS","REFERENCES","RESIGNAL","RESTRICT","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNS","ROLE","ROLLUP","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROW","ROWSET","SCHEMA","SCRATCHPAD","SECONDS","SECQTY","SECURITY","SEQUENCE","SENSITIVE","SESSION_USER","SIMPLE","SOME","SOURCE","SPECIFIC","STANDARD","STATIC","STATEMENT","STAY","STOGROUP","STORES","STYLE","SUMMARY","SYNONYM","SYSDATE","SYSTEM","SYSTIMESTAMP","TABLE","TABLESPACE","THEN","TO","TRIGGER","TYPE","UNDO","UNIQUE","UNTIL","USER","USING","VALIDPROC","VARIABLE","VARIANT","VCAT","VERSIONING","VIEW","VOLATILE","VOLUMES","WHILE","WLM","XMLEXISTS","XMLCAST","YEARS","ZONE"]}),eA=Ui(["SELECT [ALL | DISTINCT]"]),EA=Ui(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY [INPUT SEQUENCE]","FETCH FIRST","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT","CREATE [OR REPLACE] VIEW","CREATE [GLOBAL TEMPORARY] TABLE"]),tA=Ui(["UPDATE","WHERE CURRENT OF","WITH {RR | RS | CS | UR}","DELETE FROM","DROP TABLE [HIERARCHY]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","ALTER [COLUMN]","SET DATA TYPE","SET NOT NULL","DROP {IDENTITY | EXPRESSION | DEFAULT | NOT NULL}","TRUNCATE [TABLE]","SET [CURRENT] SCHEMA","AFTER","GO","ALLOCATE CURSOR","ALTER DATABASE","ALTER FUNCTION","ALTER INDEX","ALTER MASK","ALTER PERMISSION","ALTER PROCEDURE","ALTER SEQUENCE","ALTER STOGROUP","ALTER TABLESPACE","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER VIEW","ASSOCIATE LOCATORS","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT","COMMIT","CONNECT","CREATE ALIAS","CREATE AUXILIARY TABLE","CREATE DATABASE","CREATE FUNCTION","CREATE GLOBAL TEMPORARY TABLE","CREATE INDEX","CREATE LOB TABLESPACE","CREATE MASK","CREATE PERMISSION","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE STOGROUP","CREATE SYNONYM","CREATE TABLESPACE","CREATE TRIGGER","CREATE TRUSTED CONTEXT","CREATE TYPE","CREATE VARIABLE","DECLARE CURSOR","DECLARE GLOBAL TEMPORARY TABLE","DECLARE STATEMENT","DECLARE TABLE","DECLARE VARIABLE","DESCRIBE CURSOR","DESCRIBE INPUT","DESCRIBE OUTPUT","DESCRIBE PROCEDURE","DESCRIBE TABLE","DROP","END DECLARE SECTION","EXCHANGE","EXECUTE","EXECUTE IMMEDIATE","EXPLAIN","FETCH","FREE LOCATOR","GET DIAGNOSTICS","GRANT","HOLD LOCATOR","INCLUDE","LABEL","LOCK TABLE","OPEN","PREPARE","REFRESH","RELEASE","RELEASE SAVEPOINT","RENAME","REVOKE","ROLLBACK","SAVEPOINT","SELECT INTO","SET CONNECTION","SET CURRENT ACCELERATOR","SET CURRENT APPLICATION COMPATIBILITY","SET CURRENT APPLICATION ENCODING SCHEME","SET CURRENT DEBUG MODE","SET CURRENT DECFLOAT ROUNDING MODE","SET CURRENT DEGREE","SET CURRENT EXPLAIN MODE","SET CURRENT GET_ACCEL_ARCHIVE","SET CURRENT LOCALE LC_CTYPE","SET CURRENT MAINTAINED TABLE TYPES FOR OPTIMIZATION","SET CURRENT OPTIMIZATION HINT","SET CURRENT PACKAGE PATH","SET CURRENT PACKAGESET","SET CURRENT PRECISION","SET CURRENT QUERY ACCELERATION","SET CURRENT QUERY ACCELERATION WAITFORDATA","SET CURRENT REFRESH AGE","SET CURRENT ROUTINE VERSION","SET CURRENT RULES","SET CURRENT SQLID","SET CURRENT TEMPORAL BUSINESS_TIME","SET CURRENT TEMPORAL SYSTEM_TIME","SET ENCRYPTION PASSWORD","SET PATH","SET SESSION TIME ZONE","SIGNAL","VALUES INTO","WHENEVER"]),TA=Ui(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),rA=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),nA=Ui(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),sA={tokenizerOptions:{reservedSelect:eA,reservedClauses:[...EA,...tA],reservedSetOperations:TA,reservedJoins:rA,reservedPhrases:nA,reservedKeywords:zi,reservedFunctionNames:ji,stringTypes:[{quote:"''-qq",prefixes:["G","N","U&"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","¬=","¬>","¬<","!>","!<","||"]},formatOptions:{onelineClauses:tA}},RA=bi({math:["ABS","ACOS","ASIN","ATAN","BIN","BROUND","CBRT","CEIL","CEILING","CONV","COS","DEGREES","EXP","FACTORIAL","FLOOR","GREATEST","HEX","LEAST","LN","LOG","LOG10","LOG2","NEGATIVE","PI","PMOD","POSITIVE","POW","POWER","RADIANS","RAND","ROUND","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIN","SQRT","TAN","UNHEX","WIDTH_BUCKET"],array:["ARRAY_CONTAINS","MAP_KEYS","MAP_VALUES","SIZE","SORT_ARRAY"],conversion:["BINARY","CAST"],date:["ADD_MONTHS","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","QUARTER","SECOND","TIMESTAMP","TO_DATE","TO_UTC_TIMESTAMP","TRUNC","UNIX_TIMESTAMP","WEEKOFYEAR","YEAR"],conditional:["ASSERT_TRUE","COALESCE","IF","ISNOTNULL","ISNULL","NULLIF","NVL"],string:["ASCII","BASE64","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONTEXT_NGRAMS","DECODE","ELT","ENCODE","FIELD","FIND_IN_SET","FORMAT_NUMBER","GET_JSON_OBJECT","IN_FILE","INITCAP","INSTR","LCASE","LENGTH","LEVENSHTEIN","LOCATE","LOWER","LPAD","LTRIM","NGRAMS","OCTET_LENGTH","PARSE_URL","PRINTF","QUOTE","REGEXP_EXTRACT","REGEXP_REPLACE","REPEAT","REVERSE","RPAD","RTRIM","SENTENCES","SOUNDEX","SPACE","SPLIT","STR_TO_MAP","SUBSTR","SUBSTRING","TRANSLATE","TRIM","UCASE","UNBASE64","UPPER"],masking:["MASK","MASK_FIRST_N","MASK_HASH","MASK_LAST_N","MASK_SHOW_FIRST_N","MASK_SHOW_LAST_N"],misc:["AES_DECRYPT","AES_ENCRYPT","CRC32","CURRENT_DATABASE","CURRENT_USER","HASH","JAVA_METHOD","LOGGED_IN_USER","MD5","REFLECT","SHA","SHA1","SHA2","SURROGATE_KEY","VERSION"],aggregate:["AVG","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COVAR_POP","COVAR_SAMP","HISTOGRAM_NUMERIC","MAX","MIN","NTILE","PERCENTILE","PERCENTILE_APPROX","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE"],table:["EXPLODE","INLINE","JSON_TUPLE","PARSE_URL_TUPLE","POSEXPLODE","STACK"],window:["LEAD","LAG","FIRST_VALUE","LAST_VALUE","RANK","ROW_NUMBER","DENSE_RANK","CUME_DIST","PERCENT_RANK","NTILE"],dataTypes:["DECIMAL","NUMERIC","VARCHAR","CHAR"]}),iA=bi({nonReserved:["ADD","ADMIN","AFTER","ANALYZE","ARCHIVE","ASC","BEFORE","BUCKET","BUCKETS","CASCADE","CHANGE","CLUSTER","CLUSTERED","CLUSTERSTATUS","COLLECTION","COLUMNS","COMMENT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONTINUE","DATA","DATABASES","DATETIME","DAY","DBPROPERTIES","DEFERRED","DEFINED","DELIMITED","DEPENDENCY","DESC","DIRECTORIES","DIRECTORY","DISABLE","DISTRIBUTE","ELEM_TYPE","ENABLE","ESCAPED","EXCLUSIVE","EXPLAIN","EXPORT","FIELDS","FILE","FILEFORMAT","FIRST","FORMAT","FORMATTED","FUNCTIONS","HOLD_DDLTIME","HOUR","IDXPROPERTIES","IGNORE","INDEX","INDEXES","INPATH","INPUTDRIVER","INPUTFORMAT","ITEMS","JAR","KEYS","KEY_TYPE","LIMIT","LINES","LOAD","LOCATION","LOCK","LOCKS","LOGICAL","LONG","MAPJOIN","MATERIALIZED","METADATA","MINUS","MINUTE","MONTH","MSCK","NOSCAN","NO_DROP","OFFLINE","OPTION","OUTPUTDRIVER","OUTPUTFORMAT","OVERWRITE","OWNER","PARTITIONED","PARTITIONS","PLUS","PRETTY","PRINCIPALS","PROTECTION","PURGE","READ","READONLY","REBUILD","RECORDREADER","RECORDWRITER","RELOAD","RENAME","REPAIR","REPLACE","REPLICATION","RESTRICT","REWRITE","ROLE","ROLES","SCHEMA","SCHEMAS","SECOND","SEMI","SERDE","SERDEPROPERTIES","SERVER","SETS","SHARED","SHOW","SHOW_DATABASE","SKEWED","SORT","SORTED","SSL","STATISTICS","STORED","STREAMTABLE","STRING","STRUCT","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","TINYINT","TOUCH","TRANSACTIONS","UNARCHIVE","UNDO","UNIONTYPE","UNLOCK","UNSET","UNSIGNED","URI","USE","UTC","UTCTIMESTAMP","VALUE_TYPE","VIEW","WHILE","YEAR","AUTOCOMMIT","ISOLATION","LEVEL","OFFSET","SNAPSHOT","TRANSACTION","WORK","WRITE","ABORT","KEY","LAST","NORELY","NOVALIDATE","NULLS","RELY","VALIDATE","DETAIL","DOW","EXPRESSION","OPERATOR","QUARTER","SUMMARY","VECTORIZATION","WEEK","YEARS","MONTHS","WEEKS","DAYS","HOURS","MINUTES","SECONDS","TIMESTAMPTZ","ZONE"],reserved:["ALL","ALTER","AND","ARRAY","AS","AUTHORIZATION","BETWEEN","BIGINT","BINARY","BOOLEAN","BOTH","BY","CASE","CAST","CHAR","COLUMN","CONF","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIMESTAMP","CURSOR","DATABASE","DATE","DECIMAL","DELETE","DESCRIBE","DISTINCT","DOUBLE","DROP","ELSE","END","EXCHANGE","EXISTS","EXTENDED","EXTERNAL","FALSE","FETCH","FLOAT","FOLLOWING","FOR","FROM","FULL","FUNCTION","GRANT","GROUP","GROUPING","HAVING","IF","IMPORT","IN","INNER","INSERT","INT","INTERSECT","INTERVAL","INTO","IS","JOIN","LATERAL","LEFT","LESS","LIKE","LOCAL","MACRO","MAP","MORE","NONE","NOT","NULL","OF","ON","OR","ORDER","OUT","OUTER","OVER","PARTIALSCAN","PARTITION","PERCENT","PRECEDING","PRESERVE","PROCEDURE","RANGE","READS","REDUCE","REVOKE","RIGHT","ROLLUP","ROW","ROWS","SELECT","SET","SMALLINT","TABLE","TABLESAMPLE","THEN","TIMESTAMP","TO","TRANSFORM","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNION","UNIQUEJOIN","UPDATE","USER","USING","UTC_TMESTAMP","VALUES","VARCHAR","WHEN","WHERE","WINDOW","WITH","COMMIT","ONLY","REGEXP","RLIKE","ROLLBACK","START","CACHE","CONSTRAINT","FOREIGN","PRIMARY","REFERENCES","DAYOFWEEK","EXTRACT","FLOOR","INTEGER","PRECISION","VIEWS","TIME","NUMERIC","SYNC"],fileTypes:["TEXTFILE","SEQUENCEFILE","ORC","CSV","TSV","PARQUET","AVRO","RCFILE","JSONFILE","INPUTFORMAT","OUTPUTFORMAT"]}),AA=Ui(["SELECT [ALL | DISTINCT]"]),aA=Ui(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT INTO [TABLE]","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT [VALUES]","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]"]),oA=Ui(["UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","RENAME TO","TRUNCATE [TABLE]","ALTER","CREATE","USE","DESCRIBE","DROP","FETCH","SHOW","STORED AS","STORED BY","ROW FORMAT"]),SA=Ui(["UNION [ALL | DISTINCT]"]),IA=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","LEFT SEMI JOIN"]),OA=Ui(["{ROWS | RANGE} BETWEEN"]),NA={tokenizerOptions:{reservedSelect:AA,reservedClauses:[...aA,...oA],reservedSetOperations:SA,reservedJoins:IA,reservedPhrases:OA,reservedKeywords:iA,reservedFunctionNames:RA,extraParens:["[]"],stringTypes:['""-bs',"''-bs"],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||"]},formatOptions:{onelineClauses:oA}},LA=bi({all:["ACCESSIBLE","ACCOUNT","ACTION","ADD","ADMIN","AFTER","AGAINST","AGGREGATE","ALL","ALGORITHM","ALTER","ALWAYS","ANALYZE","AND","ANY","AS","ASC","ASCII","ASENSITIVE","AT","ATOMIC","AUTHORS","AUTO_INCREMENT","AUTOEXTEND_SIZE","AUTO","AVG","AVG_ROW_LENGTH","BACKUP","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","BINLOG","BIT","BLOB","BLOCK","BODY","BOOL","BOOLEAN","BOTH","BTREE","BY","BYTE","CACHE","CALL","CASCADE","CASCADED","CASE","CATALOG_NAME","CHAIN","CHANGE","CHANGED","CHAR","CHARACTER","CHARSET","CHECK","CHECKPOINT","CHECKSUM","CIPHER","CLASS_ORIGIN","CLIENT","CLOB","CLOSE","COALESCE","CODE","COLLATE","COLLATION","COLUMN","COLUMN_NAME","COLUMNS","COLUMN_ADD","COLUMN_CHECK","COLUMN_CREATE","COLUMN_DELETE","COLUMN_GET","COMMENT","COMMIT","COMMITTED","COMPACT","COMPLETION","COMPRESSED","CONCURRENT","CONDITION","CONNECTION","CONSISTENT","CONSTRAINT","CONSTRAINT_CATALOG","CONSTRAINT_NAME","CONSTRAINT_SCHEMA","CONTAINS","CONTEXT","CONTINUE","CONTRIBUTORS","CONVERT","CPU","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_POS","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CURSOR_NAME","CYCLE","DATA","DATABASE","DATABASES","DATAFILE","DATE","DATETIME","DAY","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFINER","DELAYED","DELAY_KEY_WRITE","DELETE","DELETE_DOMAIN_ID","DESC","DESCRIBE","DES_KEY_FILE","DETERMINISTIC","DIAGNOSTICS","DIRECTORY","DISABLE","DISCARD","DISK","DISTINCT","DISTINCTROW","DIV","DO","DOUBLE","DO_DOMAIN_IDS","DROP","DUAL","DUMPFILE","DUPLICATE","DYNAMIC","EACH","ELSE","ELSEIF","ELSIF","EMPTY","ENABLE","ENCLOSED","END","ENDS","ENGINE","ENGINES","ENUM","ERROR","ERRORS","ESCAPE","ESCAPED","EVENT","EVENTS","EVERY","EXAMINED","EXCEPT","EXCHANGE","EXCLUDE","EXECUTE","EXCEPTION","EXISTS","EXIT","EXPANSION","EXPIRE","EXPORT","EXPLAIN","EXTENDED","EXTENT_SIZE","FALSE","FAST","FAULTS","FEDERATED","FETCH","FIELDS","FILE","FIRST","FIXED","FLOAT","FLOAT4","FLOAT8","FLUSH","FOLLOWING","FOLLOWS","FOR","FORCE","FOREIGN","FORMAT","FOUND","FROM","FULL","FULLTEXT","FUNCTION","GENERAL","GENERATED","GET_FORMAT","GET","GLOBAL","GOTO","GRANT","GRANTS","GROUP","HANDLER","HARD","HASH","HAVING","HELP","HIGH_PRIORITY","HISTORY","HOST","HOSTS","HOUR","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IF","IGNORE","IGNORED","IGNORE_DOMAIN_IDS","IGNORE_SERVER_IDS","IMMEDIATE","IMPORT","INTERSECT","IN","INCREMENT","INDEX","INDEXES","INFILE","INITIAL_SIZE","INNER","INOUT","INSENSITIVE","INSERT","INSERT_METHOD","INSTALL","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","INTERVAL","INVISIBLE","INTO","IO","IO_THREAD","IPC","IS","ISOLATION","ISOPEN","ISSUER","ITERATE","INVOKER","JOIN","JSON","JSON_TABLE","KEY","KEYS","KEY_BLOCK_SIZE","KILL","LANGUAGE","LAST","LAST_VALUE","LASTVAL","LEADING","LEAVE","LEAVES","LEFT","LESS","LEVEL","LIKE","LIMIT","LINEAR","LINES","LIST","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCK","LOCKED","LOCKS","LOGFILE","LOGS","LONG","LONGBLOB","LONGTEXT","LOOP","LOW_PRIORITY","MASTER","MASTER_CONNECT_RETRY","MASTER_DELAY","MASTER_GTID_POS","MASTER_HOST","MASTER_LOG_FILE","MASTER_LOG_POS","MASTER_PASSWORD","MASTER_PORT","MASTER_SERVER_ID","MASTER_SSL","MASTER_SSL_CA","MASTER_SSL_CAPATH","MASTER_SSL_CERT","MASTER_SSL_CIPHER","MASTER_SSL_CRL","MASTER_SSL_CRLPATH","MASTER_SSL_KEY","MASTER_SSL_VERIFY_SERVER_CERT","MASTER_USER","MASTER_USE_GTID","MASTER_HEARTBEAT_PERIOD","MATCH","MAX_CONNECTIONS_PER_HOUR","MAX_QUERIES_PER_HOUR","MAX_ROWS","MAX_SIZE","MAX_STATEMENT_TIME","MAX_UPDATES_PER_HOUR","MAX_USER_CONNECTIONS","MAXVALUE","MEDIUM","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MEMORY","MERGE","MESSAGE_TEXT","MICROSECOND","MIDDLEINT","MIGRATE","MINUS","MINUTE","MINUTE_MICROSECOND","MINUTE_SECOND","MINVALUE","MIN_ROWS","MOD","MODE","MODIFIES","MODIFY","MONITOR","MONTH","MUTEX","MYSQL","MYSQL_ERRNO","NAME","NAMES","NATIONAL","NATURAL","NCHAR","NESTED","NEVER","NEW","NEXT","NEXTVAL","NO","NOMAXVALUE","NOMINVALUE","NOCACHE","NOCYCLE","NO_WAIT","NOWAIT","NODEGROUP","NONE","NOT","NOTFOUND","NO_WRITE_TO_BINLOG","NULL","NUMBER","NUMERIC","NVARCHAR","OF","OFFSET","OLD_PASSWORD","ON","ONE","ONLINE","ONLY","OPEN","OPTIMIZE","OPTIONS","OPTION","OPTIONALLY","OR","ORDER","ORDINALITY","OTHERS","OUT","OUTER","OUTFILE","OVER","OVERLAPS","OWNER","PACKAGE","PACK_KEYS","PAGE","PAGE_CHECKSUM","PARSER","PARSE_VCOL_EXPR","PATH","PERIOD","PARTIAL","PARTITION","PARTITIONING","PARTITIONS","PASSWORD","PERSISTENT","PHASE","PLUGIN","PLUGINS","PORT","PORTION","PRECEDES","PRECEDING","PRECISION","PREPARE","PRESERVE","PREV","PREVIOUS","PRIMARY","PRIVILEGES","PROCEDURE","PROCESS","PROCESSLIST","PROFILE","PROFILES","PROXY","PURGE","QUARTER","QUERY","QUICK","RAISE","RANGE","RAW","READ","READ_ONLY","READ_WRITE","READS","REAL","REBUILD","RECOVER","RECURSIVE","REDO_BUFFER_SIZE","REDOFILE","REDUNDANT","REFERENCES","REGEXP","RELAY","RELAYLOG","RELAY_LOG_FILE","RELAY_LOG_POS","RELAY_THREAD","RELEASE","RELOAD","REMOVE","RENAME","REORGANIZE","REPAIR","REPEATABLE","REPLACE","REPLAY","REPLICA","REPLICAS","REPLICA_POS","REPLICATION","REPEAT","REQUIRE","RESET","RESIGNAL","RESTART","RESTORE","RESTRICT","RESUME","RETURNED_SQLSTATE","RETURN","RETURNING","RETURNS","REUSE","REVERSE","REVOKE","RIGHT","RLIKE","ROLE","ROLLBACK","ROLLUP","ROUTINE","ROW","ROWCOUNT","ROWNUM","ROWS","ROWTYPE","ROW_COUNT","ROW_FORMAT","RTREE","SAVEPOINT","SCHEDULE","SCHEMA","SCHEMA_NAME","SCHEMAS","SECOND","SECOND_MICROSECOND","SECURITY","SELECT","SENSITIVE","SEPARATOR","SEQUENCE","SERIAL","SERIALIZABLE","SESSION","SERVER","SET","SETVAL","SHARE","SHOW","SHUTDOWN","SIGNAL","SIGNED","SIMPLE","SKIP","SLAVE","SLAVES","SLAVE_POS","SLOW","SNAPSHOT","SMALLINT","SOCKET","SOFT","SOME","SONAME","SOUNDS","SOURCE","STAGE","STORED","SPATIAL","SPECIFIC","REF_SYSTEM_ID","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQL_NO_CACHE","SQL_SMALL_RESULT","SQL_THREAD","SQL_TSI_SECOND","SQL_TSI_MINUTE","SQL_TSI_HOUR","SQL_TSI_DAY","SQL_TSI_WEEK","SQL_TSI_MONTH","SQL_TSI_QUARTER","SQL_TSI_YEAR","SSL","START","STARTING","STARTS","STATEMENT","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STATUS","STOP","STORAGE","STRAIGHT_JOIN","STRING","SUBCLASS_ORIGIN","SUBJECT","SUBPARTITION","SUBPARTITIONS","SUPER","SUSPEND","SWAPS","SWITCHES","SYSDATE","SYSTEM","SYSTEM_TIME","TABLE","TABLE_NAME","TABLES","TABLESPACE","TABLE_CHECKSUM","TEMPORARY","TEMPTABLE","TERMINATED","TEXT","THAN","THEN","TIES","TIME","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TINYBLOB","TINYINT","TINYTEXT","TO","TRAILING","TRANSACTION","TRANSACTIONAL","THREADS","TRIGGER","TRIGGERS","TRUE","TRUNCATE","TYPE","TYPES","UNBOUNDED","UNCOMMITTED","UNDEFINED","UNDO_BUFFER_SIZE","UNDOFILE","UNDO","UNICODE","UNION","UNIQUE","UNKNOWN","UNLOCK","UNINSTALL","UNSIGNED","UNTIL","UPDATE","UPGRADE","USAGE","USE","USER","USER_RESOURCES","USE_FRM","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUE","VALUES","VARBINARY","VARCHAR","VARCHARACTER","VARCHAR2","VARIABLES","VARYING","VIA","VIEW","VIRTUAL","VISIBLE","VERSIONING","WAIT","WARNINGS","WEEK","WEIGHT_STRING","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","X509","XOR","XA","XML","YEAR","YEAR_MONTH","ZEROFILL"]}),_A=bi({all:["ADDDATE","ADD_MONTHS","BIT_AND","BIT_OR","BIT_XOR","CAST","COUNT","CUME_DIST","CURDATE","CURTIME","DATE_ADD","DATE_SUB","DATE_FORMAT","DECODE","DENSE_RANK","EXTRACT","FIRST_VALUE","GROUP_CONCAT","JSON_ARRAYAGG","JSON_OBJECTAGG","LAG","LEAD","MAX","MEDIAN","MID","MIN","NOW","NTH_VALUE","NTILE","POSITION","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","ROW_NUMBER","SESSION_USER","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUBDATE","SUBSTR","SUBSTRING","SUM","SYSTEM_USER","TRIM","TRIM_ORACLE","VARIANCE","VAR_POP","VAR_SAMP","ABS","ACOS","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ASIN","ATAN","ATAN2","BENCHMARK","BIN","BINLOG_GTID_POS","BIT_COUNT","BIT_LENGTH","CEIL","CEILING","CHARACTER_LENGTH","CHAR_LENGTH","CHR","COERCIBILITY","COLUMN_CHECK","COLUMN_EXISTS","COLUMN_LIST","COLUMN_JSON","COMPRESS","CONCAT","CONCAT_OPERATOR_ORACLE","CONCAT_WS","CONNECTION_ID","CONV","CONVERT_TZ","COS","COT","CRC32","DATEDIFF","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEGREES","DECODE_HISTOGRAM","DECODE_ORACLE","DES_DECRYPT","DES_ENCRYPT","ELT","ENCODE","ENCRYPT","EXP","EXPORT_SET","EXTRACTVALUE","FIELD","FIND_IN_SET","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GET_LOCK","GREATEST","HEX","IFNULL","INSTR","ISNULL","IS_FREE_LOCK","IS_USED_LOCK","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_COMPACT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_DETAILED","JSON_EXISTS","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_LOOSE","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_QUERY","JSON_QUOTE","JSON_OBJECT","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_SEARCH","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAST_DAY","LAST_INSERT_ID","LCASE","LEAST","LENGTH","LENGTHB","LN","LOAD_FILE","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LPAD_ORACLE","LTRIM","LTRIM_ORACLE","MAKEDATE","MAKETIME","MAKE_SET","MASTER_GTID_WAIT","MASTER_POS_WAIT","MD5","MONTHNAME","NAME_CONST","NVL","NVL2","OCT","OCTET_LENGTH","ORD","PERIOD_ADD","PERIOD_DIFF","PI","POW","POWER","QUOTE","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","RADIANS","RAND","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPLACE_ORACLE","REVERSE","ROUND","RPAD","RPAD_ORACLE","RTRIM","RTRIM_ORACLE","SEC_TO_TIME","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SPACE","SQRT","STRCMP","STR_TO_DATE","SUBSTR_ORACLE","SUBSTRING_INDEX","SUBTIME","SYS_GUID","TAN","TIMEDIFF","TIME_FORMAT","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_SECONDS","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UUID","UUID_SHORT","VERSION","WEEKDAY","WEEKOFYEAR","WSREP_LAST_WRITTEN_GTID","WSREP_LAST_SEEN_GTID","WSREP_SYNC_WAIT_UPTO_GTID","YEARWEEK","COALESCE","NULLIF","TINYINT","SMALLINT","MEDIUMINT","INT","INTEGER","BIGINT","DECIMAL","DEC","NUMERIC","FIXED","FLOAT","DOUBLE","DOUBLE PRECISION","REAL","BIT","BINARY","BLOB","CHAR","NATIONAL CHAR","CHAR BYTE","ENUM","VARBINARY","VARCHAR","NATIONAL VARCHAR","TIME","DATETIME","TIMESTAMP","YEAR"]}),CA=Ui(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),lA=Ui(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","SET","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]","RETURNING"]),cA=Ui(["UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]","ADD [COLUMN] [IF NOT EXISTS]","{CHANGE | MODIFY} [COLUMN] [IF EXISTS]","DROP [COLUMN] [IF EXISTS]","RENAME [TO]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","SET {VISIBLE | INVISIBLE}","TRUNCATE [TABLE]","ALTER DATABASE","ALTER DATABASE COMMENT","ALTER EVENT","ALTER FUNCTION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SCHEMA COMMENT","ALTER SEQUENCE","ALTER SERVER","ALTER USER","ALTER VIEW","ANALYZE","ANALYZE TABLE","BACKUP LOCK","BACKUP STAGE","BACKUP UNLOCK","BEGIN","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHECK TABLE","CHECK VIEW","CHECKSUM TABLE","COMMIT","CREATE AGGREGATE FUNCTION","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE INDEX","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE SERVER","CREATE SPATIAL INDEX","CREATE TRIGGER","CREATE UNIQUE INDEX","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DO","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP INDEX","DROP PREPARE","DROP PROCEDURE","DROP ROLE","DROP SEQUENCE","DROP SERVER","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GET DIAGNOSTICS","GET DIAGNOSTICS CONDITION","GRANT","HANDLER","HELP","INSTALL PLUGIN","INSTALL SONAME","KILL","LOAD DATA INFILE","LOAD INDEX INTO CACHE","LOAD XML INFILE","LOCK TABLE","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","PURGE MASTER LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","REPAIR VIEW","RESET MASTER","RESET QUERY CACHE","RESET REPLICA","RESET SLAVE","RESIGNAL","REVOKE","ROLLBACK","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET GLOBAL TRANSACTION","SET NAMES","SET PASSWORD","SET ROLE","SET STATEMENT","SET TRANSACTION","SHOW","SHOW ALL REPLICAS STATUS","SHOW ALL SLAVES STATUS","SHOW AUTHORS","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW BINLOG STATUS","SHOW CHARACTER SET","SHOW CLIENT_STATISTICS","SHOW COLLATION","SHOW COLUMNS","SHOW CONTRIBUTORS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PACKAGE","SHOW CREATE PACKAGE BODY","SHOW CREATE PROCEDURE","SHOW CREATE SEQUENCE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINE INNODB STATUS","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW EXPLAIN","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW INDEXES","SHOW INDEX_STATISTICS","SHOW KEYS","SHOW LOCALES","SHOW MASTER LOGS","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PACKAGE BODY CODE","SHOW PACKAGE BODY STATUS","SHOW PACKAGE STATUS","SHOW PLUGINS","SHOW PLUGINS SONAME","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW QUERY_RESPONSE_TIME","SHOW RELAYLOG EVENTS","SHOW REPLICA","SHOW REPLICA HOSTS","SHOW REPLICA STATUS","SHOW SCHEMAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW SLAVE STATUS","SHOW STATUS","SHOW STORAGE ENGINES","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW USER_STATISTICS","SHOW VARIABLES","SHOW WARNINGS","SHOW WSREP_MEMBERSHIP","SHOW WSREP_STATUS","SHUTDOWN","SIGNAL","START ALL REPLICAS","START ALL SLAVES","START REPLICA","START SLAVE","START TRANSACTION","STOP ALL REPLICAS","STOP ALL SLAVES","STOP REPLICA","STOP SLAVE","UNINSTALL PLUGIN","UNINSTALL SONAME","UNLOCK TABLE","USE","XA BEGIN","XA COMMIT","XA END","XA PREPARE","XA RECOVER","XA ROLLBACK","XA START"]),uA=Ui(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]","MINUS [ALL | DISTINCT]"]),pA=Ui(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),DA=Ui(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","CHARACTER SET","{ROWS | RANGE} BETWEEN"]),PA={tokenizerOptions:{reservedSelect:CA,reservedClauses:[...lA,...cA],reservedSetOperations:uA,reservedJoins:pA,reservedPhrases:DA,supportsXor:!0,reservedKeywords:LA,reservedFunctionNames:_A,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","&&","||","!"],postProcess:function(e){return e.map(((E,t)=>{const T=e[t+1]||Pi;return fi.SET(E)&&"("===T.text?{...E,type:pi.RESERVED_FUNCTION_NAME}:E}))}},formatOptions:{onelineClauses:cA}};const dA=bi({all:["ACCESSIBLE","ACCOUNT","ACTION","ACTIVE","ADD","ADMIN","AFTER","AGAINST","AGGREGATE","ALGORITHM","ALL","ALTER","ALWAYS","ANALYZE","AND","ANY","ARRAY","AS","ASC","ASCII","ASENSITIVE","AT","ATTRIBUTE","AUTHENTICATION","AUTOEXTEND_SIZE","AUTO_INCREMENT","AVG","AVG_ROW_LENGTH","BACKUP","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","BINLOG","BIT","BLOB","BLOCK","BOOL","BOOLEAN","BOTH","BTREE","BUCKETS","BY","BYTE","CACHE","CALL","CASCADE","CASCADED","CASE","CATALOG_NAME","CHAIN","CHALLENGE_RESPONSE","CHANGE","CHANGED","CHANNEL","CHAR","CHARACTER","CHARSET","CHECK","CHECKSUM","CIPHER","CLASS_ORIGIN","CLIENT","CLONE","CLOSE","COALESCE","CODE","COLLATE","COLLATION","COLUMN","COLUMNS","COLUMN_FORMAT","COLUMN_NAME","COMMENT","COMMIT","COMMITTED","COMPACT","COMPLETION","COMPONENT","COMPRESSED","COMPRESSION","CONCURRENT","CONDITION","CONNECTION","CONSISTENT","CONSTRAINT","CONSTRAINT_CATALOG","CONSTRAINT_NAME","CONSTRAINT_SCHEMA","CONTAINS","CONTEXT","CONTINUE","CONVERT","CPU","CREATE","CROSS","CUBE","CUME_DIST","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CURSOR_NAME","DATA","DATABASE","DATABASES","DATAFILE","DATE","DATETIME","DAY","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFAULT_AUTH","DEFINER","DEFINITION","DELAYED","DELAY_KEY_WRITE","DELETE","DENSE_RANK","DESC","DESCRIBE","DESCRIPTION","DETERMINISTIC","DIAGNOSTICS","DIRECTORY","DISABLE","DISCARD","DISK","DISTINCT","DISTINCTROW","DIV","DO","DOUBLE","DROP","DUAL","DUMPFILE","DUPLICATE","DYNAMIC","EACH","ELSE","ELSEIF","EMPTY","ENABLE","ENCLOSED","ENCRYPTION","END","ENDS","ENFORCED","ENGINE","ENGINES","ENGINE_ATTRIBUTE","ENUM","ERROR","ERRORS","ESCAPE","ESCAPED","EVENT","EVENTS","EVERY","EXCEPT","EXCHANGE","EXCLUDE","EXECUTE","EXISTS","EXIT","EXPANSION","EXPIRE","EXPLAIN","EXPORT","EXTENDED","EXTENT_SIZE","FACTOR","FAILED_LOGIN_ATTEMPTS","FALSE","FAST","FAULTS","FETCH","FIELDS","FILE","FILE_BLOCK_SIZE","FILTER","FINISH","FIRST","FIRST_VALUE","FIXED","FLOAT","FLOAT4","FLOAT8","FLUSH","FOLLOWING","FOLLOWS","FOR","FORCE","FOREIGN","FORMAT","FOUND","FROM","FULL","FULLTEXT","FUNCTION","GENERAL","GENERATED","GEOMCOLLECTION","GEOMETRY","GEOMETRYCOLLECTION","GET","GET_FORMAT","GET_MASTER_PUBLIC_KEY","GET_SOURCE_PUBLIC_KEY","GLOBAL","GRANT","GRANTS","GROUP","GROUPING","GROUPS","GROUP_REPLICATION","GTID_ONLY","HANDLER","HASH","HAVING","HELP","HIGH_PRIORITY","HISTOGRAM","HISTORY","HOST","HOSTS","HOUR","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IF","IGNORE","IGNORE_SERVER_IDS","IMPORT","IN","INACTIVE","INDEX","INDEXES","INFILE","INITIAL","INITIAL_SIZE","INITIATE","INNER","INOUT","INSENSITIVE","INSERT","INSERT_METHOD","INSTALL","INSTANCE","IN","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","INTERSECT","INTERVAL","INTO","INVISIBLE","INVOKER","IO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IO_THREAD","IPC","IS","ISOLATION","ISSUER","ITERATE","JOIN","JSON","JSON_TABLE","JSON_VALUE","KEY","KEYRING","KEYS","KEY_BLOCK_SIZE","KILL","LAG","LANGUAGE","LAST","LAST_VALUE","LATERAL","LEAD","LEADING","LEAVE","LEAVES","LEFT","LESS","LEVEL","LIKE","LIMIT","LINEAR","LINES","LINESTRING","LIST","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCK","LOCKED","LOCKS","LOGFILE","LOGS","LONG","LONGBLOB","LONGTEXT","LOOP","LOW_PRIORITY","MASTER","MASTER_AUTO_POSITION","MASTER_BIND","MASTER_COMPRESSION_ALGORITHMS","MASTER_CONNECT_RETRY","MASTER_DELAY","MASTER_HEARTBEAT_PERIOD","MASTER_HOST","MASTER_LOG_FILE","MASTER_LOG_POS","MASTER_PASSWORD","MASTER_PORT","MASTER_PUBLIC_KEY_PATH","MASTER_RETRY_COUNT","MASTER_SSL","MASTER_SSL_CA","MASTER_SSL_CAPATH","MASTER_SSL_CERT","MASTER_SSL_CIPHER","MASTER_SSL_CRL","MASTER_SSL_CRLPATH","MASTER_SSL_KEY","MASTER_SSL_VERIFY_SERVER_CERT","MASTER_TLS_CIPHERSUITES","MASTER_TLS_VERSION","MASTER_USER","MASTER_ZSTD_COMPRESSION_LEVEL","MATCH","MAXVALUE","MAX_CONNECTIONS_PER_HOUR","MAX_QUERIES_PER_HOUR","MAX_ROWS","MAX_SIZE","MAX_UPDATES_PER_HOUR","MAX_USER_CONNECTIONS","MEDIUM","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MEMBER","MEMORY","MERGE","MESSAGE_TEXT","MICROSECOND","MIDDLEINT","MIGRATE","MINUTE","MINUTE_MICROSECOND","MINUTE_SECOND","MIN_ROWS","MOD","MODE","MODIFIES","MODIFY","MONTH","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","MUTEX","MYSQL_ERRNO","NAME","NAMES","NATIONAL","NATURAL","NCHAR","NDB","NDBCLUSTER","NESTED","NETWORK_NAMESPACE","NEVER","NEW","NEXT","NO","NODEGROUP","NONE","NOT","NOWAIT","NO_WAIT","NO_WRITE_TO_BINLOG","NTH_VALUE","NTILE","NULL","NULLS","NUMBER","NUMERIC","NVARCHAR","OF","OFF","OFFSET","OJ","OLD","ON","ONE","ONLY","OPEN","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONAL","OPTIONALLY","OPTIONS","OR","ORDER","ORDINALITY","ORGANIZATION","OTHERS","OUT","OUTER","OUTFILE","OVER","OWNER","PACK_KEYS","PAGE","PARSER","PARTIAL","PARTITION","PARTITIONING","PARTITIONS","PASSWORD","PASSWORD_LOCK_TIME","PATH","PERCENT_RANK","PERSIST","PERSIST_ONLY","PHASE","PLUGIN","PLUGINS","PLUGIN_DIR","POINT","POLYGON","PORT","PRECEDES","PRECEDING","PRECISION","PREPARE","PRESERVE","PREV","PRIMARY","PRIVILEGES","PRIVILEGE_CHECKS_USER","PROCEDURE","PROCESS","PROCESSLIST","PROFILE","PROFILES","PROXY","PURGE","QUARTER","QUERY","QUICK","RANDOM","RANGE","RANK","READ","READS","READ_ONLY","READ_WRITE","REAL","REBUILD","RECOVER","RECURSIVE","REDO_BUFFER_SIZE","REDUNDANT","REFERENCE","REFERENCES","REGEXP","REGISTRATION","RELAY","RELAYLOG","RELAY_LOG_FILE","RELAY_LOG_POS","RELAY_THREAD","RELEASE","RELOAD","REMOVE","RENAME","REORGANIZE","REPAIR","REPEAT","REPEATABLE","REPLACE","REPLICA","REPLICAS","REPLICATE_DO_DB","REPLICATE_DO_TABLE","REPLICATE_IGNORE_DB","REPLICATE_IGNORE_TABLE","REPLICATE_REWRITE_DB","REPLICATE_WILD_DO_TABLE","REPLICATE_WILD_IGNORE_TABLE","REPLICATION","REQUIRE","REQUIRE_ROW_FORMAT","RESET","RESIGNAL","RESOURCE","RESPECT","RESTART","RESTORE","RESTRICT","RESUME","RETAIN","RETURN","RETURNED_SQLSTATE","RETURNING","RETURNS","REUSE","REVERSE","REVOKE","RIGHT","RLIKE","ROLE","ROLLBACK","ROLLUP","ROTATE","ROUTINE","ROW","ROWS","ROW_COUNT","ROW_FORMAT","ROW_NUMBER","RTREE","SAVEPOINT","SCHEDULE","SCHEMA","SCHEMAS","SCHEMA_NAME","SECOND","SECONDARY","SECONDARY_ENGINE","SECONDARY_ENGINE_ATTRIBUTE","SECONDARY_LOAD","SECONDARY_UNLOAD","SECOND_MICROSECOND","SECURITY","SELECT","SENSITIVE","SEPARATOR","SERIAL","SERIALIZABLE","SERVER","SESSION","SET","SHARE","SHOW","SHUTDOWN","SIGNAL","SIGNED","SIMPLE","SKIP","SLAVE","SLOW","SMALLINT","SNAPSHOT","SOCKET","SOME","SONAME","SOUNDS","SOURCE","SOURCE_AUTO_POSITION","SOURCE_BIND","SOURCE_COMPRESSION_ALGORITHMS","SOURCE_CONNECT_RETRY","SOURCE_DELAY","SOURCE_HEARTBEAT_PERIOD","SOURCE_HOST","SOURCE_LOG_FILE","SOURCE_LOG_POS","SOURCE_PASSWORD","SOURCE_PORT","SOURCE_PUBLIC_KEY_PATH","SOURCE_RETRY_COUNT","SOURCE_SSL","SOURCE_SSL_CA","SOURCE_SSL_CAPATH","SOURCE_SSL_CERT","SOURCE_SSL_CIPHER","SOURCE_SSL_CRL","SOURCE_SSL_CRLPATH","SOURCE_SSL_KEY","SOURCE_SSL_VERIFY_SERVER_CERT","SOURCE_TLS_CIPHERSUITES","SOURCE_TLS_VERSION","SOURCE_USER","SOURCE_ZSTD_COMPRESSION_LEVEL","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_AFTER_GTIDS","SQL_AFTER_MTS_GAPS","SQL_BEFORE_GTIDS","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CALC_FOUND_ROWS","SQL_NO_CACHE","SQL_SMALL_RESULT","SQL_THREAD","SQL_TSI_DAY","SQL_TSI_HOUR","SQL_TSI_MINUTE","SQL_TSI_MONTH","SQL_TSI_QUARTER","SQL_TSI_SECOND","SQL_TSI_WEEK","SQL_TSI_YEAR","SRID","SSL","STACKED","START","STARTING","STARTS","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STATUS","STOP","STORAGE","STORED","STRAIGHT_JOIN","STREAM","STRING","SUBCLASS_ORIGIN","SUBJECT","SUBPARTITION","SUBPARTITIONS","SUPER","SUSPEND","SWAPS","SWITCHES","SYSTEM","TABLE","TABLES","TABLESPACE","TABLE_CHECKSUM","TABLE_NAME","TEMPORARY","TEMPTABLE","TERMINATED","TEXT","THAN","THEN","THREAD_PRIORITY","TIES","TIME","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TINYBLOB","TINYINT","TINYTEXT","TLS","TO","TRAILING","TRANSACTION","TRIGGER","TRIGGERS","TRUE","TRUNCATE","TYPE","TYPES","UNBOUNDED","UNCOMMITTED","UNDEFINED","UNDO","UNDOFILE","UNDO_BUFFER_SIZE","UNICODE","UNINSTALL","UNION","UNIQUE","UNKNOWN","UNLOCK","UNREGISTER","UNSIGNED","UNTIL","UPDATE","UPGRADE","USAGE","USE","USER","USER_RESOURCES","USE_FRM","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALIDATION","VALUE","VALUES","VARBINARY","VARCHAR","VARCHARACTER","VARIABLES","VARYING","VCPU","VIEW","VIRTUAL","VISIBLE","WAIT","WARNINGS","WEEK","WEIGHT_STRING","WHEN","WHERE","WHILE","WINDOW","WITH","WITHOUT","WORK","WRAPPER","WRITE","X509","XA","XID","XML","XOR","YEAR","YEAR_MONTH","ZEROFILL","ZONE"]}),fA=bi({all:["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BINARY","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","CAN_ACCESS_COLUMN","CAN_ACCESS_DATABASE","CAN_ACCESS_TABLE","CAN_ACCESS_USER","CAN_ACCESS_VIEW","CAST","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEFAULT","DEGREES","DENSE_RANK","DIV","ELT","EXP","EXPORT_SET","EXTRACT","EXTRACTVALUE","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_PICO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOMCOLLECTION","GEOMETRYCOLLECTION","GET_DD_COLUMN_PRIVILEGES","GET_DD_CREATE_OPTIONS","GET_DD_INDEX_SUB_PART_LENGTH","GET_FORMAT","GET_LOCK","GREATEST","GROUP_CONCAT","GROUPING","GTID_SUBSET","GTID_SUBTRACT","HEX","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INSERT","INSTR","INTERNAL_AUTO_INCREMENT","INTERNAL_AVG_ROW_LENGTH","INTERNAL_CHECK_TIME","INTERNAL_CHECKSUM","INTERNAL_DATA_FREE","INTERNAL_DATA_LENGTH","INTERNAL_DD_CHAR_LENGTH","INTERNAL_GET_COMMENT_OR_ERROR","INTERNAL_GET_ENABLED_ROLE_JSON","INTERNAL_GET_HOSTNAME","INTERNAL_GET_USERNAME","INTERNAL_GET_VIEW_WARNING_OR_ERROR","INTERNAL_INDEX_COLUMN_CARDINALITY","INTERNAL_INDEX_LENGTH","INTERNAL_IS_ENABLED_ROLE","INTERNAL_IS_MANDATORY_ROLE","INTERNAL_KEYS_DISABLED","INTERNAL_MAX_DATA_LENGTH","INTERNAL_TABLE_ROWS","INTERNAL_UPDATE_TIME","INTERVAL","IS","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS NOT","IS NOT NULL","IS NULL","IS_USED_LOCK","IS_UUID","ISNULL","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_ARRAYAGG","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SCHEMA_VALID","JSON_SCHEMA_VALIDATION_REPORT","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TABLE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LINESTRING","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MATCH","MAX","MBRCONTAINS","MBRCOVEREDBY","MBRCOVERS","MBRDISJOINT","MBREQUALS","MBRINTERSECTS","MBROVERLAPS","MBRTOUCHES","MBRWITHIN","MD5","MEMBER OF","MICROSECOND","MID","MIN","MINUTE","MOD","MONTH","MONTHNAME","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","NAME_CONST","NOT","NOT IN","NOT LIKE","NOT REGEXP","NOW","NTH_VALUE","NTILE","NULLIF","OCT","OCTET_LENGTH","ORD","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","POINT","POLYGON","POSITION","POW","POWER","PS_CURRENT_THREAD_ID","PS_THREAD_ID","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROLES_GRAPHML","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_BUFFER","ST_BUFFER_STRATEGY","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_CONVEXHULL","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DISTANCE_SPHERE","ST_ENDPOINT","ST_ENVELOPE","ST_EQUALS","ST_EXTERIORRING","ST_FRECHETDISTANCE","ST_GEOHASH","ST_GEOMCOLLFROMTEXT","ST_GEOMCOLLFROMWKB","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMGEOJSON","ST_GEOMFROMTEXT","ST_GEOMFROMWKB","ST_HAUSDORFFDISTANCE","ST_INTERIORRINGN","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISSIMPLE","ST_ISVALID","ST_LATFROMGEOHASH","ST_LATITUDE","ST_LENGTH","ST_LINEFROMTEXT","ST_LINEFROMWKB","ST_LINEINTERPOLATEPOINT","ST_LINEINTERPOLATEPOINTS","ST_LONGFROMGEOHASH","ST_LONGITUDE","ST_MAKEENVELOPE","ST_MLINEFROMTEXT","ST_MLINEFROMWKB","ST_MPOINTFROMTEXT","ST_MPOINTFROMWKB","ST_MPOLYFROMTEXT","ST_MPOLYFROMWKB","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINTATDISTANCE","ST_POINTFROMGEOHASH","ST_POINTFROMTEXT","ST_POINTFROMWKB","ST_POINTN","ST_POLYFROMTEXT","ST_POLYFROMWKB","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SWAPXY","ST_SYMDIFFERENCE","ST_TOUCHES","ST_TRANSFORM","ST_UNION","ST_VALIDATE","ST_WITHIN","ST_X","ST_Y","STATEMENT_DIGEST","STATEMENT_DIGEST_TEXT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRIM","TRUNCATE","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","USER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VALUES","VAR_POP","VAR_SAMP","VARIANCE","VERSION","WAIT_FOR_EXECUTED_GTID_SET","WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK","BIT","TINYINT","SMALLINT","MEDIUMINT","INT","INTEGER","BIGINT","DECIMAL","DEC","NUMERIC","FIXED","FLOAT","DOUBLE","DOUBLE PRECISION","REAL","DATETIME","TIMESTAMP","TIME","YEAR","CHAR","NATIONAL CHAR","VARCHAR","NATIONAL VARCHAR","BINARY","VARBINARY","BLOB","TEXT","ENUM"]}),MA=Ui(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),UA=Ui(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","SET","CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","CREATE [TEMPORARY] TABLE [IF NOT EXISTS]"]),hA=Ui(["UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER EVENT","ALTER FUNCTION","ALTER INSTANCE","ALTER LOGFILE GROUP","ALTER PROCEDURE","ALTER RESOURCE GROUP","ALTER SERVER","ALTER TABLESPACE","ALTER USER","ALTER VIEW","ANALYZE TABLE","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK TABLE","CHECKSUM TABLE","CLONE","COMMIT","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE FUNCTION","CREATE INDEX","CREATE LOGFILE GROUP","CREATE PROCEDURE","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SERVER","CREATE SPATIAL REFERENCE SYSTEM","CREATE TABLESPACE","CREATE TRIGGER","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DO","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP FUNCTION","DROP INDEX","DROP LOGFILE GROUP","DROP PROCEDURE","DROP RESOURCE GROUP","DROP ROLE","DROP SERVER","DROP SPATIAL REFERENCE SYSTEM","DROP TABLESPACE","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GRANT","HANDLER","HELP","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SOURCE_POS_WAIT","START GROUP_REPLICATION","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP REPLICA","STOP SLAVE","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),vA=Ui(["UNION [ALL | DISTINCT]"]),mA=Ui(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),GA=Ui(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN"]),yA={tokenizerOptions:{reservedSelect:MA,reservedClauses:[...UA,...hA],reservedSetOperations:vA,reservedJoins:mA,reservedPhrases:GA,supportsXor:!0,reservedKeywords:dA,reservedFunctionNames:fA,stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!"],postProcess:function(e){return e.map(((E,t)=>{const T=e[t+1]||Pi;return fi.SET(E)&&"("===T.text?{...E,type:pi.RESERVED_FUNCTION_NAME}:E}))}},formatOptions:{onelineClauses:hA}};const HA=bi({all:["ABORT","ABS","ACOS","ADVISOR","ARRAY_AGG","ARRAY_AGG","ARRAY_APPEND","ARRAY_AVG","ARRAY_BINARY_SEARCH","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COUNT","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_FLATTEN","ARRAY_IFNULL","ARRAY_INSERT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_MAX","ARRAY_MIN","ARRAY_MOVE","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUT","ARRAY_RANGE","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_REPLACE","ARRAY_REVERSE","ARRAY_SORT","ARRAY_STAR","ARRAY_SUM","ARRAY_SYMDIFF","ARRAY_SYMDIFF1","ARRAY_SYMDIFFN","ARRAY_UNION","ASIN","ATAN","ATAN2","AVG","BASE64","BASE64_DECODE","BASE64_ENCODE","BITAND ","BITCLEAR ","BITNOT ","BITOR ","BITSET ","BITSHIFT ","BITTEST ","BITXOR ","CEIL","CLOCK_LOCAL","CLOCK_MILLIS","CLOCK_STR","CLOCK_TZ","CLOCK_UTC","COALESCE","CONCAT","CONCAT2","CONTAINS","CONTAINS_TOKEN","CONTAINS_TOKEN_LIKE","CONTAINS_TOKEN_REGEXP","COS","COUNT","COUNT","COUNTN","CUME_DIST","CURL","DATE_ADD_MILLIS","DATE_ADD_STR","DATE_DIFF_MILLIS","DATE_DIFF_STR","DATE_FORMAT_STR","DATE_PART_MILLIS","DATE_PART_STR","DATE_RANGE_MILLIS","DATE_RANGE_STR","DATE_TRUNC_MILLIS","DATE_TRUNC_STR","DECODE","DECODE_JSON","DEGREES","DENSE_RANK","DURATION_TO_STR","ENCODED_SIZE","ENCODE_JSON","EXP","FIRST_VALUE","FLOOR","GREATEST","HAS_TOKEN","IFINF","IFMISSING","IFMISSINGORNULL","IFNAN","IFNANORINF","IFNULL","INITCAP","ISARRAY","ISATOM","ISBITSET","ISBOOLEAN","ISNUMBER","ISOBJECT","ISSTRING","LAG","LAST_VALUE","LEAD","LEAST","LENGTH","LN","LOG","LOWER","LTRIM","MAX","MEAN","MEDIAN","META","MILLIS","MILLIS_TO_LOCAL","MILLIS_TO_STR","MILLIS_TO_TZ","MILLIS_TO_UTC","MILLIS_TO_ZONE_NAME","MIN","MISSINGIF","NANIF","NEGINFIF","NOW_LOCAL","NOW_MILLIS","NOW_STR","NOW_TZ","NOW_UTC","NTH_VALUE","NTILE","NULLIF","NVL","NVL2","OBJECT_ADD","OBJECT_CONCAT","OBJECT_INNER_PAIRS","OBJECT_INNER_VALUES","OBJECT_LENGTH","OBJECT_NAMES","OBJECT_PAIRS","OBJECT_PUT","OBJECT_REMOVE","OBJECT_RENAME","OBJECT_REPLACE","OBJECT_UNWRAP","OBJECT_VALUES","PAIRS","PERCENT_RANK","PI","POLY_LENGTH","POSINFIF","POSITION","POWER","RADIANS","RANDOM","RANK","RATIO_TO_REPORT","REGEXP_CONTAINS","REGEXP_LIKE","REGEXP_MATCHES","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGEX_CONTAINS","REGEX_LIKE","REGEX_MATCHES","REGEX_POSITION","REGEX_REPLACE","REGEX_SPLIT","REPEAT","REPLACE","REVERSE","ROUND","ROW_NUMBER","RTRIM","SEARCH","SEARCH_META","SEARCH_SCORE","SIGN","SIN","SPLIT","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DURATION","STR_TO_MILLIS","STR_TO_TZ","STR_TO_UTC","STR_TO_ZONE_NAME","SUBSTR","SUFFIXES","SUM","TAN","TITLE","TOARRAY","TOATOM","TOBOOLEAN","TOKENS","TOKENS","TONUMBER","TOOBJECT","TOSTRING","TRIM","TRUNC","UPPER","UUID","VARIANCE","VARIANCE_POP","VARIANCE_SAMP","VAR_POP","VAR_SAMP","WEEKDAY_MILLIS","WEEKDAY_STR","CAST"]}),gA=bi({all:["ADVISE","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","BEGIN","BETWEEN","BINARY","BOOLEAN","BREAK","BUCKET","BUILD","BY","CALL","CASE","CAST","CLUSTER","COLLATE","COLLECTION","COMMIT","COMMITTED","CONNECT","CONTINUE","CORRELATED","COVER","CREATE","CURRENT","DATABASE","DATASET","DATASTORE","DECLARE","DECREMENT","DELETE","DERIVED","DESC","DESCRIBE","DISTINCT","DO","DROP","EACH","ELEMENT","ELSE","END","EVERY","EXCEPT","EXCLUDE","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FILTER","FIRST","FLATTEN","FLUSH","FOLLOWING","FOR","FORCE","FROM","FTS","FUNCTION","GOLANG","GRANT","GROUP","GROUPS","GSI","HASH","HAVING","IF","ISOLATION","IGNORE","ILIKE","IN","INCLUDE","INCREMENT","INDEX","INFER","INLINE","INNER","INSERT","INTERSECT","INTO","IS","JAVASCRIPT","JOIN","KEY","KEYS","KEYSPACE","KNOWN","LANGUAGE","LAST","LEFT","LET","LETTING","LEVEL","LIKE","LIMIT","LSM","MAP","MAPPING","MATCHED","MATERIALIZED","MERGE","MINUS","MISSING","NAMESPACE","NEST","NL","NO","NOT","NTH_VALUE","NULL","NULLS","NUMBER","OBJECT","OFFSET","ON","OPTION","OPTIONS","OR","ORDER","OTHERS","OUTER","OVER","PARSE","PARTITION","PASSWORD","PATH","POOL","PRECEDING","PREPARE","PRIMARY","PRIVATE","PRIVILEGE","PROBE","PROCEDURE","PUBLIC","RANGE","RAW","REALM","REDUCE","RENAME","RESPECT","RETURN","RETURNING","REVOKE","RIGHT","ROLE","ROLLBACK","ROW","ROWS","SATISFIES","SAVEPOINT","SCHEMA","SCOPE","SELECT","SELF","SEMI","SET","SHOW","SOME","START","STATISTICS","STRING","SYSTEM","THEN","TIES","TO","TRAN","TRANSACTION","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNDER","UNION","UNIQUE","UNKNOWN","UNNEST","UNSET","UPDATE","UPSERT","USE","USER","USING","VALIDATE","VALUE","VALUED","VALUES","VIA","VIEW","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WORK","XOR"]}),BA=Ui(["SELECT [ALL | DISTINCT]"]),FA=Ui(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED THEN","UPDATE SET","INSERT","NEST","UNNEST","RETURNING"]),YA=Ui(["UPDATE","DELETE FROM","SET SCHEMA","ADVISE","ALTER INDEX","BEGIN TRANSACTION","BUILD INDEX","COMMIT TRANSACTION","CREATE COLLECTION","CREATE FUNCTION","CREATE INDEX","CREATE PRIMARY INDEX","CREATE SCOPE","DROP COLLECTION","DROP FUNCTION","DROP INDEX","DROP PRIMARY INDEX","DROP SCOPE","EXECUTE","EXECUTE FUNCTION","EXPLAIN","GRANT","INFER","PREPARE","REVOKE","ROLLBACK TRANSACTION","SAVEPOINT","SET TRANSACTION","UPDATE STATISTICS","UPSERT","LET","SET CURRENT SCHEMA","SHOW","USE [PRIMARY] KEYS"]),bA=Ui(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),VA=Ui(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","INNER JOIN"]),WA=Ui(["{ROWS | RANGE | GROUPS} BETWEEN"]),xA={tokenizerOptions:{reservedSelect:BA,reservedClauses:[...FA,...YA],reservedSetOperations:bA,reservedJoins:VA,reservedPhrases:WA,supportsXor:!0,reservedKeywords:gA,reservedFunctionNames:HA,stringTypes:['""-bs',"''-bs"],identTypes:["``"],extraParens:["[]","{}"],paramTypes:{positional:!0,numbered:["$"],named:["$"]},lineCommentTypes:["#","--"],operators:["%","==",":","||"]},formatOptions:{onelineClauses:YA}},QA=bi({all:["ADD","AGENT","AGGREGATE","ALL","ALTER","AND","ANY","ARRAY","ARROW","AS","ASC","AT","ATTRIBUTE","AUTHID","AVG","BEGIN","BETWEEN","BFILE_BASE","BINARY","BLOB_BASE","BLOCK","BODY","BOTH","BOUND","BULK","BY","BYTE","CALL","CALLING","CASCADE","CASE","CHAR","CHAR_BASE","CHARACTER","CHARSET","CHARSETFORM","CHARSETID","CHECK","CLOB_BASE","CLOSE","CLUSTER","CLUSTERS","COLAUTH","COLLECT","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPILED","COMPRESS","CONNECT","CONSTANT","CONSTRUCTOR","CONTEXT","CONVERT","COUNT","CRASH","CREATE","CURRENT","CURSOR","CUSTOMDATUM","DANGLING","DATA","DATE","DATE_BASE","DAY","DECIMAL","DECLARE","DEFAULT","DEFINE","DELETE","DESC","DETERMINISTIC","DISTINCT","DOUBLE","DROP","DURATION","ELEMENT","ELSE","ELSIF","EMPTY","END","ESCAPE","EXCEPT","EXCEPTION","EXCEPTIONS","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FINAL","FIXED","FLOAT","FOR","FORALL","FORCE","FORM","FROM","FUNCTION","GENERAL","GOTO","GRANT","GROUP","HASH","HAVING","HEAP","HIDDEN","HOUR","IDENTIFIED","IF","IMMEDIATE","IN","INCLUDING","INDEX","INDEXES","INDICATOR","INDICES","INFINITE","INSERT","INSTANTIABLE","INT","INTERFACE","INTERSECT","INTERVAL","INTO","INVALIDATE","IS","ISOLATION","JAVA","LANGUAGE","LARGE","LEADING","LENGTH","LEVEL","LIBRARY","LIKE","LIKE2","LIKE4","LIKEC","LIMIT","LIMITED","LOCAL","LOCK","LONG","LOOP","MAP","MAX","MAXLEN","MEMBER","MERGE","MIN","MINUS","MINUTE","MOD","MODE","MODIFY","MONTH","MULTISET","NAME","NAN","NATIONAL","NATIVE","NCHAR","NEW","NOCOMPRESS","NOCOPY","NOT","NOWAIT","NULL","NUMBER_BASE","OBJECT","OCICOLL","OCIDATE","OCIDATETIME","OCIDURATION","OCIINTERVAL","OCILOBLOCATOR","OCINUMBER","OCIRAW","OCIREF","OCIREFCURSOR","OCIROWID","OCISTRING","OCITYPE","OF","ON","ONLY","OPAQUE","OPEN","OPERATOR","OPTION","OR","ORACLE","ORADATA","ORDER","OVERLAPS","ORGANIZATION","ORLANY","ORLVARY","OTHERS","OUT","OVERRIDING","PACKAGE","PARALLEL_ENABLE","PARAMETER","PARAMETERS","PARTITION","PASCAL","PIPE","PIPELINED","PRAGMA","PRECISION","PRIOR","PRIVATE","PROCEDURE","PUBLIC","RAISE","RANGE","RAW","READ","RECORD","REF","REFERENCE","REM","REMAINDER","RENAME","RESOURCE","RESULT","RETURN","RETURNING","REVERSE","REVOKE","ROLLBACK","ROW","SAMPLE","SAVE","SAVEPOINT","SB1","SB2","SB4","SECOND","SEGMENT","SELECT","SELF","SEPARATE","SEQUENCE","SERIALIZABLE","SET","SHARE","SHORT","SIZE","SIZE_T","SOME","SPARSE","SQL","SQLCODE","SQLDATA","SQLNAME","SQLSTATE","STANDARD","START","STATIC","STDDEV","STORED","STRING","STRUCT","STYLE","SUBMULTISET","SUBPARTITION","SUBSTITUTABLE","SUBTYPE","SUM","SYNONYM","TABAUTH","TABLE","TDO","THE","THEN","TIME","TIMESTAMP","TIMEZONE_ABBR","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIMEZONE_REGION","TO","TRAILING","TRANSAC","TRANSACTIONAL","TRUSTED","TYPE","UB1","UB2","UB4","UNDER","UNION","UNIQUE","UNSIGNED","UNTRUSTED","UPDATE","USE","USING","VALIST","VALUE","VALUES","VARIABLE","VARIANCE","VARRAY","VARYING","VIEW","VIEWS","VOID","WHEN","WHERE","WHILE","WITH","WORK","WRAPPED","WRITE","YEAR","ZONE"]}),XA=bi({numeric:["ABS","ACOS","ASIN","ATAN","ATAN2","BITAND","CEIL","COS","COSH","EXP","FLOOR","LN","LOG","MOD","NANVL","POWER","REMAINDER","ROUND","SIGN","SIN","SINH","SQRT","TAN","TANH","TRUNC","WIDTH_BUCKET"],character:["CHR","CONCAT","INITCAP","LOWER","LPAD","LTRIM","NLS_INITCAP","NLS_LOWER","NLSSORT","NLS_UPPER","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","RPAD","RTRIM","SOUNDEX","SUBSTR","TRANSLATE","TREAT","TRIM","UPPER","NLS_CHARSET_DECL_LEN","NLS_CHARSET_ID","NLS_CHARSET_NAME","ASCII","INSTR","LENGTH","REGEXP_INSTR"],datetime:["ADD_MONTHS","CURRENT_DATE","CURRENT_TIMESTAMP","DBTIMEZONE","EXTRACT","FROM_TZ","LAST_DAY","LOCALTIMESTAMP","MONTHS_BETWEEN","NEW_TIME","NEXT_DAY","NUMTODSINTERVAL","NUMTOYMINTERVAL","ROUND","SESSIONTIMEZONE","SYS_EXTRACT_UTC","SYSDATE","SYSTIMESTAMP","TO_CHAR","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_DSINTERVAL","TO_YMINTERVAL","TRUNC","TZ_OFFSET"],comparison:["GREATEST","LEAST"],conversion:["ASCIISTR","BIN_TO_NUM","CAST","CHARTOROWID","COMPOSE","CONVERT","DECOMPOSE","HEXTORAW","NUMTODSINTERVAL","NUMTOYMINTERVAL","RAWTOHEX","RAWTONHEX","ROWIDTOCHAR","ROWIDTONCHAR","SCN_TO_TIMESTAMP","TIMESTAMP_TO_SCN","TO_BINARY_DOUBLE","TO_BINARY_FLOAT","TO_CHAR","TO_CLOB","TO_DATE","TO_DSINTERVAL","TO_LOB","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_DSINTERVAL","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_YMINTERVAL","TO_YMINTERVAL","TRANSLATE","UNISTR"],largeObject:["BFILENAME","EMPTY_BLOB,","EMPTY_CLOB"],collection:["CARDINALITY","COLLECT","POWERMULTISET","POWERMULTISET_BY_CARDINALITY","SET"],hierarchical:["SYS_CONNECT_BY_PATH"],dataMining:["CLUSTER_ID","CLUSTER_PROBABILITY","CLUSTER_SET","FEATURE_ID","FEATURE_SET","FEATURE_VALUE","PREDICTION","PREDICTION_COST","PREDICTION_DETAILS","PREDICTION_PROBABILITY","PREDICTION_SET"],xml:["APPENDCHILDXML","DELETEXML","DEPTH","EXTRACT","EXISTSNODE","EXTRACTVALUE","INSERTCHILDXML","INSERTXMLBEFORE","PATH","SYS_DBURIGEN","SYS_XMLAGG","SYS_XMLGEN","UPDATEXML","XMLAGG","XMLCDATA","XMLCOLATTVAL","XMLCOMMENT","XMLCONCAT","XMLFOREST","XMLPARSE","XMLPI","XMLQUERY","XMLROOT","XMLSEQUENCE","XMLSERIALIZE","XMLTABLE","XMLTRANSFORM"],encoding:["DECODE","DUMP","ORA_HASH","VSIZE"],nullRelated:["COALESCE","LNNVL","NULLIF","NVL","NVL2"],env:["SYS_CONTEXT","SYS_GUID","SYS_TYPEID","UID","USER","USERENV"],aggregate:["AVG","COLLECT","CORR","CORR_S","CORR_K","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","FIRST","GROUP_ID","GROUPING","GROUPING_ID","LAST","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANK","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","STATS_BINOMIAL_TEST","STATS_CROSSTAB","STATS_F_TEST","STATS_KS_TEST","STATS_MODE","STATS_MW_TEST","STATS_ONE_WAY_ANOVA","STATS_T_TEST_ONE","STATS_T_TEST_PAIRED","STATS_T_TEST_INDEP","STATS_T_TEST_INDEPU","STATS_WSR_TEST","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE"],window:["FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTILE","RATIO_TO_REPORT","ROW_NUMBER"],objectReference:["DEREF","MAKE_REF","REF","REFTOHEX","VALUE"],model:["CV","ITERATION_NUMBER","PRESENTNNV","PRESENTV","PREVIOUS"],dataTypes:["VARCHAR2","NVARCHAR2","NUMBER","FLOAT","TIMESTAMP","INTERVAL YEAR","INTERVAL DAY","RAW","UROWID","NCHAR","CHARACTER","CHAR","CHARACTER VARYING","CHAR VARYING","NATIONAL CHARACTER","NATIONAL CHAR","NATIONAL CHARACTER VARYING","NATIONAL CHAR VARYING","NCHAR VARYING","NUMERIC","DECIMAL","FLOAT","VARCHAR"]}),wA=Ui(["SELECT [ALL | DISTINCT | UNIQUE]"]),KA=Ui(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE","INSERT [INTO | ALL INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [THEN]","UPDATE SET","CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW","CREATE MATERIALIZED VIEW","CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE","RETURNING"]),$A=Ui(["UPDATE [ONLY]","DELETE FROM [ONLY]","DROP TABLE","ALTER TABLE","ADD","DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}","MODIFY","RENAME TO","RENAME COLUMN","TRUNCATE TABLE","SET SCHEMA","BEGIN","CONNECT BY","DECLARE","EXCEPT","EXCEPTION","LOOP","START WITH"]),kA=Ui(["UNION [ALL]","EXCEPT","INTERSECT"]),JA=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | OUTER} APPLY"]),ZA=Ui(["ON {UPDATE | DELETE} [SET NULL]","ON COMMIT","{ROWS | RANGE} BETWEEN"]),qA={tokenizerOptions:{reservedSelect:wA,reservedClauses:[...KA,...$A],reservedSetOperations:kA,reservedJoins:JA,reservedPhrases:ZA,supportsXor:!0,reservedKeywords:QA,reservedFunctionNames:XA,stringTypes:[{quote:"''-qq",prefixes:["N"]},{quote:"q''",prefixes:["N"]}],identTypes:['""-qq'],identChars:{rest:"$#"},variableTypes:[{regex:"&{1,2}[A-Za-z][A-Za-z0-9_$#]*"}],paramTypes:{numbered:[":"],named:[":"]},paramChars:{},operators:["**",":=","%","~=","^=",">>","<<","=>","@","||"],postProcess:function(e){let E=Pi;return e.map((e=>fi.SET(e)&&fi.BY(E)?{...e,type:pi.RESERVED_KEYWORD}:(Mi(e.type)&&(E=e),e)))}},formatOptions:{alwaysDenseOperators:["@"],onelineClauses:$A}};const jA=bi({math:["ABS","ACOS","ACOSD","ACOSH","ASIN","ASIND","ASINH","ATAN","ATAN2","ATAN2D","ATAND","ATANH","CBRT","CEIL","CEILING","COS","COSD","COSH","COT","COTD","DEGREES","DIV","EXP","FACTORIAL","FLOOR","GCD","LCM","LN","LOG","LOG10","MIN_SCALE","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SCALE","SETSEED","SIGN","SIN","SIND","SINH","SQRT","TAN","TAND","TANH","TRIM_SCALE","TRUNC","WIDTH_BUCKET"],string:["ABS","ASCII","BIT_LENGTH","BTRIM","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CONCAT","CONCAT_WS","FORMAT","INITCAP","LEFT","LENGTH","LOWER","LPAD","LTRIM","MD5","NORMALIZE","OCTET_LENGTH","OVERLAY","PARSE_IDENT","PG_CLIENT_ENCODING","POSITION","QUOTE_IDENT","QUOTE_LITERAL","QUOTE_NULLABLE","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPLIT_PART","SPRINTF","STARTS_WITH","STRING_AGG","STRING_TO_ARRAY","STRING_TO_TABLE","STRPOS","SUBSTR","SUBSTRING","TO_ASCII","TO_HEX","TRANSLATE","TRIM","UNISTR","UPPER"],binary:["BIT_COUNT","BIT_LENGTH","BTRIM","CONVERT","CONVERT_FROM","CONVERT_TO","DECODE","ENCODE","GET_BIT","GET_BYTE","LENGTH","LTRIM","MD5","OCTET_LENGTH","OVERLAY","POSITION","RTRIM","SET_BIT","SET_BYTE","SHA224","SHA256","SHA384","SHA512","STRING_AGG","SUBSTR","SUBSTRING","TRIM"],bitstring:["BIT_COUNT","BIT_LENGTH","GET_BIT","LENGTH","OCTET_LENGTH","OVERLAY","POSITION","SET_BIT","SUBSTRING"],pattern:["REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE"],datatype:["TO_CHAR","TO_DATE","TO_NUMBER","TO_TIMESTAMP"],datetime:["CLOCK_TIMESTAMP","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_BIN","DATE_PART","DATE_TRUNC","EXTRACT","ISFINITE","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","LOCALTIME","LOCALTIMESTAMP","MAKE_DATE","MAKE_INTERVAL","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","NOW","PG_SLEEP","PG_SLEEP_FOR","PG_SLEEP_UNTIL","STATEMENT_TIMESTAMP","TIMEOFDAY","TO_TIMESTAMP","TRANSACTION_TIMESTAMP"],enum:["ENUM_FIRST","ENUM_LAST","ENUM_RANGE"],geometry:["AREA","BOUND_BOX","BOX","CENTER","CIRCLE","DIAGONAL","DIAMETER","HEIGHT","ISCLOSED","ISOPEN","LENGTH","LINE","LSEG","NPOINTS","PATH","PCLOSE","POINT","POLYGON","POPEN","RADIUS","SLOPE","WIDTH"],network:["ABBREV","BROADCAST","FAMILY","HOST","HOSTMASK","INET_MERGE","INET_SAME_FAMILY","MACADDR8_SET7BIT","MASKLEN","NETMASK","NETWORK","SET_MASKLEN","TEXT","TRUNC"],textsearch:["ARRAY_TO_TSVECTOR","GET_CURRENT_TS_CONFIG","JSONB_TO_TSVECTOR","JSON_TO_TSVECTOR","LENGTH","NUMNODE","PHRASETO_TSQUERY","PLAINTO_TSQUERY","QUERYTREE","SETWEIGHT","STRIP","TO_TSQUERY","TO_TSVECTOR","TSQUERY_PHRASE","TSVECTOR_TO_ARRAY","TS_DEBUG","TS_DELETE","TS_FILTER","TS_HEADLINE","TS_LEXIZE","TS_PARSE","TS_RANK","TS_RANK_CD","TS_REWRITE","TS_STAT","TS_TOKEN_TYPE","WEBSEARCH_TO_TSQUERY"],uuid:["UUID"],xml:["CURSOR_TO_XML","CURSOR_TO_XMLSCHEMA","DATABASE_TO_XML","DATABASE_TO_XMLSCHEMA","DATABASE_TO_XML_AND_XMLSCHEMA","NEXTVAL","QUERY_TO_XML","QUERY_TO_XMLSCHEMA","QUERY_TO_XML_AND_XMLSCHEMA","SCHEMA_TO_XML","SCHEMA_TO_XMLSCHEMA","SCHEMA_TO_XML_AND_XMLSCHEMA","STRING","TABLE_TO_XML","TABLE_TO_XMLSCHEMA","TABLE_TO_XML_AND_XMLSCHEMA","XMLAGG","XMLCOMMENT","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","XML_IS_WELL_FORMED","XML_IS_WELL_FORMED_CONTENT","XML_IS_WELL_FORMED_DOCUMENT","XPATH","XPATH_EXISTS"],json:["ARRAY_TO_JSON","JSONB_AGG","JSONB_ARRAY_ELEMENTS","JSONB_ARRAY_ELEMENTS_TEXT","JSONB_ARRAY_LENGTH","JSONB_BUILD_ARRAY","JSONB_BUILD_OBJECT","JSONB_EACH","JSONB_EACH_TEXT","JSONB_EXTRACT_PATH","JSONB_EXTRACT_PATH_TEXT","JSONB_INSERT","JSONB_OBJECT","JSONB_OBJECT_AGG","JSONB_OBJECT_KEYS","JSONB_PATH_EXISTS","JSONB_PATH_EXISTS_TZ","JSONB_PATH_MATCH","JSONB_PATH_MATCH_TZ","JSONB_PATH_QUERY","JSONB_PATH_QUERY_ARRAY","JSONB_PATH_QUERY_ARRAY_TZ","JSONB_PATH_QUERY_FIRST","JSONB_PATH_QUERY_FIRST_TZ","JSONB_PATH_QUERY_TZ","JSONB_POPULATE_RECORD","JSONB_POPULATE_RECORDSET","JSONB_PRETTY","JSONB_SET","JSONB_SET_LAX","JSONB_STRIP_NULLS","JSONB_TO_RECORD","JSONB_TO_RECORDSET","JSONB_TYPEOF","JSON_AGG","JSON_ARRAY_ELEMENTS","JSON_ARRAY_ELEMENTS_TEXT","JSON_ARRAY_LENGTH","JSON_BUILD_ARRAY","JSON_BUILD_OBJECT","JSON_EACH","JSON_EACH_TEXT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_OBJECT","JSON_OBJECT_AGG","JSON_OBJECT_KEYS","JSON_POPULATE_RECORD","JSON_POPULATE_RECORDSET","JSON_STRIP_NULLS","JSON_TO_RECORD","JSON_TO_RECORDSET","JSON_TYPEOF","ROW_TO_JSON","TO_JSON","TO_JSONB","TO_TIMESTAMP"],sequence:["CURRVAL","LASTVAL","NEXTVAL","SETVAL"],conditional:["COALESCE","GREATEST","LEAST","NULLIF"],array:["ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_DIMS","ARRAY_FILL","ARRAY_LENGTH","ARRAY_LOWER","ARRAY_NDIMS","ARRAY_POSITION","ARRAY_POSITIONS","ARRAY_PREPEND","ARRAY_REMOVE","ARRAY_REPLACE","ARRAY_TO_STRING","ARRAY_UPPER","CARDINALITY","STRING_TO_ARRAY","TRIM_ARRAY","UNNEST"],range:["ISEMPTY","LOWER","LOWER_INC","LOWER_INF","MULTIRANGE","RANGE_MERGE","UPPER","UPPER_INC","UPPER_INF"],aggregate:["ARRAY_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COALESCE","CORR","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","EVERY","GROUPING","JSONB_AGG","JSONB_OBJECT_AGG","JSON_AGG","JSON_OBJECT_AGG","MAX","MIN","MODE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANGE_AGG","RANGE_INTERSECT_AGG","RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","TO_JSON","TO_JSONB","VARIANCE","VAR_POP","VAR_SAMP","XMLAGG"],window:["CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER"],set:["GENERATE_SERIES","GENERATE_SUBSCRIPTS"],sysInfo:["ACLDEFAULT","ACLEXPLODE","COL_DESCRIPTION","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","FORMAT_TYPE","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HAS_TYPE_PRIVILEGE","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","MAKEACLITEM","OBJ_DESCRIPTION","PG_BACKEND_PID","PG_BLOCKING_PIDS","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONTROL_CHECKPOINT","PG_CONTROL_INIT","PG_CONTROL_SYSTEM","PG_CONVERSION_IS_VISIBLE","PG_CURRENT_LOGFILE","PG_CURRENT_SNAPSHOT","PG_CURRENT_XACT_ID","PG_CURRENT_XACT_ID_IF_ASSIGNED","PG_DESCRIBE_OBJECT","PG_FUNCTION_IS_VISIBLE","PG_GET_CATALOG_FOREIGN_KEYS","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_FUNCTIONDEF","PG_GET_FUNCTION_ARGUMENTS","PG_GET_FUNCTION_IDENTITY_ARGUMENTS","PG_GET_FUNCTION_RESULT","PG_GET_INDEXDEF","PG_GET_KEYWORDS","PG_GET_OBJECT_ADDRESS","PG_GET_OWNED_SEQUENCE","PG_GET_RULEDEF","PG_GET_SERIAL_SEQUENCE","PG_GET_STATISTICSOBJDEF","PG_GET_TRIGGERDEF","PG_GET_USERBYID","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IDENTIFY_OBJECT","PG_IDENTIFY_OBJECT_AS_ADDRESS","PG_INDEXAM_HAS_PROPERTY","PG_INDEX_COLUMN_HAS_PROPERTY","PG_INDEX_HAS_PROPERTY","PG_IS_OTHER_TEMP_SCHEMA","PG_JIT_AVAILABLE","PG_LAST_COMMITTED_XACT","PG_LISTENING_CHANNELS","PG_MY_TEMP_SCHEMA","PG_NOTIFICATION_QUEUE_USAGE","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_OPTIONS_TO_TABLE","PG_POSTMASTER_START_TIME","PG_SAFE_SNAPSHOT_BLOCKING_PIDS","PG_SNAPSHOT_XIP","PG_SNAPSHOT_XMAX","PG_SNAPSHOT_XMIN","PG_STATISTICS_OBJ_IS_VISIBLE","PG_TABLESPACE_DATABASES","PG_TABLESPACE_LOCATION","PG_TABLE_IS_VISIBLE","PG_TRIGGER_DEPTH","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PG_VISIBLE_IN_SNAPSHOT","PG_XACT_COMMIT_TIMESTAMP","PG_XACT_COMMIT_TIMESTAMP_ORIGIN","PG_XACT_STATUS","PQSERVERVERSION","ROW_SECURITY_ACTIVE","SESSION_USER","SHOBJ_DESCRIPTION","TO_REGCLASS","TO_REGCOLLATION","TO_REGNAMESPACE","TO_REGOPER","TO_REGOPERATOR","TO_REGPROC","TO_REGPROCEDURE","TO_REGROLE","TO_REGTYPE","TXID_CURRENT","TXID_CURRENT_IF_ASSIGNED","TXID_CURRENT_SNAPSHOT","TXID_SNAPSHOT_XIP","TXID_SNAPSHOT_XMAX","TXID_SNAPSHOT_XMIN","TXID_STATUS","TXID_VISIBLE_IN_SNAPSHOT","USER","VERSION"],sysAdmin:["BRIN_DESUMMARIZE_RANGE","BRIN_SUMMARIZE_NEW_VALUES","BRIN_SUMMARIZE_RANGE","CONVERT_FROM","CURRENT_SETTING","GIN_CLEAN_PENDING_LIST","PG_ADVISORY_LOCK","PG_ADVISORY_LOCK_SHARED","PG_ADVISORY_UNLOCK","PG_ADVISORY_UNLOCK_ALL","PG_ADVISORY_UNLOCK_SHARED","PG_ADVISORY_XACT_LOCK","PG_ADVISORY_XACT_LOCK_SHARED","PG_BACKUP_START_TIME","PG_CANCEL_BACKEND","PG_COLLATION_ACTUAL_VERSION","PG_COLUMN_COMPRESSION","PG_COLUMN_SIZE","PG_COPY_LOGICAL_REPLICATION_SLOT","PG_COPY_PHYSICAL_REPLICATION_SLOT","PG_CREATE_LOGICAL_REPLICATION_SLOT","PG_CREATE_PHYSICAL_REPLICATION_SLOT","PG_CREATE_RESTORE_POINT","PG_CURRENT_WAL_FLUSH_LSN","PG_CURRENT_WAL_INSERT_LSN","PG_CURRENT_WAL_LSN","PG_DATABASE_SIZE","PG_DROP_REPLICATION_SLOT","PG_EXPORT_SNAPSHOT","PG_FILENODE_RELATION","PG_GET_WAL_REPLAY_PAUSE_STATE","PG_IMPORT_SYSTEM_COLLATIONS","PG_INDEXES_SIZE","PG_IS_IN_BACKUP","PG_IS_IN_RECOVERY","PG_IS_WAL_REPLAY_PAUSED","PG_LAST_WAL_RECEIVE_LSN","PG_LAST_WAL_REPLAY_LSN","PG_LAST_XACT_REPLAY_TIMESTAMP","PG_LOGICAL_EMIT_MESSAGE","PG_LOGICAL_SLOT_GET_BINARY_CHANGES","PG_LOGICAL_SLOT_GET_CHANGES","PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES","PG_LOGICAL_SLOT_PEEK_CHANGES","PG_LOG_BACKEND_MEMORY_CONTEXTS","PG_LS_ARCHIVE_STATUSDIR","PG_LS_DIR","PG_LS_LOGDIR","PG_LS_TMPDIR","PG_LS_WALDIR","PG_PARTITION_ANCESTORS","PG_PARTITION_ROOT","PG_PARTITION_TREE","PG_PROMOTE","PG_READ_BINARY_FILE","PG_READ_FILE","PG_RELATION_FILENODE","PG_RELATION_FILEPATH","PG_RELATION_SIZE","PG_RELOAD_CONF","PG_REPLICATION_ORIGIN_ADVANCE","PG_REPLICATION_ORIGIN_CREATE","PG_REPLICATION_ORIGIN_DROP","PG_REPLICATION_ORIGIN_OID","PG_REPLICATION_ORIGIN_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_IS_SETUP","PG_REPLICATION_ORIGIN_SESSION_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_RESET","PG_REPLICATION_ORIGIN_SESSION_SETUP","PG_REPLICATION_ORIGIN_XACT_RESET","PG_REPLICATION_ORIGIN_XACT_SETUP","PG_REPLICATION_SLOT_ADVANCE","PG_ROTATE_LOGFILE","PG_SIZE_BYTES","PG_SIZE_PRETTY","PG_START_BACKUP","PG_STAT_FILE","PG_STOP_BACKUP","PG_SWITCH_WAL","PG_TABLESPACE_SIZE","PG_TABLE_SIZE","PG_TERMINATE_BACKEND","PG_TOTAL_RELATION_SIZE","PG_TRY_ADVISORY_LOCK","PG_TRY_ADVISORY_LOCK_SHARED","PG_TRY_ADVISORY_XACT_LOCK","PG_TRY_ADVISORY_XACT_LOCK_SHARED","PG_WALFILE_NAME","PG_WALFILE_NAME_OFFSET","PG_WAL_LSN_DIFF","PG_WAL_REPLAY_PAUSE","PG_WAL_REPLAY_RESUME","SET_CONFIG"],trigger:["SUPPRESS_REDUNDANT_UPDATES_TRIGGER","TSVECTOR_UPDATE_TRIGGER","TSVECTOR_UPDATE_TRIGGER_COLUMN"],eventTrigger:["PG_EVENT_TRIGGER_DDL_COMMANDS","PG_EVENT_TRIGGER_DROPPED_OBJECTS","PG_EVENT_TRIGGER_TABLE_REWRITE_OID","PG_EVENT_TRIGGER_TABLE_REWRITE_REASON","PG_GET_OBJECT_ADDRESS"],stats:["PG_MCV_LIST_ITEMS"],cast:["CAST"],dataTypes:["BIT","BIT VARYING","CHARACTER","CHARACTER VARYING","VARCHAR","CHAR","DECIMAL","NUMERIC","TIME","TIMESTAMP","ENUM"]}),zA=bi({all:["ABORT","ABSOLUTE","ACCESS","ACTION","ADD","ADMIN","AFTER","AGGREGATE","ALL","ALSO","ALTER","ALWAYS","ANALYSE","ANALYZE","AND","ANY","ARRAY","AS","ASC","ASENSITIVE","ASSERTION","ASSIGNMENT","ASYMMETRIC","AT","ATOMIC","ATTACH","ATTRIBUTE","AUTHORIZATION","BACKWARD","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","BIT","BOOLEAN","BOTH","BREADTH","BY","CACHE","CALL","CALLED","CASCADE","CASCADED","CASE","CAST","CATALOG","CHAIN","CHAR","CHARACTER","CHARACTERISTICS","CHECK","CHECKPOINT","CLASS","CLOSE","CLUSTER","COALESCE","COLLATE","COLLATION","COLUMN","COLUMNS","COMMENT","COMMENTS","COMMIT","COMMITTED","COMPRESSION","CONCURRENTLY","CONFIGURATION","CONFLICT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTENT","CONTINUE","CONVERSION","COPY","COST","CREATE","CROSS","CSV","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DAY","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFAULTS","DEFERRABLE","DEFERRED","DEFINER","DELETE","DELIMITER","DELIMITERS","DEPENDS","DEPTH","DESC","DETACH","DICTIONARY","DISABLE","DISCARD","DISTINCT","DO","DOCUMENT","DOMAIN","DOUBLE","DROP","EACH","ELSE","ENABLE","ENCODING","ENCRYPTED","END","ENUM","ESCAPE","EVENT","EXCEPT","EXCLUDE","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXPLAIN","EXPRESSION","EXTENSION","EXTERNAL","EXTRACT","FALSE","FAMILY","FETCH","FILTER","FINALIZE","FIRST","FLOAT","FOLLOWING","FOR","FORCE","FOREIGN","FORWARD","FREEZE","FROM","FULL","FUNCTION","FUNCTIONS","GENERATED","GLOBAL","GRANT","GRANTED","GREATEST","GROUP","GROUPING","GROUPS","HANDLER","HAVING","HEADER","HOLD","HOUR","IDENTITY","IF","ILIKE","IMMEDIATE","IMMUTABLE","IMPLICIT","IMPORT","IN","INCLUDE","INCLUDING","INCREMENT","INDEX","INDEXES","INHERIT","INHERITS","INITIALLY","INLINE","INNER","INOUT","INPUT","INSENSITIVE","INSERT","INSTEAD","INT","INTEGER","INTERSECT","INTERVAL","INTO","INVOKER","IS","ISNULL","ISOLATION","JOIN","KEY","LABEL","LANGUAGE","LARGE","LAST","LATERAL","LEADING","LEAKPROOF","LEAST","LEFT","LEVEL","LIKE","LIMIT","LISTEN","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCK","LOCKED","LOGGED","MAPPING","MATCH","MATERIALIZED","MAXVALUE","METHOD","MINUTE","MINVALUE","MODE","MONTH","MOVE","NAME","NAMES","NATIONAL","NATURAL","NCHAR","NEW","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NORMALIZE","NORMALIZED","NOT","NOTHING","NOTIFY","NOTNULL","NOWAIT","NULL","NULLIF","NULLS","NUMERIC","OBJECT","OF","OFF","OFFSET","OIDS","OLD","ON","ONLY","OPERATOR","OPTION","OPTIONS","OR","ORDER","ORDINALITY","OTHERS","OUT","OUTER","OVER","OVERLAPS","OVERLAY","OVERRIDING","OWNED","OWNER","PARALLEL","PARSER","PARTIAL","PARTITION","PASSING","PASSWORD","PLACING","PLANS","POLICY","POSITION","PRECEDING","PRECISION","PREPARE","PREPARED","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURAL","PROCEDURE","PROCEDURES","PROGRAM","PUBLICATION","QUOTE","RANGE","READ","REAL","REASSIGN","RECHECK","RECURSIVE","REF","REFERENCES","REFERENCING","REFRESH","REINDEX","RELATIVE","RELEASE","RENAME","REPEATABLE","REPLACE","REPLICA","RESET","RESTART","RESTRICT","RETURN","RETURNING","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROLLUP","ROUTINE","ROUTINES","ROW","ROWS","RULE","SAVEPOINT","SCHEMA","SCHEMAS","SCROLL","SEARCH","SECOND","SECURITY","SELECT","SEQUENCE","SEQUENCES","SERIALIZABLE","SERVER","SESSION","SESSION_USER","SET","SETOF","SETS","SHARE","SHOW","SIMILAR","SIMPLE","SKIP","SMALLINT","SNAPSHOT","SOME","SQL","STABLE","STANDALONE","START","STATEMENT","STATISTICS","STDIN","STDOUT","STORAGE","STORED","STRICT","STRIP","SUBSCRIPTION","SUBSTRING","SUPPORT","SYMMETRIC","SYSID","SYSTEM","TABLE","TABLES","TABLESAMPLE","TABLESPACE","TEMP","TEMPLATE","TEMPORARY","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRANSFORM","TREAT","TRIGGER","TRIM","TRUE","TRUNCATE","TRUSTED","TYPE","TYPES","UESCAPE","UNBOUNDED","UNCOMMITTED","UNENCRYPTED","UNION","UNIQUE","UNKNOWN","UNLISTEN","UNLOGGED","UNTIL","UPDATE","USER","USING","VACUUM","VALID","VALIDATE","VALIDATOR","VALUE","VALUES","VARCHAR","VARIADIC","VARYING","VERBOSE","VERSION","VIEW","VIEWS","VOLATILE","WHEN","WHERE","WHITESPACE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","XML","XMLATTRIBUTES","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","YEAR","YES","ZONE"]}),ea=Ui(["SELECT [ALL | DISTINCT]"]),Ea=Ui(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW","CREATE MATERIALIZED VIEW [IF NOT EXISTS]","CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]","RETURNING"]),ta=Ui(["UPDATE [ONLY]","WHERE CURRENT OF","DELETE FROM [ONLY]","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS] [ONLY]","ALTER TABLE ALL IN TABLESPACE","RENAME [COLUMN]","RENAME TO","ADD [COLUMN] [IF NOT EXISTS]","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","[SET DATA] TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","TRUNCATE [TABLE] [ONLY]","SET SCHEMA","AFTER","ABORT","ALTER AGGREGATE","ALTER COLLATION","ALTER CONVERSION","ALTER DATABASE","ALTER DEFAULT PRIVILEGES","ALTER DOMAIN","ALTER EVENT TRIGGER","ALTER EXTENSION","ALTER FOREIGN DATA WRAPPER","ALTER FOREIGN TABLE","ALTER FUNCTION","ALTER GROUP","ALTER INDEX","ALTER LANGUAGE","ALTER LARGE OBJECT","ALTER MATERIALIZED VIEW","ALTER OPERATOR","ALTER OPERATOR CLASS","ALTER OPERATOR FAMILY","ALTER POLICY","ALTER PROCEDURE","ALTER PUBLICATION","ALTER ROLE","ALTER ROUTINE","ALTER RULE","ALTER SCHEMA","ALTER SEQUENCE","ALTER SERVER","ALTER STATISTICS","ALTER SUBSCRIPTION","ALTER SYSTEM","ALTER TABLESPACE","ALTER TEXT SEARCH CONFIGURATION","ALTER TEXT SEARCH DICTIONARY","ALTER TEXT SEARCH PARSER","ALTER TEXT SEARCH TEMPLATE","ALTER TRIGGER","ALTER TYPE","ALTER USER","ALTER USER MAPPING","ALTER VIEW","ANALYZE","BEGIN","CALL","CHECKPOINT","CLOSE","CLUSTER","COMMENT","COMMIT","COMMIT PREPARED","COPY","CREATE ACCESS METHOD","CREATE AGGREGATE","CREATE CAST","CREATE COLLATION","CREATE CONVERSION","CREATE DATABASE","CREATE DOMAIN","CREATE EVENT TRIGGER","CREATE EXTENSION","CREATE FOREIGN DATA WRAPPER","CREATE FOREIGN TABLE","CREATE FUNCTION","CREATE GROUP","CREATE INDEX","CREATE LANGUAGE","CREATE OPERATOR","CREATE OPERATOR CLASS","CREATE OPERATOR FAMILY","CREATE POLICY","CREATE PROCEDURE","CREATE PUBLICATION","CREATE ROLE","CREATE RULE","CREATE SCHEMA","CREATE SEQUENCE","CREATE SERVER","CREATE STATISTICS","CREATE SUBSCRIPTION","CREATE TABLESPACE","CREATE TEXT SEARCH CONFIGURATION","CREATE TEXT SEARCH DICTIONARY","CREATE TEXT SEARCH PARSER","CREATE TEXT SEARCH TEMPLATE","CREATE TRANSFORM","CREATE TRIGGER","CREATE TYPE","CREATE USER","CREATE USER MAPPING","DEALLOCATE","DECLARE","DISCARD","DO","DROP ACCESS METHOD","DROP AGGREGATE","DROP CAST","DROP COLLATION","DROP CONVERSION","DROP DATABASE","DROP DOMAIN","DROP EVENT TRIGGER","DROP EXTENSION","DROP FOREIGN DATA WRAPPER","DROP FOREIGN TABLE","DROP FUNCTION","DROP GROUP","DROP INDEX","DROP LANGUAGE","DROP MATERIALIZED VIEW","DROP OPERATOR","DROP OPERATOR CLASS","DROP OPERATOR FAMILY","DROP OWNED","DROP POLICY","DROP PROCEDURE","DROP PUBLICATION","DROP ROLE","DROP ROUTINE","DROP RULE","DROP SCHEMA","DROP SEQUENCE","DROP SERVER","DROP STATISTICS","DROP SUBSCRIPTION","DROP TABLESPACE","DROP TEXT SEARCH CONFIGURATION","DROP TEXT SEARCH DICTIONARY","DROP TEXT SEARCH PARSER","DROP TEXT SEARCH TEMPLATE","DROP TRANSFORM","DROP TRIGGER","DROP TYPE","DROP USER","DROP USER MAPPING","DROP VIEW","EXECUTE","EXPLAIN","FETCH","GRANT","IMPORT FOREIGN SCHEMA","LISTEN","LOAD","LOCK","MOVE","NOTIFY","PREPARE","PREPARE TRANSACTION","REASSIGN OWNED","REFRESH MATERIALIZED VIEW","REINDEX","RELEASE SAVEPOINT","RESET","REVOKE","ROLLBACK","ROLLBACK PREPARED","ROLLBACK TO SAVEPOINT","SAVEPOINT","SECURITY LABEL","SELECT INTO","SET CONSTRAINTS","SET ROLE","SET SESSION AUTHORIZATION","SET TRANSACTION","SHOW","START TRANSACTION","UNLISTEN","VACUUM"]),Ta=Ui(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),ra=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),na=Ui(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN","{TIMESTAMP | TIME} {WITH | WITHOUT} TIME ZONE"]),sa={tokenizerOptions:{reservedSelect:ea,reservedClauses:[...Ea,...ta],reservedSetOperations:Ta,reservedJoins:ra,reservedPhrases:na,reservedKeywords:zA,reservedFunctionNames:jA,nestedBlockComments:!0,extraParens:["[]"],stringTypes:["$$",{quote:"''-qq",prefixes:["U&"]},{quote:"''-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:[{quote:'""-qq',prefixes:["U&"]}],identChars:{rest:"$"},paramTypes:{numbered:["$"]},operators:["%","^","|/","||/","@",":=","&","|","#","~","<<",">>","~>~","~<~","~>=~","~<=~","@-@","@@","##","<->","&&","&<","&>","<<|","&<|","|>>","|&>","<^","^>","?#","?-","?|","?-|","?||","@>","<@","~=","?","@?","?&","->","->>","#>","#>>","#-","=>",">>=","<<=","~~","~~*","!~~","!~~*","~","~*","!~","!~*","-|-","||","@@@","!!","<%","%>","<<%","%>>","<<->","<->>","<<<->","<->>>","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:ta}},Ra=bi({aggregate:["ANY_VALUE","APPROXIMATE PERCENTILE_DISC","AVG","COUNT","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP"],array:["array","array_concat","array_flatten","get_array_length","split_to_array","subarray"],bitwise:["BIT_AND","BIT_OR","BOOL_AND","BOOL_OR"],conditional:["COALESCE","DECODE","GREATEST","LEAST","NVL","NVL2","NULLIF"],dateTime:["ADD_MONTHS","AT TIME ZONE","CONVERT_TIMEZONE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_CMP","DATE_CMP_TIMESTAMP","DATE_CMP_TIMESTAMPTZ","DATE_PART_YEAR","DATEADD","DATEDIFF","DATE_PART","DATE_TRUNC","EXTRACT","GETDATE","INTERVAL_CMP","LAST_DAY","MONTHS_BETWEEN","NEXT_DAY","SYSDATE","TIMEOFDAY","TIMESTAMP_CMP","TIMESTAMP_CMP_DATE","TIMESTAMP_CMP_TIMESTAMPTZ","TIMESTAMPTZ_CMP","TIMESTAMPTZ_CMP_DATE","TIMESTAMPTZ_CMP_TIMESTAMP","TIMEZONE","TO_TIMESTAMP","TRUNC"],spatial:["AddBBox","DropBBox","GeometryType","ST_AddPoint","ST_Angle","ST_Area","ST_AsBinary","ST_AsEWKB","ST_AsEWKT","ST_AsGeoJSON","ST_AsText","ST_Azimuth","ST_Boundary","ST_Collect","ST_Contains","ST_ContainsProperly","ST_ConvexHull","ST_CoveredBy","ST_Covers","ST_Crosses","ST_Dimension","ST_Disjoint","ST_Distance","ST_DistanceSphere","ST_DWithin","ST_EndPoint","ST_Envelope","ST_Equals","ST_ExteriorRing","ST_Force2D","ST_Force3D","ST_Force3DM","ST_Force3DZ","ST_Force4D","ST_GeometryN","ST_GeometryType","ST_GeomFromEWKB","ST_GeomFromEWKT","ST_GeomFromText","ST_GeomFromWKB","ST_InteriorRingN","ST_Intersects","ST_IsPolygonCCW","ST_IsPolygonCW","ST_IsClosed","ST_IsCollection","ST_IsEmpty","ST_IsSimple","ST_IsValid","ST_Length","ST_LengthSphere","ST_Length2D","ST_LineFromMultiPoint","ST_LineInterpolatePoint","ST_M","ST_MakeEnvelope","ST_MakeLine","ST_MakePoint","ST_MakePolygon","ST_MemSize","ST_MMax","ST_MMin","ST_Multi","ST_NDims","ST_NPoints","ST_NRings","ST_NumGeometries","ST_NumInteriorRings","ST_NumPoints","ST_Perimeter","ST_Perimeter2D","ST_Point","ST_PointN","ST_Points","ST_Polygon","ST_RemovePoint","ST_Reverse","ST_SetPoint","ST_SetSRID","ST_Simplify","ST_SRID","ST_StartPoint","ST_Touches","ST_Within","ST_X","ST_XMax","ST_XMin","ST_Y","ST_YMax","ST_YMin","ST_Z","ST_ZMax","ST_ZMin","SupportsBBox"],hash:["CHECKSUM","FUNC_SHA1","FNV_HASH","MD5","SHA","SHA1","SHA2"],hyperLogLog:["HLL","HLL_CREATE_SKETCH","HLL_CARDINALITY","HLL_COMBINE"],json:["IS_VALID_JSON","IS_VALID_JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_EXTRACT_ARRAY_ELEMENT_TEXT","JSON_EXTRACT_PATH_TEXT","JSON_PARSE","JSON_SERIALIZE"],math:["ABS","ACOS","ASIN","ATAN","ATAN2","CBRT","CEILING","CEIL","COS","COT","DEGREES","DEXP","DLOG1","DLOG10","EXP","FLOOR","LN","LOG","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SIN","SIGN","SQRT","TAN","TO_HEX","TRUNC"],machineLearning:["EXPLAIN_MODEL"],string:["ASCII","BPCHARCMP","BTRIM","BTTEXT_PATTERN_CMP","CHAR_LENGTH","CHARACTER_LENGTH","CHARINDEX","CHR","COLLATE","CONCAT","CRC32","DIFFERENCE","INITCAP","LEFT","RIGHT","LEN","LENGTH","LOWER","LPAD","RPAD","LTRIM","OCTETINDEX","OCTET_LENGTH","POSITION","QUOTE_IDENT","QUOTE_LITERAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","REPLICATE","REVERSE","RTRIM","SOUNDEX","SPLIT_PART","STRPOS","STRTOL","SUBSTRING","TEXTLEN","TRANSLATE","TRIM","UPPER"],superType:["decimal_precision","decimal_scale","is_array","is_bigint","is_boolean","is_char","is_decimal","is_float","is_integer","is_object","is_scalar","is_smallint","is_varchar","json_typeof"],window:["AVG","COUNT","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAST_VALUE","LAG","LEAD","LISTAGG","MAX","MEDIAN","MIN","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP"],dataType:["CAST","CONVERT","TO_CHAR","TO_DATE","TO_NUMBER","TEXT_TO_INT_ALT","TEXT_TO_NUMERIC_ALT"],sysAdmin:["CHANGE_QUERY_PRIORITY","CHANGE_SESSION_PRIORITY","CHANGE_USER_PRIORITY","CURRENT_SETTING","PG_CANCEL_BACKEND","PG_TERMINATE_BACKEND","REBOOT_CLUSTER","SET_CONFIG"],sysInfo:["CURRENT_AWS_ACCOUNT","CURRENT_DATABASE","CURRENT_NAMESPACE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","CURRENT_USER_ID","HAS_ASSUMEROLE_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_TABLE_PRIVILEGE","PG_BACKEND_PID","PG_GET_COLS","PG_GET_GRANTEE_BY_IAM_ROLE","PG_GET_IAM_ROLE_BY_USER","PG_GET_LATE_BINDING_VIEW_COLS","PG_LAST_COPY_COUNT","PG_LAST_COPY_ID","PG_LAST_UNLOAD_ID","PG_LAST_QUERY_ID","PG_LAST_UNLOAD_COUNT","SESSION_USER","SLICE_NUM","USER","VERSION"],dataTypes:["DECIMAL","NUMERIC","CHAR","CHARACTER","VARCHAR","CHARACTER VARYING","NCHAR","NVARCHAR","VARBYTE"]}),ia=bi({standard:["AES128","AES256","ALL","ALLOWOVERWRITE","ANY","ARRAY","AS","ASC","AUTHORIZATION","BACKUP","BETWEEN","BINARY","BOTH","CHECK","COLUMN","CONSTRAINT","CREATE","CROSS","DEFAULT","DEFERRABLE","DEFLATE","DEFRAG","DESC","DISABLE","DISTINCT","DO","ENABLE","ENCODE","ENCRYPT","ENCRYPTION","EXPLICIT","FALSE","FOR","FOREIGN","FREEZE","FROM","FULL","GLOBALDICT256","GLOBALDICT64K","GROUP","IDENTITY","IGNORE","ILIKE","IN","INITIALLY","INNER","INTO","IS","ISNULL","LANGUAGE","LEADING","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","LUN","LUNS","MINUS","NATURAL","NEW","NOT","NOTNULL","NULL","NULLS","OFF","OFFLINE","OFFSET","OID","OLD","ON","ONLY","OPEN","ORDER","OUTER","OVERLAPS","PARALLEL","PARTITION","PERCENT","PERMISSIONS","PLACING","PRIMARY","RECOVER","REFERENCES","REJECTLOG","RESORT","RESPECT","RESTORE","SIMILAR","SNAPSHOT","SOME","SYSTEM","TABLE","TAG","TDES","THEN","TIMESTAMP","TO","TOP","TRAILING","TRUE","UNIQUE","USING","VERBOSE","WALLET","WITHOUT"],dataConversionParams:["ACCEPTANYDATE","ACCEPTINVCHARS","BLANKSASNULL","DATEFORMAT","EMPTYASNULL","ENCODING","ESCAPE","EXPLICIT_IDS","FILLRECORD","IGNOREBLANKLINES","IGNOREHEADER","REMOVEQUOTES","ROUNDEC","TIMEFORMAT","TRIMBLANKS","TRUNCATECOLUMNS"],dataLoadParams:["COMPROWS","COMPUPDATE","MAXERROR","NOLOAD","STATUPDATE"],dataFormatParams:["FORMAT","CSV","DELIMITER","FIXEDWIDTH","SHAPEFILE","AVRO","JSON","PARQUET","ORC"],copyAuthParams:["ACCESS_KEY_ID","CREDENTIALS","ENCRYPTED","IAM_ROLE","MASTER_SYMMETRIC_KEY","SECRET_ACCESS_KEY","SESSION_TOKEN"],copyCompressionParams:["BZIP2","GZIP","LZOP","ZSTD"],copyMiscParams:["MANIFEST","READRATIO","REGION","SSH"],compressionEncodings:["RAW","AZ64","BYTEDICT","DELTA","DELTA32K","LZO","MOSTLY8","MOSTLY16","MOSTLY32","RUNLENGTH","TEXT255","TEXT32K"],misc:["CATALOG_ROLE","SECRET_ARN","EXTERNAL","AUTO","EVEN","KEY","PREDICATE","COMPRESSION"],dataTypes:["BPCHAR","TEXT"]}),Aa=Ui(["SELECT [ALL | DISTINCT]"]),aa=Ui(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","CREATE [OR REPLACE | MATERIALIZED] VIEW","CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]"]),oa=Ui(["UPDATE","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ALTER TABLE APPEND","ADD [COLUMN]","DROP [COLUMN]","RENAME TO","RENAME COLUMN","ALTER COLUMN","TYPE","ENCODE","TRUNCATE [TABLE]","ABORT","ALTER DATABASE","ALTER DATASHARE","ALTER DEFAULT PRIVILEGES","ALTER GROUP","ALTER MATERIALIZED VIEW","ALTER PROCEDURE","ALTER SCHEMA","ALTER USER","ANALYSE","ANALYZE","ANALYSE COMPRESSION","ANALYZE COMPRESSION","BEGIN","CALL","CANCEL","CLOSE","COMMENT","COMMIT","COPY","CREATE DATABASE","CREATE DATASHARE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL SCHEMA","CREATE EXTERNAL TABLE","CREATE FUNCTION","CREATE GROUP","CREATE LIBRARY","CREATE MODEL","CREATE PROCEDURE","CREATE SCHEMA","CREATE USER","DEALLOCATE","DECLARE","DESC DATASHARE","DROP DATABASE","DROP DATASHARE","DROP FUNCTION","DROP GROUP","DROP LIBRARY","DROP MODEL","DROP MATERIALIZED VIEW","DROP PROCEDURE","DROP SCHEMA","DROP USER","DROP VIEW","DROP","EXECUTE","EXPLAIN","FETCH","GRANT","LOCK","PREPARE","REFRESH MATERIALIZED VIEW","RESET","REVOKE","ROLLBACK","SELECT INTO","SET SESSION AUTHORIZATION","SET SESSION CHARACTERISTICS","SHOW","SHOW EXTERNAL TABLE","SHOW MODEL","SHOW DATASHARES","SHOW PROCEDURE","SHOW TABLE","SHOW VIEW","START TRANSACTION","UNLOAD","VACUUM"]),Sa=Ui(["UNION [ALL]","EXCEPT","INTERSECT","MINUS"]),Ia=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Oa=Ui(["NULL AS","DATA CATALOG","HIVE METASTORE","{ROWS | RANGE} BETWEEN"]),Na={tokenizerOptions:{reservedSelect:Aa,reservedClauses:[...aa,...oa],reservedSetOperations:Sa,reservedJoins:Ia,reservedPhrases:Oa,reservedKeywords:ia,reservedFunctionNames:Ra,stringTypes:["''-qq"],identTypes:['""-qq'],identChars:{first:"#"},paramTypes:{numbered:["$"]},operators:["^","%","@","|/","||/","&","|","~","<<",">>","||","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:oa}},La=bi({all:["ADD","AFTER","ALL","ALTER","ANALYZE","AND","ANTI","ANY","ARCHIVE","ARRAY","AS","ASC","AT","AUTHORIZATION","BETWEEN","BOTH","BUCKET","BUCKETS","BY","CACHE","CASCADE","CAST","CHANGE","CHECK","CLEAR","CLUSTER","CLUSTERED","CODEGEN","COLLATE","COLLECTION","COLUMN","COLUMNS","COMMENT","COMMIT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONSTRAINT","COST","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATA","DATABASE","DATABASES","DAY","DBPROPERTIES","DEFINED","DELETE","DELIMITED","DESC","DESCRIBE","DFS","DIRECTORIES","DIRECTORY","DISTINCT","DISTRIBUTE","DIV","DROP","ESCAPE","ESCAPED","EXCEPT","EXCHANGE","EXISTS","EXPORT","EXTENDED","EXTERNAL","EXTRACT","FALSE","FETCH","FIELDS","FILTER","FILEFORMAT","FIRST","FIRST_VALUE","FOLLOWING","FOR","FOREIGN","FORMAT","FORMATTED","FULL","FUNCTION","FUNCTIONS","GLOBAL","GRANT","GROUP","GROUPING","HOUR","IF","IGNORE","IMPORT","IN","INDEX","INDEXES","INNER","INPATH","INPUTFORMAT","INTERSECT","INTERVAL","INTO","IS","ITEMS","KEYS","LAST","LAST_VALUE","LATERAL","LAZY","LEADING","LEFT","LIKE","LINES","LIST","LOCAL","LOCATION","LOCK","LOCKS","LOGICAL","MACRO","MAP","MATCHED","MERGE","MINUTE","MONTH","MSCK","NAMESPACE","NAMESPACES","NATURAL","NO","NOT","NULL","NULLS","OF","ONLY","OPTION","OPTIONS","OR","ORDER","OUT","OUTER","OUTPUTFORMAT","OVER","OVERLAPS","OVERLAY","OVERWRITE","OWNER","PARTITION","PARTITIONED","PARTITIONS","PERCENT","PLACING","POSITION","PRECEDING","PRIMARY","PRINCIPALS","PROPERTIES","PURGE","QUERY","RANGE","RECORDREADER","RECORDWRITER","RECOVER","REDUCE","REFERENCES","RENAME","REPAIR","REPLACE","RESPECT","RESTRICT","REVOKE","RIGHT","RLIKE","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","SCHEMA","SECOND","SELECT","SEMI","SEPARATED","SERDE","SERDEPROPERTIES","SESSION_USER","SETS","SHOW","SKEWED","SOME","SORT","SORTED","START","STATISTICS","STORED","STRATIFY","STRUCT","SUBSTR","SUBSTRING","TABLE","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","THEN","TO","TOUCH","TRAILING","TRANSACTION","TRANSACTIONS","TRIM","TRUE","TRUNCATE","UNARCHIVE","UNBOUNDED","UNCACHE","UNIQUE","UNKNOWN","UNLOCK","UNSET","USE","USER","USING","VIEW","WINDOW","YEAR","ANALYSE","ARRAY_ZIP","COALESCE","CONTAINS","CONVERT","DAYS","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DECODE","DEFAULT","DISTINCTROW","ENCODE","EXPLODE","EXPLODE_OUTER","FIXED","GREATEST","GROUP_CONCAT","HOURS","HOUR_MINUTE","HOUR_SECOND","IFNULL","LEAST","LEVEL","MINUTE_SECOND","NULLIF","OFFSET","ON","OPTIMIZE","REGEXP","SEPARATOR","SIZE","STRING","TYPE","TYPES","UNSIGNED","VARIABLES","YEAR_MONTH"]}),_a=bi({aggregate:["APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COUNT","COUNT","COUNT_IF","COUNT_MIN_SKETCH","COVAR_POP","COVAR_SAMP","EVERY","FIRST","FIRST_VALUE","GROUPING","GROUPING_ID","KURTOSIS","LAST","LAST_VALUE","MAX","MAX_BY","MEAN","MIN","MIN_BY","PERCENTILE","PERCENTILE","PERCENTILE_APPROX","SKEWNESS","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE"],window:["CUME_DIST","DENSE_RANK","LAG","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER"],array:["ARRAY","ARRAY_CONTAINS","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_UNION","ARRAYS_OVERLAP","ARRAYS_ZIP","FLATTEN","SEQUENCE","SHUFFLE","SLICE","SORT_ARRAY"],map:["ELEMENT_AT","ELEMENT_AT","MAP","MAP_CONCAT","MAP_ENTRIES","MAP_FROM_ARRAYS","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","STR_TO_MAP"],datetime:["ADD_MONTHS","CURRENT_DATE","CURRENT_DATE","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","DATE_ADD","DATE_FORMAT","DATE_FROM_UNIX_DATE","DATE_PART","DATE_SUB","DATE_TRUNC","DATEDIFF","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MAKE_DATE","MAKE_DT_INTERVAL","MAKE_INTERVAL","MAKE_TIMESTAMP","MAKE_YM_INTERVAL","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","NOW","QUARTER","SECOND","SESSION_WINDOW","TIMESTAMP_MICROS","TIMESTAMP_MILLIS","TIMESTAMP_SECONDS","TO_DATE","TO_TIMESTAMP","TO_UNIX_TIMESTAMP","TO_UTC_TIMESTAMP","TRUNC","UNIX_DATE","UNIX_MICROS","UNIX_MILLIS","UNIX_SECONDS","UNIX_TIMESTAMP","WEEKDAY","WEEKOFYEAR","WINDOW","YEAR"],json:["FROM_JSON","GET_JSON_OBJECT","JSON_ARRAY_LENGTH","JSON_OBJECT_KEYS","JSON_TUPLE","SCHEMA_OF_JSON","TO_JSON"],misc:["ABS","ACOS","ACOSH","AGGREGATE","ARRAY_SORT","ASCII","ASIN","ASINH","ASSERT_TRUE","ATAN","ATAN2","ATANH","BASE64","BIGINT","BIN","BINARY","BIT_COUNT","BIT_GET","BIT_LENGTH","BOOLEAN","BROUND","BTRIM","CARDINALITY","CBRT","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONV","COS","COSH","COT","CRC32","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_USER","DATE","DECIMAL","DEGREES","DOUBLE","ELT","EXP","EXPM1","FACTORIAL","FIND_IN_SET","FLOAT","FLOOR","FORALL","FORMAT_NUMBER","FORMAT_STRING","FROM_CSV","GETBIT","HASH","HEX","HYPOT","INITCAP","INLINE","INLINE_OUTER","INPUT_FILE_BLOCK_LENGTH","INPUT_FILE_BLOCK_START","INPUT_FILE_NAME","INSTR","INT","ISNAN","ISNOTNULL","ISNULL","JAVA_METHOD","LCASE","LEFT","LENGTH","LEVENSHTEIN","LN","LOCATE","LOG","LOG10","LOG1P","LOG2","LOWER","LPAD","LTRIM","MAP_FILTER","MAP_ZIP_WITH","MD5","MOD","MONOTONICALLY_INCREASING_ID","NAMED_STRUCT","NANVL","NEGATIVE","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARSE_URL","PI","PMOD","POSEXPLODE","POSEXPLODE_OUTER","POSITION","POSITIVE","POW","POWER","PRINTF","RADIANS","RAISE_ERROR","RAND","RANDN","RANDOM","REFLECT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_REPLACE","REPEAT","REPLACE","REVERSE","RIGHT","RINT","ROUND","RPAD","RTRIM","SCHEMA_OF_CSV","SENTENCES","SHA","SHA1","SHA2","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIGNUM","SIN","SINH","SMALLINT","SOUNDEX","SPACE","SPARK_PARTITION_ID","SPLIT","SQRT","STACK","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TAN","TANH","TIMESTAMP","TINYINT","TO_CSV","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRY_ADD","TRY_DIVIDE","TYPEOF","UCASE","UNBASE64","UNHEX","UPPER","UUID","VERSION","WIDTH_BUCKET","XPATH","XPATH_BOOLEAN","XPATH_DOUBLE","XPATH_FLOAT","XPATH_INT","XPATH_LONG","XPATH_NUMBER","XPATH_SHORT","XPATH_STRING","XXHASH64","ZIP_WITH"],cast:["CAST"],caseAbbrev:["COALESCE","NULLIF"],dataTypes:["DECIMAL","DEC","NUMERIC","VARCHAR"]}),Ca=Ui(["SELECT [ALL | DISTINCT]"]),la=Ui(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT [INTO | OVERWRITE] [TABLE]","VALUES","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE","CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]","CREATE [EXTERNAL] TABLE [IF NOT EXISTS]"]),ca=Ui(["DROP TABLE [IF EXISTS]","ALTER TABLE","ADD COLUMNS","DROP {COLUMN | COLUMNS}","RENAME TO","RENAME COLUMN","ALTER COLUMN","TRUNCATE TABLE","LATERAL VIEW","ALTER DATABASE","ALTER VIEW","CREATE DATABASE","CREATE FUNCTION","DROP DATABASE","DROP FUNCTION","DROP VIEW","REPAIR TABLE","USE DATABASE","TABLESAMPLE","PIVOT","TRANSFORM","EXPLAIN","ADD FILE","ADD JAR","ANALYZE TABLE","CACHE TABLE","CLEAR CACHE","DESCRIBE DATABASE","DESCRIBE FUNCTION","DESCRIBE QUERY","DESCRIBE TABLE","LIST FILE","LIST JAR","REFRESH","REFRESH TABLE","REFRESH FUNCTION","RESET","SHOW COLUMNS","SHOW CREATE TABLE","SHOW DATABASES","SHOW FUNCTIONS","SHOW PARTITIONS","SHOW TABLE EXTENDED","SHOW TABLES","SHOW TBLPROPERTIES","SHOW VIEWS","UNCACHE TABLE"]),ua=Ui(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),pa=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT] {ANTI | SEMI} JOIN","NATURAL [LEFT] {ANTI | SEMI} JOIN"]),Da=Ui(["ON DELETE","ON UPDATE","CURRENT ROW","{ROWS | RANGE} BETWEEN"]),Pa={tokenizerOptions:{reservedSelect:Ca,reservedClauses:[...la,...ca],reservedSetOperations:ua,reservedJoins:pa,reservedPhrases:Da,supportsXor:!0,reservedKeywords:La,reservedFunctionNames:_a,extraParens:["[]"],stringTypes:["''-bs",'""-bs',{quote:"''-raw",prefixes:["R","X"],requirePrefix:!0},{quote:'""-raw',prefixes:["R","X"],requirePrefix:!0}],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||","->"],postProcess:function(e){return e.map(((E,t)=>{const T=e[t-1]||Pi,r=e[t+1]||Pi;return fi.WINDOW(E)&&r.type===pi.OPEN_PAREN?{...E,type:pi.RESERVED_FUNCTION_NAME}:"ITEMS"!==E.text||E.type!==pi.RESERVED_KEYWORD||"COLLECTION"===T.text&&"TERMINATED"===r.text?E:{...E,type:pi.IDENTIFIER,text:E.raw}}))}},formatOptions:{onelineClauses:ca}};const da=bi({scalar:["ABS","CHANGES","CHAR","COALESCE","FORMAT","GLOB","HEX","IFNULL","IIF","INSTR","LAST_INSERT_ROWID","LENGTH","LIKE","LIKELIHOOD","LIKELY","LOAD_EXTENSION","LOWER","LTRIM","NULLIF","PRINTF","QUOTE","RANDOM","RANDOMBLOB","REPLACE","ROUND","RTRIM","SIGN","SOUNDEX","SQLITE_COMPILEOPTION_GET","SQLITE_COMPILEOPTION_USED","SQLITE_OFFSET","SQLITE_SOURCE_ID","SQLITE_VERSION","SUBSTR","SUBSTRING","TOTAL_CHANGES","TRIM","TYPEOF","UNICODE","UNLIKELY","UPPER","ZEROBLOB"],aggregate:["AVG","COUNT","GROUP_CONCAT","MAX","MIN","SUM","TOTAL"],datetime:["DATE","TIME","DATETIME","JULIANDAY","UNIXEPOCH","STRFTIME"],window:["row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value"],math:["ACOS","ACOSH","ASIN","ASINH","ATAN","ATAN2","ATANH","CEIL","CEILING","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG","LOG10","LOG2","MOD","PI","POW","POWER","RADIANS","SIN","SINH","SQRT","TAN","TANH","TRUNC"],json:["JSON","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_ARRAY_LENGTH","JSON_EXTRACT","JSON_INSERT","JSON_OBJECT","JSON_PATCH","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_TYPE","JSON_TYPE","JSON_VALID","JSON_QUOTE","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_EACH","JSON_TREE"],cast:["CAST"],dataTypes:["CHARACTER","VARCHAR","VARYING CHARACTER","NCHAR","NATIVE CHARACTER","NVARCHAR","NUMERIC","DECIMAL"]}),fa=bi({all:["ABORT","ACTION","ADD","AFTER","ALL","ALTER","AND","ANY","ARE","ARRAY","ALWAYS","ANALYZE","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DO","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUDE","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FILTER","FIRST","FOLLOWING","FOR","FOREIGN","FROM","FULL","GENERATED","GLOB","GROUP","GROUPS","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LAST","LEFT","LIKE","LIMIT","MATCH","MATERIALIZED","NATURAL","NO","NOT","NOTHING","NOTNULL","NULL","NULLS","OF","OFFSET","ON","ONLY","OPEN","OR","ORDER","OTHERS","OUTER","OVER","PARTITION","PLAN","PRAGMA","PRECEDING","PRIMARY","QUERY","RAISE","RANGE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RETURNING","RIGHT","ROLLBACK","ROW","ROWS","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TIES","TO","TRANSACTION","TRIGGER","UNBOUNDED","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WINDOW","WITH","WITHOUT"]}),Ma=Ui(["SELECT [ALL | DISTINCT]"]),Ua=Ui(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO","REPLACE INTO","VALUES","SET","CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]"]),ha=Ui(["UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","RENAME TO","SET SCHEMA"]),va=Ui(["UNION [ALL]","EXCEPT","INTERSECT"]),ma=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Ga=Ui(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN"]),ya={tokenizerOptions:{reservedSelect:Ma,reservedClauses:[...Ua,...ha],reservedSetOperations:va,reservedJoins:ma,reservedPhrases:Ga,reservedKeywords:fa,reservedFunctionNames:da,stringTypes:["''-qq",{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``","[]"],paramTypes:{positional:!0,numbered:["?"],named:[":","@","$"]},operators:["%","~","&","|","<<",">>","==","->","->>","||"]},formatOptions:{onelineClauses:ha}},Ha=bi({set:["GROUPING"],window:["RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","ROW_NUMBER"],numeric:["POSITION","OCCURRENCES_REGEX","POSITION_REGEX","EXTRACT","CHAR_LENGTH","CHARACTER_LENGTH","OCTET_LENGTH","CARDINALITY","ABS","MOD","LN","EXP","POWER","SQRT","FLOOR","CEIL","CEILING","WIDTH_BUCKET"],string:["SUBSTRING","SUBSTRING_REGEX","UPPER","LOWER","CONVERT","TRANSLATE","TRANSLATE_REGEX","TRIM","OVERLAY","NORMALIZE","SPECIFICTYPE"],datetime:["CURRENT_DATE","CURRENT_TIME","LOCALTIME","CURRENT_TIMESTAMP","LOCALTIMESTAMP"],aggregate:["COUNT","AVG","MAX","MIN","SUM","STDDEV_POP","STDDEV_SAMP","VAR_SAMP","VAR_POP","COLLECT","FUSION","INTERSECTION","COVAR_POP","COVAR_SAMP","CORR","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","PERCENTILE_CONT","PERCENTILE_DISC"],cast:["CAST"],caseAbbrev:["COALESCE","NULLIF"],nonStandard:["ROUND","SIN","COS","TAN","ASIN","ACOS","ATAN"],dataTypes:["CHARACTER","CHAR","CHARACTER VARYING","CHAR VARYING","VARCHAR","CHARACTER LARGE OBJECT","CHAR LARGE OBJECT","CLOB","NATIONAL CHARACTER","NATIONAL CHAR","NCHAR","NATIONAL CHARACTER VARYING","NATIONAL CHAR VARYING","NCHAR VARYING","NATIONAL CHARACTER LARGE OBJECT","NCHAR LARGE OBJECT","NCLOB","BINARY","BINARY VARYING","VARBINARY","BINARY LARGE OBJECT","BLOB","NUMERIC","DECIMAL","DEC","TIME","TIMESTAMP"]}),ga=bi({all:["ALL","ALLOCATE","ALTER","ANY","ARE","ARRAY","AS","ASENSITIVE","ASYMMETRIC","AT","ATOMIC","AUTHORIZATION","BEGIN","BETWEEN","BIGINT","BINARY","BLOB","BOOLEAN","BOTH","BY","CALL","CALLED","CASCADED","CAST","CHAR","CHARACTER","CHECK","CLOB","CLOSE","COALESCE","COLLATE","COLUMN","COMMIT","CONDITION","CONNECT","CONSTRAINT","CORRESPONDING","CREATE","CROSS","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_PATH","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURSOR","CYCLE","DATE","DAY","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DELETE","DEREF","DESCRIBE","DETERMINISTIC","DISCONNECT","DISTINCT","DOUBLE","DROP","DYNAMIC","EACH","ELEMENT","END-EXEC","ESCAPE","EVERY","EXCEPT","EXEC","EXECUTE","EXISTS","EXTERNAL","FALSE","FETCH","FILTER","FLOAT","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GET","GLOBAL","GRANT","GROUP","HAVING","HOLD","HOUR","IDENTITY","IN","INDICATOR","INNER","INOUT","INSENSITIVE","INSERT","INT","INTEGER","INTERSECT","INTERVAL","INTO","IS","LANGUAGE","LARGE","LATERAL","LEADING","LEFT","LIKE","LIKE_REGEX","LOCAL","MATCH","MEMBER","MERGE","METHOD","MINUTE","MODIFIES","MODULE","MONTH","MULTISET","NATIONAL","NATURAL","NCHAR","NCLOB","NEW","NO","NONE","NOT","NULL","NULLIF","NUMERIC","OF","OLD","ON","ONLY","OPEN","ORDER","OUT","OUTER","OVER","OVERLAPS","PARAMETER","PARTITION","PRECISION","PREPARE","PRIMARY","PROCEDURE","RANGE","READS","REAL","RECURSIVE","REF","REFERENCES","REFERENCING","RELEASE","RESULT","RETURN","RETURNS","REVOKE","RIGHT","ROLLBACK","ROLLUP","ROW","ROWS","SAVEPOINT","SCOPE","SCROLL","SEARCH","SECOND","SELECT","SENSITIVE","SESSION_USER","SET","SIMILAR","SMALLINT","SOME","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","START","STATIC","SUBMULTISET","SYMMETRIC","SYSTEM","SYSTEM_USER","TABLE","TABLESAMPLE","THEN","TIME","TIMESTAMP","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSLATION","TREAT","TRIGGER","TRUE","UESCAPE","UNION","UNIQUE","UNKNOWN","UNNEST","UPDATE","USER","USING","VALUE","VALUES","VARBINARY","VARCHAR","VARYING","WHENEVER","WINDOW","WITHIN","WITHOUT","YEAR"]}),Ba=Ui(["SELECT [ALL | DISTINCT]"]),Fa=Ui(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","CREATE [RECURSIVE] VIEW","CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE"]),Ya=Ui(["UPDATE","WHERE CURRENT OF","DELETE FROM","DROP TABLE","ALTER TABLE","ADD COLUMN","DROP [COLUMN]","RENAME COLUMN","RENAME TO","ALTER [COLUMN]","{SET | DROP} DEFAULT","ADD SCOPE","DROP SCOPE {CASCADE | RESTRICT}","RESTART WITH","TRUNCATE TABLE","SET SCHEMA"]),ba=Ui(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),Va=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Wa=Ui(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),xa={tokenizerOptions:{reservedSelect:Ba,reservedClauses:[...Fa,...Ya],reservedSetOperations:ba,reservedJoins:Va,reservedPhrases:Wa,reservedKeywords:ga,reservedFunctionNames:Ha,stringTypes:[{quote:"''-qq-bs",prefixes:["N","U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``"],paramTypes:{positional:!0},operators:["||"]},formatOptions:{onelineClauses:Ya}},Qa=bi({all:["ABS","ACOS","ALL_MATCH","ANY_MATCH","APPROX_DISTINCT","APPROX_MOST_FREQUENT","APPROX_PERCENTILE","APPROX_SET","ARBITRARY","ARRAYS_OVERLAP","ARRAY_AGG","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_SORT","ARRAY_UNION","ASIN","ATAN","ATAN2","AT_TIMEZONE","AVG","BAR","BETA_CDF","BING_TILE","BING_TILES_AROUND","BING_TILE_AT","BING_TILE_COORDINATES","BING_TILE_POLYGON","BING_TILE_QUADKEY","BING_TILE_ZOOM_LEVEL","BITWISE_AND","BITWISE_AND_AGG","BITWISE_LEFT_SHIFT","BITWISE_NOT","BITWISE_OR","BITWISE_OR_AGG","BITWISE_RIGHT_SHIFT","BITWISE_RIGHT_SHIFT_ARITHMETIC","BITWISE_XOR","BIT_COUNT","BOOL_AND","BOOL_OR","CARDINALITY","CAST","CBRT","CEIL","CEILING","CHAR2HEXINT","CHECKSUM","CHR","CLASSIFY","COALESCE","CODEPOINT","COLOR","COMBINATIONS","CONCAT","CONCAT_WS","CONTAINS","CONTAINS_SEQUENCE","CONVEX_HULL_AGG","CORR","COS","COSH","COSINE_SIMILARITY","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CRC32","CUME_DIST","CURRENT_CATALOG","CURRENT_DATE","CURRENT_GROUPS","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","DATE","DATE_ADD","DATE_DIFF","DATE_FORMAT","DATE_PARSE","DATE_TRUNC","DAY","DAY_OF_MONTH","DAY_OF_WEEK","DAY_OF_YEAR","DEGREES","DENSE_RANK","DOW","DOY","E","ELEMENT_AT","EMPTY_APPROX_SET","EVALUATE_CLASSIFIER_PREDICTIONS","EVERY","EXP","EXTRACT","FEATURES","FILTER","FIRST_VALUE","FLATTEN","FLOOR","FORMAT","FORMAT_DATETIME","FORMAT_NUMBER","FROM_BASE","FROM_BASE32","FROM_BASE64","FROM_BASE64URL","FROM_BIG_ENDIAN_32","FROM_BIG_ENDIAN_64","FROM_ENCODED_POLYLINE","FROM_GEOJSON_GEOMETRY","FROM_HEX","FROM_IEEE754_32","FROM_IEEE754_64","FROM_ISO8601_DATE","FROM_ISO8601_TIMESTAMP","FROM_ISO8601_TIMESTAMP_NANOS","FROM_UNIXTIME","FROM_UNIXTIME_NANOS","FROM_UTF8","GEOMETRIC_MEAN","GEOMETRY_FROM_HADOOP_SHAPE","GEOMETRY_INVALID_REASON","GEOMETRY_NEAREST_POINTS","GEOMETRY_TO_BING_TILES","GEOMETRY_UNION","GEOMETRY_UNION_AGG","GREATEST","GREAT_CIRCLE_DISTANCE","HAMMING_DISTANCE","HASH_COUNTS","HISTOGRAM","HMAC_MD5","HMAC_SHA1","HMAC_SHA256","HMAC_SHA512","HOUR","HUMAN_READABLE_SECONDS","IF","INDEX","INFINITY","INTERSECTION_CARDINALITY","INVERSE_BETA_CDF","INVERSE_NORMAL_CDF","IS_FINITE","IS_INFINITE","IS_JSON_SCALAR","IS_NAN","JACCARD_INDEX","JSON_ARRAY_CONTAINS","JSON_ARRAY_GET","JSON_ARRAY_LENGTH","JSON_EXISTS","JSON_EXTRACT","JSON_EXTRACT_SCALAR","JSON_FORMAT","JSON_PARSE","JSON_QUERY","JSON_SIZE","JSON_VALUE","KURTOSIS","LAG","LAST_DAY_OF_MONTH","LAST_VALUE","LEAD","LEARN_CLASSIFIER","LEARN_LIBSVM_CLASSIFIER","LEARN_LIBSVM_REGRESSOR","LEARN_REGRESSOR","LEAST","LENGTH","LEVENSHTEIN_DISTANCE","LINE_INTERPOLATE_POINT","LINE_INTERPOLATE_POINTS","LINE_LOCATE_POINT","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","LUHN_CHECK","MAKE_SET_DIGEST","MAP","MAP_AGG","MAP_CONCAT","MAP_ENTRIES","MAP_FILTER","MAP_FROM_ENTRIES","MAP_KEYS","MAP_UNION","MAP_VALUES","MAP_ZIP_WITH","MAX","MAX_BY","MD5","MERGE","MERGE_SET_DIGEST","MILLISECOND","MIN","MINUTE","MIN_BY","MOD","MONTH","MULTIMAP_AGG","MULTIMAP_FROM_ENTRIES","MURMUR3","NAN","NGRAMS","NONE_MATCH","NORMALIZE","NORMAL_CDF","NOW","NTH_VALUE","NTILE","NULLIF","NUMERIC_HISTOGRAM","OBJECTID","OBJECTID_TIMESTAMP","PARSE_DATA_SIZE","PARSE_DATETIME","PARSE_DURATION","PERCENT_RANK","PI","POSITION","POW","POWER","QDIGEST_AGG","QUARTER","RADIANS","RAND","RANDOM","RANK","REDUCE","REDUCE_AGG","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGRESS","REGR_INTERCEPT","REGR_SLOPE","RENDER","REPEAT","REPLACE","REVERSE","RGB","ROUND","ROW_NUMBER","RPAD","RTRIM","SECOND","SEQUENCE","SHA1","SHA256","SHA512","SHUFFLE","SIGN","SIMPLIFY_GEOMETRY","SIN","SKEWNESS","SLICE","SOUNDEX","SPATIAL_PARTITIONING","SPATIAL_PARTITIONS","SPLIT","SPLIT_PART","SPLIT_TO_MAP","SPLIT_TO_MULTIMAP","SPOOKY_HASH_V2_32","SPOOKY_HASH_V2_64","SQRT","STARTS_WITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRPOS","ST_AREA","ST_ASBINARY","ST_ASTEXT","ST_BOUNDARY","ST_BUFFER","ST_CENTROID","ST_CONTAINS","ST_CONVEXHULL","ST_COORDDIM","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_ENDPOINT","ST_ENVELOPE","ST_ENVELOPEASPTS","ST_EQUALS","ST_EXTERIORRING","ST_GEOMETRIES","ST_GEOMETRYFROMTEXT","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMBINARY","ST_INTERIORRINGN","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISRING","ST_ISSIMPLE","ST_ISVALID","ST_LENGTH","ST_LINEFROMTEXT","ST_LINESTRING","ST_MULTIPOINT","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINT","ST_POINTN","ST_POINTS","ST_POLYGON","ST_RELATE","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_TOUCHES","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","SUBSTR","SUBSTRING","SUM","TAN","TANH","TDIGEST_AGG","TIMESTAMP_OBJECTID","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO_BASE","TO_BASE32","TO_BASE64","TO_BASE64URL","TO_BIG_ENDIAN_32","TO_BIG_ENDIAN_64","TO_CHAR","TO_DATE","TO_ENCODED_POLYLINE","TO_GEOJSON_GEOMETRY","TO_GEOMETRY","TO_HEX","TO_IEEE754_32","TO_IEEE754_64","TO_ISO8601","TO_MILLISECONDS","TO_SPHERICAL_GEOGRAPHY","TO_TIMESTAMP","TO_UNIXTIME","TO_UTF8","TRANSFORM","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRY","TRY_CAST","TYPEOF","UPPER","URL_DECODE","URL_ENCODE","URL_EXTRACT_FRAGMENT","URL_EXTRACT_HOST","URL_EXTRACT_PARAMETER","URL_EXTRACT_PATH","URL_EXTRACT_PORT","URL_EXTRACT_PROTOCOL","URL_EXTRACT_QUERY","UUID","VALUES_AT_QUANTILES","VALUE_AT_QUANTILE","VARIANCE","VAR_POP","VAR_SAMP","VERSION","WEEK","WEEK_OF_YEAR","WIDTH_BUCKET","WILSON_INTERVAL_LOWER","WILSON_INTERVAL_UPPER","WITH_TIMEZONE","WORD_STEM","XXHASH64","YEAR","YEAR_OF_WEEK","YOW","ZIP","ZIP_WITH"],rowPattern:["CLASSIFIER","FIRST","LAST","MATCH_NUMBER","NEXT","PERMUTE","PREV"]}),Xa=bi({all:["ABSENT","ADD","ADMIN","AFTER","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","AUTHORIZATION","BERNOULLI","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CATALOGS","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","CONDITIONAL","CONSTRAINT","COPARTITION","CREATE","CROSS","CUBE","CURRENT","CURRENT_PATH","CURRENT_ROLE","DATA","DEALLOCATE","DEFAULT","DEFINE","DEFINER","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DISTINCT","DISTRIBUTED","DOUBLE","DROP","ELSE","EMPTY","ENCODING","END","ERROR","ESCAPE","EXCEPT","EXCLUDING","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FINAL","FIRST","FOLLOWING","FOR","FROM","FULL","FUNCTIONS","GRANT","GRANTED","GRANTS","GRAPHVIZ","GROUP","GROUPING","GROUPS","HAVING","IGNORE","IN","INCLUDING","INITIAL","INNER","INPUT","INSERT","INTERSECT","INTERVAL","INTO","INVOKER","IO","IS","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_OBJECT","KEEP","KEY","KEYS","LAST","LATERAL","LEADING","LEFT","LEVEL","LIKE","LIMIT","LOCAL","LOGICAL","MATCH","MATCHED","MATCHES","MATCH_RECOGNIZE","MATERIALIZED","MEASURES","NATURAL","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NOT","NULL","NULLS","OBJECT","OF","OFFSET","OMIT","ON","ONE","ONLY","OPTION","OR","ORDER","ORDINALITY","OUTER","OUTPUT","OVER","OVERFLOW","PARTITION","PARTITIONS","PASSING","PAST","PATH","PATTERN","PER","PERMUTE","PRECEDING","PRECISION","PREPARE","PRIVILEGES","PROPERTIES","PRUNE","QUOTES","RANGE","READ","RECURSIVE","REFRESH","RENAME","REPEATABLE","RESET","RESPECT","RESTRICT","RETURNING","REVOKE","RIGHT","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","RUNNING","SCALAR","SCHEMA","SCHEMAS","SECURITY","SEEK","SELECT","SERIALIZABLE","SESSION","SET","SETS","SHOW","SKIP","SOME","START","STATS","STRING","SUBSET","SYSTEM","TABLE","TABLES","TABLESAMPLE","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRUE","TYPE","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNION","UNIQUE","UNKNOWN","UNMATCHED","UNNEST","UPDATE","USE","USER","USING","UTF16","UTF32","UTF8","VALIDATE","VALUE","VALUES","VERBOSE","VIEW","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","ZONE"],types:["BIGINT","INT","INTEGER","SMALLINT","TINYINT","BOOLEAN","DATE","DECIMAL","REAL","DOUBLE","HYPERLOGLOG","QDIGEST","TDIGEST","P4HYPERLOGLOG","INTERVAL","TIMESTAMP","TIME","VARBINARY","VARCHAR","CHAR","ROW","ARRAY","MAP","JSON","JSON2016","IPADDRESS","GEOMETRY","UUID","SETDIGEST","JONIREGEXP","RE2JREGEXP","LIKEPATTERN","COLOR","CODEPOINTS","FUNCTION","JSONPATH"]}),wa=Ui(["SELECT [ALL | DISTINCT]"]),Ka=Ui(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","CREATE [OR REPLACE] [MATERIALIZED] VIEW","CREATE TABLE [IF NOT EXISTS]","MATCH_RECOGNIZE","MEASURES","ONE ROW PER MATCH","ALL ROWS PER MATCH","AFTER MATCH","PATTERN","SUBSET","DEFINE"]),$a=Ui(["UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME COLUMN [IF EXISTS]","RENAME TO","SET AUTHORIZATION [USER | ROLE]","SET PROPERTIES","EXECUTE","TRUNCATE TABLE","ALTER SCHEMA","ALTER MATERIALIZED VIEW","ALTER VIEW","CREATE SCHEMA","CREATE ROLE","DROP SCHEMA","DROP MATERIALIZED VIEW","DROP VIEW","DROP ROLE","EXPLAIN","ANALYZE","EXPLAIN ANALYZE","EXPLAIN ANALYZE VERBOSE","USE","COMMENT ON TABLE","COMMENT ON COLUMN","DESCRIBE INPUT","DESCRIBE OUTPUT","REFRESH MATERIALIZED VIEW","RESET SESSION","SET SESSION","SET PATH","SET TIME ZONE","SHOW GRANTS","SHOW CREATE TABLE","SHOW CREATE SCHEMA","SHOW CREATE VIEW","SHOW CREATE MATERIALIZED VIEW","SHOW TABLES","SHOW SCHEMAS","SHOW CATALOGS","SHOW COLUMNS","SHOW STATS FOR","SHOW ROLES","SHOW CURRENT ROLES","SHOW ROLE GRANTS","SHOW FUNCTIONS","SHOW SESSION"]),ka=Ui(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),Ja=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Za=Ui(["{ROWS | RANGE | GROUPS} BETWEEN"]),qa={tokenizerOptions:{reservedSelect:wa,reservedClauses:[...Ka,...$a],reservedSetOperations:ka,reservedJoins:Ja,reservedPhrases:Za,reservedKeywords:Xa,reservedFunctionNames:Qa,extraParens:["[]","{}"],stringTypes:[{quote:"''-qq",prefixes:["U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0},operators:["%","->","=>",":","||","|","^","$"]},formatOptions:{onelineClauses:$a}},ja=bi({aggregate:["APPROX_COUNT_DISTINCT","AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","STDEV","STDEVP","SUM","VAR","VARP"],analytic:["CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","Collation - COLLATIONPROPERTY","Collation - TERTIARY_WEIGHTS"],configuration:["@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION"],conversion:["CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE"],cryptographic:["ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY"],cursor:["@@CURSOR_ROWS","@@FETCH_STATUS","CURSOR_STATUS"],dataType:["DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY"],datetime:["@@DATEFIRST","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TIMEZONE_ID","DATEADD","DATEDIFF","DATEDIFF_BIG","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","JSON","ISJSON","JSON_VALUE","JSON_QUERY","JSON_MODIFY"],mathematical:["ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","CHOOSE","GREATEST","IIF","LEAST"],metadata:["@@PROCID","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FILEPROPERTYEX","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","NEXT VALUE FOR","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY"],ranking:["DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME"],security:["CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","DATABASE_PRINCIPAL_ID","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME"],string:["ASCII","CHAR","CHARINDEX","CONCAT","CONCAT_WS","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","NCHAR","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STRING_AGG","STRING_ESCAPE","STUFF","SUBSTRING","TRANSLATE","TRIM","UNICODE","UPPER"],system:["$PARTITION","@@ERROR","@@IDENTITY","@@PACK_RECEIVED","@@ROWCOUNT","@@TRANCOUNT","BINARY_CHECKSUM","CHECKSUM","COMPRESS","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","CURRENT_TRANSACTION_ID","DECOMPRESS","ERROR_LINE","ERROR_MESSAGE","ERROR_NUMBER","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GET_FILESTREAM_TRANSACTION_CONTEXT","GETANSINULL","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","SESSION_CONTEXT","XACT_STATE"],statistical:["@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACK_SENT","@@PACKET_ERRORS","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE","TEXTPTR","TEXTVALID"],trigger:["COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE"],caseAbbrev:["COALESCE","NULLIF"],dataTypes:["DECIMAL","NUMERIC","FLOAT","REAL","DATETIME2","DATETIMEOFFSET","TIME","CHAR","VARCHAR","NCHAR","NVARCHAR","BINARY","VARBINARY"]}),za=bi({standard:["ADD","ALL","ALTER","AND","ANY","AS","ASC","AUTHORIZATION","BACKUP","BEGIN","BETWEEN","BREAK","BROWSE","BULK","BY","CASCADE","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLUMN","COMMIT","COMPUTE","CONSTRAINT","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DBCC","DEALLOCATE","DECLARE","DEFAULT","DELETE","DENY","DESC","DISK","DISTINCT","DISTRIBUTED","DOUBLE","DROP","DUMP","ERRLVL","ESCAPE","EXEC","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FILE","FILLFACTOR","FOR","FOREIGN","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GOTO","GRANT","GROUP","HAVING","HOLDLOCK","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IN","INDEX","INNER","INSERT","INTERSECT","INTO","IS","JOIN","KEY","KILL","LEFT","LIKE","LINENO","LOAD","MERGE","NATIONAL","NOCHECK","NONCLUSTERED","NOT","NULL","NULLIF","OF","OFF","OFFSETS","ON","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OUTER","OVER","PERCENT","PIVOT","PLAN","PRECISION","PRIMARY","PRINT","PROC","PROCEDURE","PUBLIC","RAISERROR","READ","READTEXT","RECONFIGURE","REFERENCES","REPLICATION","RESTORE","RESTRICT","RETURN","REVERT","REVOKE","RIGHT","ROLLBACK","ROWCOUNT","ROWGUIDCOL","RULE","SAVE","SCHEMA","SECURITYAUDIT","SELECT","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION_USER","SET","SETUSER","SHUTDOWN","SOME","STATISTICS","SYSTEM_USER","TABLE","TABLESAMPLE","TEXTSIZE","THEN","TO","TOP","TRAN","TRANSACTION","TRIGGER","TRUNCATE","TRY_CONVERT","TSEQUAL","UNION","UNIQUE","UNPIVOT","UPDATE","UPDATETEXT","USE","USER","VALUES","VARYING","VIEW","WAITFOR","WHERE","WHILE","WITH","WITHIN GROUP","WRITETEXT"],odbc:["ABSOLUTE","ACTION","ADA","ADD","ALL","ALLOCATE","ALTER","AND","ANY","ARE","AS","ASC","ASSERTION","AT","AUTHORIZATION","AVG","BEGIN","BETWEEN","BIT","BIT_LENGTH","BOTH","BY","CASCADE","CASCADED","CAST","CATALOG","CHAR","CHARACTER","CHARACTER_LENGTH","CHAR_LENGTH","CHECK","CLOSE","COALESCE","COLLATE","COLLATION","COLUMN","COMMIT","CONNECT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTINUE","CONVERT","CORRESPONDING","COUNT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATE","DAY","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DESCRIBE","DESCRIPTOR","DIAGNOSTICS","DISCONNECT","DISTINCT","DOMAIN","DOUBLE","DROP","END-EXEC","ESCAPE","EXCEPTION","EXEC","EXECUTE","EXISTS","EXTERNAL","EXTRACT","FALSE","FETCH","FIRST","FLOAT","FOR","FOREIGN","FORTRAN","FOUND","FROM","FULL","GET","GLOBAL","GO","GOTO","GRANT","GROUP","HAVING","HOUR","IDENTITY","IMMEDIATE","IN","INCLUDE","INDEX","INDICATOR","INITIALLY","INNER","INPUT","INSENSITIVE","INSERT","INT","INTEGER","INTERSECT","INTERVAL","INTO","IS","ISOLATION","JOIN","KEY","LANGUAGE","LAST","LEADING","LEFT","LEVEL","LIKE","LOCAL","LOWER","MATCH","MAX","MIN","MINUTE","MODULE","MONTH","NAMES","NATIONAL","NATURAL","NCHAR","NEXT","NO","NONE","NOT","NULL","NULLIF","NUMERIC","OCTET_LENGTH","OF","ONLY","OPEN","OPTION","OR","ORDER","OUTER","OUTPUT","OVERLAPS","PAD","PARTIAL","PASCAL","POSITION","PRECISION","PREPARE","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURE","PUBLIC","READ","REAL","REFERENCES","RELATIVE","RESTRICT","REVOKE","RIGHT","ROLLBACK","ROWS","SCHEMA","SCROLL","SECOND","SECTION","SELECT","SESSION","SESSION_USER","SET","SIZE","SMALLINT","SOME","SPACE","SQL","SQLCA","SQLCODE","SQLERROR","SQLSTATE","SQLWARNING","SUBSTRING","SUM","SYSTEM_USER","TABLE","TEMPORARY","TIME","TIMESTAMP","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSACTION","TRANSLATE","TRANSLATION","TRIM","TRUE","UNION","UNIQUE","UNKNOWN","UPDATE","UPPER","USAGE","USER","VALUE","VALUES","VARCHAR","VARYING","VIEW","WHENEVER","WHERE","WITH","WORK","WRITE","YEAR","ZONE"]}),eo=Ui(["SELECT [ALL | DISTINCT]"]),Eo=Ui(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","OFFSET","FETCH {FIRST | NEXT}","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]","UPDATE SET","CREATE [OR ALTER] [MATERIALIZED] VIEW","CREATE TABLE"]),to=Ui(["UPDATE","WHERE CURRENT OF","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD","DROP COLUMN [IF EXISTS]","ALTER COLUMN","TRUNCATE TABLE","ADD SENSITIVITY CLASSIFICATION","ADD SIGNATURE","AGGREGATE","ANSI_DEFAULTS","ANSI_NULLS","ANSI_NULL_DFLT_OFF","ANSI_NULL_DFLT_ON","ANSI_PADDING","ANSI_WARNINGS","APPLICATION ROLE","ARITHABORT","ARITHIGNORE","ASSEMBLY","ASYMMETRIC KEY","AUTHORIZATION","AVAILABILITY GROUP","BACKUP","BACKUP CERTIFICATE","BACKUP MASTER KEY","BACKUP SERVICE MASTER KEY","BEGIN CONVERSATION TIMER","BEGIN DIALOG CONVERSATION","BROKER PRIORITY","BULK INSERT","CERTIFICATE","CLOSE MASTER KEY","CLOSE SYMMETRIC KEY","COLLATE","COLUMN ENCRYPTION KEY","COLUMN MASTER KEY","COLUMNSTORE INDEX","CONCAT_NULL_YIELDS_NULL","CONTEXT_INFO","CONTRACT","CREDENTIAL","CRYPTOGRAPHIC PROVIDER","CURSOR_CLOSE_ON_COMMIT","DATABASE","DATABASE AUDIT SPECIFICATION","DATABASE ENCRYPTION KEY","DATABASE HADR","DATABASE SCOPED CONFIGURATION","DATABASE SCOPED CREDENTIAL","DATABASE SET","DATEFIRST","DATEFORMAT","DEADLOCK_PRIORITY","DENY","DENY XML","DISABLE TRIGGER","ENABLE TRIGGER","END CONVERSATION","ENDPOINT","EVENT NOTIFICATION","EVENT SESSION","EXECUTE AS","EXTERNAL DATA SOURCE","EXTERNAL FILE FORMAT","EXTERNAL LANGUAGE","EXTERNAL LIBRARY","EXTERNAL RESOURCE POOL","EXTERNAL TABLE","FIPS_FLAGGER","FMTONLY","FORCEPLAN","FULLTEXT CATALOG","FULLTEXT INDEX","FULLTEXT STOPLIST","FUNCTION","GET CONVERSATION GROUP","GET_TRANSMISSION_STATUS","GRANT","GRANT XML","IDENTITY_INSERT","IMPLICIT_TRANSACTIONS","INDEX","LANGUAGE","LOCK_TIMEOUT","LOGIN","MASTER KEY","MESSAGE TYPE","MOVE CONVERSATION","NOCOUNT","NOEXEC","NUMERIC_ROUNDABORT","OFFSETS","OPEN MASTER KEY","OPEN SYMMETRIC KEY","PARSEONLY","PARTITION FUNCTION","PARTITION SCHEME","PROCEDURE","QUERY_GOVERNOR_COST_LIMIT","QUEUE","QUOTED_IDENTIFIER","RECEIVE","REMOTE SERVICE BINDING","REMOTE_PROC_TRANSACTIONS","RESOURCE GOVERNOR","RESOURCE POOL","RESTORE","RESTORE FILELISTONLY","RESTORE HEADERONLY","RESTORE LABELONLY","RESTORE MASTER KEY","RESTORE REWINDONLY","RESTORE SERVICE MASTER KEY","RESTORE VERIFYONLY","REVERT","REVOKE","REVOKE XML","ROLE","ROUTE","ROWCOUNT","RULE","SCHEMA","SEARCH PROPERTY LIST","SECURITY POLICY","SELECTIVE XML INDEX","SEND","SENSITIVITY CLASSIFICATION","SEQUENCE","SERVER AUDIT","SERVER AUDIT SPECIFICATION","SERVER CONFIGURATION","SERVER ROLE","SERVICE","SERVICE MASTER KEY","SETUSER","SHOWPLAN_ALL","SHOWPLAN_TEXT","SHOWPLAN_XML","SIGNATURE","SPATIAL INDEX","STATISTICS","STATISTICS IO","STATISTICS PROFILE","STATISTICS TIME","STATISTICS XML","SYMMETRIC KEY","SYNONYM","TABLE","TABLE IDENTITY","TEXTSIZE","TRANSACTION ISOLATION LEVEL","TRIGGER","TYPE","UPDATE STATISTICS","USER","WORKLOAD GROUP","XACT_ABORT","XML INDEX","XML SCHEMA COLLECTION"]),To=Ui(["UNION [ALL]","EXCEPT","INTERSECT"]),ro=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{CROSS | OUTER} APPLY"]),no=Ui(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),so={tokenizerOptions:{reservedSelect:eo,reservedClauses:[...Eo,...to],reservedSetOperations:To,reservedJoins:ro,reservedPhrases:no,reservedKeywords:za,reservedFunctionNames:ja,nestedBlockComments:!0,stringTypes:[{quote:"''-qq",prefixes:["N"]}],identTypes:['""-qq',"[]"],identChars:{first:"#@",rest:"#@$"},paramTypes:{named:["@"],quoted:["@"]},operators:["%","&","|","^","~","!<","!>","+=","-=","*=","/=","%=","|=","&=","^=","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:to}},Ro=bi({all:["ABORT","ABSOLUTE","ACCESS","ACCESSIBLE","ACCOUNT","ACTION","ACTIVE","ADD","ADMIN","AFTER","AGAINST","AGGREGATE","AGGREGATES","AGGREGATOR","AGGREGATOR_ID","AGGREGATOR_PLAN_HASH","AGGREGATORS","ALGORITHM","ALL","ALSO","ALTER","ALWAYS","ANALYZE","AND","ANY","ARGHISTORY","ARRANGE","ARRANGEMENT","ARRAY","AS","ASC","ASCII","ASENSITIVE","ASM","ASSERTION","ASSIGNMENT","AST","ASYMMETRIC","ASYNC","AT","ATTACH","ATTRIBUTE","AUTHORIZATION","AUTO","AUTO_INCREMENT","AUTO_REPROVISION","AUTOSTATS","AUTOSTATS_CARDINALITY_MODE","AUTOSTATS_ENABLED","AUTOSTATS_HISTOGRAM_MODE","AUTOSTATS_SAMPLING","AVAILABILITY","AVG","AVG_ROW_LENGTH","AVRO","AZURE","BACKGROUND","_BACKGROUND_THREADS_FOR_CLEANUP","BACKUP","BACKUP_HISTORY","BACKUP_ID","BACKWARD","BATCH","BATCHES","BATCH_INTERVAL","_BATCH_SIZE_LIMIT","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","_BINARY","BIT","BLOB","BOOL","BOOLEAN","BOOTSTRAP","BOTH","_BT","BTREE","BUCKET_COUNT","BUCKETS","BY","BYTE","BYTE_LENGTH","CACHE","CALL","CALL_FOR_PIPELINE","CALLED","CAPTURE","CASCADE","CASCADED","CASE","CATALOG","CHAIN","CHANGE","CHAR","CHARACTER","CHARACTERISTICS","CHARSET","CHECK","CHECKPOINT","_CHECK_CAN_CONNECT","_CHECK_CONSISTENCY","CHECKSUM","_CHECKSUM","CLASS","CLEAR","CLIENT","CLIENT_FOUND_ROWS","CLOSE","CLUSTER","CLUSTERED","CNF","COALESCE","COLLATE","COLLATION","COLUMN","COLUMNAR","COLUMNS","COLUMNSTORE","COLUMNSTORE_SEGMENT_ROWS","COMMENT","COMMENTS","COMMIT","COMMITTED","_COMMIT_LOG_TAIL","COMPACT","COMPILE","COMPRESSED","COMPRESSION","CONCURRENT","CONCURRENTLY","CONDITION","CONFIGURATION","CONNECTION","CONNECTIONS","CONFIG","CONSTRAINT","CONTAINS","CONTENT","CONTINUE","_CONTINUE_REPLAY","CONVERSION","CONVERT","COPY","_CORE","COST","CREATE","CREDENTIALS","CROSS","CUBE","CSV","CUME_DIST","CURRENT","CURRENT_CATALOG","CURRENT_DATE","CURRENT_SCHEMA","CURRENT_SECURITY_GROUPS","CURRENT_SECURITY_ROLES","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATABASES","DATE","DATETIME","DAY","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFAULTS","DEFERRABLE","DEFERRED","DEFINED","DEFINER","DELAYED","DELAY_KEY_WRITE","DELETE","DELIMITER","DELIMITERS","DENSE_RANK","DESC","DESCRIBE","DETACH","DETERMINISTIC","DICTIONARY","DIFFERENTIAL","DIRECTORY","DISABLE","DISCARD","_DISCONNECT","DISK","DISTINCT","DISTINCTROW","DISTRIBUTED_JOINS","DIV","DO","DOCUMENT","DOMAIN","DOUBLE","DROP","_DROP_PROFILE","DUAL","DUMP","DUPLICATE","DURABILITY","DYNAMIC","EARLIEST","EACH","ECHO","ELECTION","ELSE","ELSEIF","ENABLE","ENCLOSED","ENCODING","ENCRYPTED","END","ENGINE","ENGINES","ENUM","ERRORS","ESCAPE","ESCAPED","ESTIMATE","EVENT","EVENTS","EXCEPT","EXCLUDE","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTENDED","EXTENSION","EXTERNAL","EXTERNAL_HOST","EXTERNAL_PORT","EXTRACTOR","EXTRACTORS","EXTRA_JOIN","_FAILOVER","FAILED_LOGIN_ATTEMPTS","FAILURE","FALSE","FAMILY","FAULT","FETCH","FIELDS","FILE","FILES","FILL","FIX_ALTER","FIXED","FLOAT","FLOAT4","FLOAT8","FLUSH","FOLLOWING","FOR","FORCE","FORCE_COMPILED_MODE","FORCE_INTERPRETER_MODE","FOREGROUND","FOREIGN","FORMAT","FORWARD","FREEZE","FROM","FS","_FSYNC","FULL","FULLTEXT","FUNCTION","FUNCTIONS","GC","GCS","GET_FORMAT","_GC","_GCX","GENERATE","GEOGRAPHY","GEOGRAPHYPOINT","GEOMETRY","GEOMETRYPOINT","GLOBAL","_GLOBAL_VERSION_TIMESTAMP","GRANT","GRANTED","GRANTS","GROUP","GROUPING","GROUPS","GZIP","HANDLE","HANDLER","HARD_CPU_LIMIT_PERCENTAGE","HASH","HAS_TEMP_TABLES","HAVING","HDFS","HEADER","HEARTBEAT_NO_LOGGING","HIGH_PRIORITY","HISTOGRAM","HOLD","HOLDING","HOST","HOSTS","HOUR","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IDENTIFIED","IDENTITY","IF","IGNORE","ILIKE","IMMEDIATE","IMMUTABLE","IMPLICIT","IMPORT","IN","INCLUDING","INCREMENT","INCREMENTAL","INDEX","INDEXES","INFILE","INHERIT","INHERITS","_INIT_PROFILE","INIT","INITIALIZE","INITIALLY","INJECT","INLINE","INNER","INOUT","INPUT","INSENSITIVE","INSERT","INSERT_METHOD","INSTANCE","INSTEAD","IN","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","_INTERNAL_DYNAMIC_TYPECAST","INTERPRETER_MODE","INTERSECT","INTERVAL","INTO","INVOKER","ISOLATION","ITERATE","JOIN","JSON","KAFKA","KEY","KEY_BLOCK_SIZE","KEYS","KILL","KILLALL","LABEL","LAG","LANGUAGE","LARGE","LAST","LAST_VALUE","LATERAL","LATEST","LC_COLLATE","LC_CTYPE","LEAD","LEADING","LEAF","LEAKPROOF","LEAVE","LEAVES","LEFT","LEVEL","LICENSE","LIKE","LIMIT","LINES","LISTEN","LLVM","LOADDATA_WHERE","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCK","LONG","LONGBLOB","LONGTEXT","LOOP","LOW_PRIORITY","_LS","LZ4","MANAGEMENT","_MANAGEMENT_THREAD","MAPPING","MASTER","MATCH","MATERIALIZED","MAXVALUE","MAX_CONCURRENCY","MAX_ERRORS","MAX_PARTITIONS_PER_BATCH","MAX_QUEUE_DEPTH","MAX_RETRIES_PER_BATCH_PARTITION","MAX_ROWS","MBC","MPL","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MEMBER","MEMORY","MEMORY_PERCENTAGE","_MEMSQL_TABLE_ID_LOOKUP","MEMSQL","MEMSQL_DESERIALIZE","MEMSQL_IMITATING_KAFKA","MEMSQL_SERIALIZE","MERGE","METADATA","MICROSECOND","MIDDLEINT","MIN_ROWS","MINUS","MINUTE_MICROSECOND","MINUTE_SECOND","MINVALUE","MOD","MODE","MODEL","MODIFIES","MODIFY","MONTH","MOVE","MPL","NAMES","NAMED","NAMESPACE","NATIONAL","NATURAL","NCHAR","NEXT","NO","NODE","NONE","NO_QUERY_REWRITE","NOPARAM","NOT","NOTHING","NOTIFY","NOWAIT","NO_WRITE_TO_BINLOG","NO_QUERY_REWRITE","NORELY","NTH_VALUE","NTILE","NULL","NULLCOLS","NULLS","NUMERIC","NVARCHAR","OBJECT","OF","OFF","OFFLINE","OFFSET","OFFSETS","OIDS","ON","ONLINE","ONLY","OPEN","OPERATOR","OPTIMIZATION","OPTIMIZE","OPTIMIZER","OPTIMIZER_STATE","OPTION","OPTIONS","OPTIONALLY","OR","ORDER","ORDERED_SERIALIZE","ORPHAN","OUT","OUT_OF_ORDER","OUTER","OUTFILE","OVER","OVERLAPS","OVERLAY","OWNED","OWNER","PACK_KEYS","PAIRED","PARSER","PARQUET","PARTIAL","PARTITION","PARTITION_ID","PARTITIONING","PARTITIONS","PASSING","PASSWORD","PASSWORD_LOCK_TIME","PAUSE","_PAUSE_REPLAY","PERIODIC","PERSISTED","PIPELINE","PIPELINES","PLACING","PLAN","PLANS","PLANCACHE","PLUGINS","POOL","POOLS","PORT","PRECEDING","PRECISION","PREPARE","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURAL","PROCEDURE","PROCEDURES","PROCESS","PROCESSLIST","PROFILE","PROFILES","PROGRAM","PROMOTE","PROXY","PURGE","QUARTER","QUERIES","QUERY","QUERY_TIMEOUT","QUEUE","RANGE","RANK","READ","_READ","READS","REAL","REASSIGN","REBALANCE","RECHECK","RECORD","RECURSIVE","REDUNDANCY","REDUNDANT","REF","REFERENCE","REFERENCES","REFRESH","REGEXP","REINDEX","RELATIVE","RELEASE","RELOAD","RELY","REMOTE","REMOVE","RENAME","REPAIR","_REPAIR_TABLE","REPEAT","REPEATABLE","_REPL","_REPROVISIONING","REPLACE","REPLICA","REPLICATE","REPLICATING","REPLICATION","REQUIRE","RESOURCE","RESOURCE_POOL","RESET","RESTART","RESTORE","RESTRICT","RESULT","_RESURRECT","RETRY","RETURN","RETURNING","RETURNS","REVERSE","RG_POOL","REVOKE","RIGHT","RIGHT_ANTI_JOIN","RIGHT_SEMI_JOIN","RIGHT_STRAIGHT_JOIN","RLIKE","ROLES","ROLLBACK","ROLLUP","ROUTINE","ROW","ROW_COUNT","ROW_FORMAT","ROW_NUMBER","ROWS","ROWSTORE","RULE","_RPC","RUNNING","S3","SAFE","SAVE","SAVEPOINT","SCALAR","SCHEMA","SCHEMAS","SCHEMA_BINDING","SCROLL","SEARCH","SECOND","SECOND_MICROSECOND","SECURITY","SELECT","SEMI_JOIN","_SEND_THREADS","SENSITIVE","SEPARATOR","SEQUENCE","SEQUENCES","SERIAL","SERIALIZABLE","SERIES","SERVICE_USER","SERVER","SESSION","SESSION_USER","SET","SETOF","SECURITY_LISTS_INTERSECT","SHA","SHARD","SHARDED","SHARDED_ID","SHARE","SHOW","SHUTDOWN","SIGNAL","SIGNED","SIMILAR","SIMPLE","SITE","SKIP","SKIPPED_BATCHES","__SLEEP","SMALLINT","SNAPSHOT","_SNAPSHOT","_SNAPSHOTS","SOFT_CPU_LIMIT_PERCENTAGE","SOME","SONAME","SPARSE","SPATIAL","SPATIAL_CHECK_INDEX","SPECIFIC","SQL","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQLEXCEPTION","SQL_MODE","SQL_NO_CACHE","SQL_NO_LOGGING","SQL_SMALL_RESULT","SQLSTATE","SQLWARNING","STDIN","STDOUT","STOP","STORAGE","STRAIGHT_JOIN","STRICT","STRING","STRIP","SUCCESS","SUPER","SYMMETRIC","SYNC_SNAPSHOT","SYNC","_SYNC","_SYNC2","_SYNC_PARTITIONS","_SYNC_SNAPSHOT","SYNCHRONIZE","SYSID","SYSTEM","TABLE","TABLE_CHECKSUM","TABLES","TABLESPACE","TAGS","TARGET_SIZE","TASK","TEMP","TEMPLATE","TEMPORARY","TEMPTABLE","_TERM_BUMP","TERMINATE","TERMINATED","TEXT","THEN","TIME","TIMEOUT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIMEZONE","TINYBLOB","TINYINT","TINYTEXT","TO","TRACELOGS","TRADITIONAL","TRAILING","TRANSFORM","TRANSACTION","_TRANSACTIONS_EXPERIMENTAL","TREAT","TRIGGER","TRIGGERS","TRUE","TRUNC","TRUNCATE","TRUSTED","TWO_PHASE","_TWOPCID","TYPE","TYPES","UNBOUNDED","UNCOMMITTED","UNDEFINED","UNDO","UNENCRYPTED","UNENFORCED","UNHOLD","UNICODE","UNION","UNIQUE","_UNITTEST","UNKNOWN","UNLISTEN","_UNLOAD","UNLOCK","UNLOGGED","UNPIVOT","UNSIGNED","UNTIL","UPDATE","UPGRADE","USAGE","USE","USER","USERS","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","_UTF8","VACUUM","VALID","VALIDATE","VALIDATOR","VALUE","VALUES","VARBINARY","VARCHAR","VARCHARACTER","VARIABLES","VARIADIC","VARYING","VERBOSE","VIEW","VOID","VOLATILE","VOTING","WAIT","_WAKE","WARNINGS","WEEK","WHEN","WHERE","WHILE","WHITESPACE","WINDOW","WITH","WITHOUT","WITHIN","_WM_HEARTBEAT","WORK","WORKLOAD","WRAPPER","WRITE","XACT_ID","XOR","YEAR","YEAR_MONTH","YES","ZEROFILL","ZONE"]}),io=bi({all:["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_COUNT_DISTINCT_ACCUMULATE","APPROX_COUNT_DISTINCT_COMBINE","APPROX_COUNT_DISTINCT_ESTIMATE","APPROX_GEOGRAPHY_INTERSECTS","APPROX_PERCENTILE","ASCII","ASIN","ATAN","ATAN2","AVG","BIN","BINARY","BIT_AND","BIT_COUNT","BIT_OR","BIT_XOR","CAST","CEIL","CEILING","CHAR","CHARACTER_LENGTH","CHAR_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COLLECT","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATEDIFF","DATE_FORMAT","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT","DEGREES","DENSE_RANK","DIV","DOT_PRODUCT","ELT","EUCLIDEAN_DISTANCE","EXP","EXTRACT","FIELD","FIRST","FIRST_VALUE","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOGRAPHY_AREA","GEOGRAPHY_CONTAINS","GEOGRAPHY_DISTANCE","GEOGRAPHY_INTERSECTS","GEOGRAPHY_LATITUDE","GEOGRAPHY_LENGTH","GEOGRAPHY_LONGITUDE","GEOGRAPHY_POINT","GEOGRAPHY_WITHIN_DISTANCE","GEOMETRY_AREA","GEOMETRY_CONTAINS","GEOMETRY_DISTANCE","GEOMETRY_FILTER","GEOMETRY_INTERSECTS","GEOMETRY_LENGTH","GEOMETRY_POINT","GEOMETRY_WITHIN_DISTANCE","GEOMETRY_X","GEOMETRY_Y","GREATEST","GROUPING","GROUP_CONCAT","HEX","HIGHLIGHT","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INITCAP","INSERT","INSTR","INTERVAL","IS","IS NULL","JSON_AGG","JSON_ARRAY_CONTAINS_DOUBLE","JSON_ARRAY_CONTAINS_JSON","JSON_ARRAY_CONTAINS_STRING","JSON_ARRAY_PUSH_DOUBLE","JSON_ARRAY_PUSH_JSON","JSON_ARRAY_PUSH_STRING","JSON_DELETE_KEY","JSON_EXTRACT_DOUBLE","JSON_EXTRACT_JSON","JSON_EXTRACT_STRING","JSON_EXTRACT_BIGINT","JSON_GET_TYPE","JSON_LENGTH","JSON_SET_DOUBLE","JSON_SET_JSON","JSON_SET_STRING","JSON_SPLICE_DOUBLE","JSON_SPLICE_JSON","JSON_SPLICE_STRING","LAG","LAST_DAY","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LN","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LPAD","LTRIM","MATCH","MAX","MD5","MEDIAN","MICROSECOND","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","NOT","NOW","NTH_VALUE","NTILE","NULLIF","OCTET_LENGTH","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIVOT","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANK","REGEXP","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCALAR","SCHEMA","SEC_TO_TIME","SHA1","SHA2","SIGMOID","SIGN","SIN","SLEEP","SPLIT","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUM","SYS_GUID","TAN","TIME","TIMEDIFF","TIME_BUCKET","TIME_FORMAT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_JSON","TO_NUMBER","TO_SECONDS","TO_TIMESTAMP","TRIM","TRUNC","TRUNCATE","UCASE","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","USER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","VALUES","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_SUB","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","YEAR","BIT","TINYINT","SMALLINT","MEDIUMINT","INT","INTEGER","BIGINT","DECIMAL","DEC","NUMERIC","FIXED","FLOAT","DOUBLE","DOUBLE PRECISION","REAL","DATETIME","TIMESTAMP","TIME","YEAR","CHAR","NATIONAL CHAR","VARCHAR","NATIONAL VARCHAR","BINARY","VARBINARY","BLOB","TEXT","ENUM"]}),Ao=Ui(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),ao=Ui(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [IGNORE] [INTO]","VALUES","REPLACE [INTO]","SET","CREATE VIEW","CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] [EXTERNAL] FUNCTION"]),oo=Ui(["UPDATE","DELETE [FROM]","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] TABLE","ADD [COLUMN]","ADD [UNIQUE] {INDEX | KEY}","DROP [COLUMN]","MODIFY [COLUMN]","CHANGE","RENAME [TO | AS]","TRUNCATE [TABLE]","ADD AGGREGATOR","ADD LEAF","AGGREGATOR SET AS MASTER","ALTER DATABASE","ALTER PIPELINE","ALTER RESOURCE POOL","ALTER USER","ALTER VIEW","ANALYZE TABLE","ATTACH DATABASE","ATTACH LEAF","ATTACH LEAF ALL","BACKUP DATABASE","BINLOG","BOOTSTRAP AGGREGATOR","CACHE INDEX","CALL","CHANGE","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK BLOB CHECKSUM","CHECK TABLE","CHECKSUM TABLE","CLEAR ORPHAN DATABASES","CLONE","COMMIT","CREATE DATABASE","CREATE GROUP","CREATE INDEX","CREATE LINK","CREATE MILESTONE","CREATE PIPELINE","CREATE RESOURCE POOL","CREATE ROLE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DETACH DATABASE","DETACH PIPELINE","DO","DROP DATABASE","DROP FUNCTION","DROP INDEX","DROP LINK","DROP PIPELINE","DROP PROCEDURE","DROP RESOURCE POOL","DROP ROLE","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","FORCE","GRANT","HANDLER","HELP","KILL CONNECTION","KILLALL QUERIES","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","REBALANCE PARTITIONS","RELEASE SAVEPOINT","REMOVE AGGREGATOR","REMOVE LEAF","REPAIR TABLE","REPLACE","REPLICATE DATABASE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","RESTORE DATABASE","RESTORE REDUNDANCY","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE FUNCTION","SHOW CREATE PIPELINE","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SNAPSHOT DATABASE","SOURCE_POS_WAIT","START GROUP_REPLICATION","START PIPELINE","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP PIPELINE","STOP REPLICA","STOP REPLICATING","STOP SLAVE","TEST PIPELINE","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),So=Ui(["UNION [ALL | DISTINCT]","EXCEPT","INTERSECT","MINUS"]),Io=Ui(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),Oo=Ui(["ON DELETE","ON UPDATE","CHARACTER SET","{ROWS | RANGE} BETWEEN"]),No={tokenizerOptions:{reservedSelect:Ao,reservedClauses:[...ao,...oo],reservedSetOperations:So,reservedJoins:Io,reservedPhrases:Oo,reservedKeywords:Ro,reservedFunctionNames:io,stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_$]+"},{quote:"``",prefixes:["@"],requirePrefix:!0}],lineCommentTypes:["--","#"],operators:[":=","&","|","^","~","<<",">>","<=>","&&","||","::","::$","::%",":>","!:>"],postProcess:function(e){return e.map(((E,t)=>{const T=e[t+1]||Pi;return fi.SET(E)&&"("===T.text?{...E,type:pi.RESERVED_FUNCTION_NAME}:E}))}},formatOptions:{alwaysDenseOperators:["::","::$","::%"],onelineClauses:oo}};const Lo=bi({all:["ABS","ACOS","ACOSH","ADD_MONTHS","ALL_USER_NAMES","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","APPROX_PERCENTILE_ACCUMULATE","APPROX_PERCENTILE_COMBINE","APPROX_PERCENTILE_ESTIMATE","APPROX_TOP_K","APPROX_TOP_K_ACCUMULATE","APPROX_TOP_K_COMBINE","APPROX_TOP_K_ESTIMATE","APPROXIMATE_JACCARD_INDEX","APPROXIMATE_SIMILARITY","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_COMPACT","ARRAY_CONSTRUCT","ARRAY_CONSTRUCT_COMPACT","ARRAY_CONTAINS","ARRAY_INSERT","ARRAY_INTERSECTION","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_SIZE","ARRAY_SLICE","ARRAY_TO_STRING","ARRAY_UNION_AGG","ARRAY_UNIQUE_AGG","ARRAYS_OVERLAP","AS_ARRAY","AS_BINARY","AS_BOOLEAN","AS_CHAR","AS_VARCHAR","AS_DATE","AS_DECIMAL","AS_NUMBER","AS_DOUBLE","AS_REAL","AS_INTEGER","AS_OBJECT","AS_TIME","AS_TIMESTAMP_LTZ","AS_TIMESTAMP_NTZ","AS_TIMESTAMP_TZ","ASCII","ASIN","ASINH","ATAN","ATAN2","ATANH","AUTO_REFRESH_REGISTRATION_HISTORY","AUTOMATIC_CLUSTERING_HISTORY","AVG","BASE64_DECODE_BINARY","BASE64_DECODE_STRING","BASE64_ENCODE","BIT_LENGTH","BITAND","BITAND_AGG","BITMAP_BIT_POSITION","BITMAP_BUCKET_NUMBER","BITMAP_CONSTRUCT_AGG","BITMAP_COUNT","BITMAP_OR_AGG","BITNOT","BITOR","BITOR_AGG","BITSHIFTLEFT","BITSHIFTRIGHT","BITXOR","BITXOR_AGG","BOOLAND","BOOLAND_AGG","BOOLNOT","BOOLOR","BOOLOR_AGG","BOOLXOR","BOOLXOR_AGG","BUILD_SCOPED_FILE_URL","BUILD_STAGE_FILE_URL","CASE","CAST","CBRT","CEIL","CHARINDEX","CHECK_JSON","CHECK_XML","CHR","CHAR","COALESCE","COLLATE","COLLATION","COMPLETE_TASK_GRAPHS","COMPRESS","CONCAT","CONCAT_WS","CONDITIONAL_CHANGE_EVENT","CONDITIONAL_TRUE_EVENT","CONTAINS","CONVERT_TIMEZONE","COPY_HISTORY","CORR","COS","COSH","COT","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CUME_DIST","CURRENT_ACCOUNT","CURRENT_AVAILABLE_ROLES","CURRENT_CLIENT","CURRENT_DATABASE","CURRENT_DATE","CURRENT_IP_ADDRESS","CURRENT_REGION","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SECONDARY_ROLES","CURRENT_SESSION","CURRENT_STATEMENT","CURRENT_TASK_GRAPHS","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TRANSACTION","CURRENT_USER","CURRENT_VERSION","CURRENT_WAREHOUSE","DATA_TRANSFER_HISTORY","DATABASE_REFRESH_HISTORY","DATABASE_REFRESH_PROGRESS","DATABASE_REFRESH_PROGRESS_BY_JOB","DATABASE_STORAGE_USAGE_HISTORY","DATE_FROM_PARTS","DATE_PART","DATE_TRUNC","DATEADD","DATEDIFF","DAYNAME","DECODE","DECOMPRESS_BINARY","DECOMPRESS_STRING","DECRYPT","DECRYPT_RAW","DEGREES","DENSE_RANK","DIV0","EDITDISTANCE","ENCRYPT","ENCRYPT_RAW","ENDSWITH","EQUAL_NULL","EXP","EXPLAIN_JSON","EXTERNAL_FUNCTIONS_HISTORY","EXTERNAL_TABLE_FILES","EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY","EXTRACT","EXTRACT_SEMANTIC_CATEGORIES","FACTORIAL","FIRST_VALUE","FLATTEN","FLOOR","GENERATE_COLUMN_DESCRIPTION","GENERATOR","GET","GET_ABSOLUTE_PATH","GET_DDL","GET_IGNORE_CASE","GET_OBJECT_REFERENCES","GET_PATH","GET_PRESIGNED_URL","GET_RELATIVE_PATH","GET_STAGE_LOCATION","GETBIT","GREATEST","GROUPING","GROUPING_ID","HASH","HASH_AGG","HAVERSINE","HEX_DECODE_BINARY","HEX_DECODE_STRING","HEX_ENCODE","HLL","HLL_ACCUMULATE","HLL_COMBINE","HLL_ESTIMATE","HLL_EXPORT","HLL_IMPORT","HOUR","MINUTE","SECOND","IFF","IFNULL","ILIKE","ILIKE ANY","INFER_SCHEMA","INITCAP","INSERT","INVOKER_ROLE","INVOKER_SHARE","IS_ARRAY","IS_BINARY","IS_BOOLEAN","IS_CHAR","IS_VARCHAR","IS_DATE","IS_DATE_VALUE","IS_DECIMAL","IS_DOUBLE","IS_REAL","IS_GRANTED_TO_INVOKER_ROLE","IS_INTEGER","IS_NULL_VALUE","IS_OBJECT","IS_ROLE_IN_SESSION","IS_TIME","IS_TIMESTAMP_LTZ","IS_TIMESTAMP_NTZ","IS_TIMESTAMP_TZ","JAROWINKLER_SIMILARITY","JSON_EXTRACT_PATH_TEXT","KURTOSIS","LAG","LAST_DAY","LAST_QUERY_ID","LAST_TRANSACTION","LAST_VALUE","LEAD","LEAST","LEFT","LENGTH","LEN","LIKE","LIKE ALL","LIKE ANY","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOGIN_HISTORY","LOGIN_HISTORY_BY_USER","LOWER","LPAD","LTRIM","MATERIALIZED_VIEW_REFRESH_HISTORY","MD5","MD5_HEX","MD5_BINARY","MD5_NUMBER — Obsoleted","MD5_NUMBER_LOWER64","MD5_NUMBER_UPPER64","MEDIAN","MIN","MAX","MINHASH","MINHASH_COMBINE","MOD","MODE","MONTHNAME","MONTHS_BETWEEN","NEXT_DAY","NORMAL","NTH_VALUE","NTILE","NULLIF","NULLIFZERO","NVL","NVL2","OBJECT_AGG","OBJECT_CONSTRUCT","OBJECT_CONSTRUCT_KEEP_NULL","OBJECT_DELETE","OBJECT_INSERT","OBJECT_KEYS","OBJECT_PICK","OCTET_LENGTH","PARSE_IP","PARSE_JSON","PARSE_URL","PARSE_XML","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIPE_USAGE_HISTORY","POLICY_CONTEXT","POLICY_REFERENCES","POSITION","POW","POWER","PREVIOUS_DAY","QUERY_ACCELERATION_HISTORY","QUERY_HISTORY","QUERY_HISTORY_BY_SESSION","QUERY_HISTORY_BY_USER","QUERY_HISTORY_BY_WAREHOUSE","RADIANS","RANDOM","RANDSTR","RANK","RATIO_TO_REPORT","REGEXP","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REGEXP_SUBSTR_ALL","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REGR_VALX","REGR_VALY","REPEAT","REPLACE","REPLICATION_GROUP_REFRESH_HISTORY","REPLICATION_GROUP_REFRESH_PROGRESS","REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB","REPLICATION_GROUP_USAGE_HISTORY","REPLICATION_USAGE_HISTORY","REST_EVENT_HISTORY","RESULT_SCAN","REVERSE","RIGHT","RLIKE","ROUND","ROW_NUMBER","RPAD","RTRIM","RTRIMMED_LENGTH","SEARCH_OPTIMIZATION_HISTORY","SEQ1","SEQ2","SEQ4","SEQ8","SERVERLESS_TASK_HISTORY","SHA1","SHA1_HEX","SHA1_BINARY","SHA2","SHA2_HEX","SHA2_BINARY","SIGN","SIN","SINH","SKEW","SOUNDEX","SPACE","SPLIT","SPLIT_PART","SPLIT_TO_TABLE","SQRT","SQUARE","ST_AREA","ST_ASEWKB","ST_ASEWKT","ST_ASGEOJSON","ST_ASWKB","ST_ASBINARY","ST_ASWKT","ST_ASTEXT","ST_AZIMUTH","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DWITHIN","ST_ENDPOINT","ST_ENVELOPE","ST_GEOGFROMGEOHASH","ST_GEOGPOINTFROMGEOHASH","ST_GEOGRAPHYFROMWKB","ST_GEOGRAPHYFROMWKT","ST_GEOHASH","ST_GEOMETRYFROMWKB","ST_GEOMETRYFROMWKT","ST_HAUSDORFFDISTANCE","ST_INTERSECTION","ST_INTERSECTS","ST_LENGTH","ST_MAKEGEOMPOINT","ST_GEOM_POINT","ST_MAKELINE","ST_MAKEPOINT","ST_POINT","ST_MAKEPOLYGON","ST_POLYGON","ST_NPOINTS","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SETSRID","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY","STAGE_STORAGE_USAGE_HISTORY","STARTSWITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRIP_NULL_VALUE","STRTOK","STRTOK_SPLIT_TO_TABLE","STRTOK_TO_ARRAY","SUBSTR","SUBSTRING","SUM","SYSDATE","SYSTEM$ABORT_SESSION","SYSTEM$ABORT_TRANSACTION","SYSTEM$AUTHORIZE_PRIVATELINK","SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS","SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS","SYSTEM$CANCEL_ALL_QUERIES","SYSTEM$CANCEL_QUERY","SYSTEM$CLUSTERING_DEPTH","SYSTEM$CLUSTERING_INFORMATION","SYSTEM$CLUSTERING_RATIO ","SYSTEM$CURRENT_USER_TASK_NAME","SYSTEM$DATABASE_REFRESH_HISTORY ","SYSTEM$DATABASE_REFRESH_PROGRESS","SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ","SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$DISABLE_DATABASE_REPLICATION","SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$ESTIMATE_QUERY_ACCELERATION","SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS","SYSTEM$EXPLAIN_JSON_TO_TEXT","SYSTEM$EXPLAIN_PLAN_JSON","SYSTEM$EXTERNAL_TABLE_PIPE_STATUS","SYSTEM$GENERATE_SAML_CSR","SYSTEM$GENERATE_SCIM_ACCESS_TOKEN","SYSTEM$GET_AWS_SNS_IAM_POLICY","SYSTEM$GET_PREDECESSOR_RETURN_VALUE","SYSTEM$GET_PRIVATELINK","SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS","SYSTEM$GET_PRIVATELINK_CONFIG","SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO","SYSTEM$GET_TAG","SYSTEM$GET_TAG_ALLOWED_VALUES","SYSTEM$GET_TAG_ON_CURRENT_COLUMN","SYSTEM$GET_TAG_ON_CURRENT_TABLE","SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER","SYSTEM$LAST_CHANGE_COMMIT_TIME","SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME","SYSTEM$MIGRATE_SAML_IDP_REGISTRATION","SYSTEM$PIPE_FORCE_RESUME","SYSTEM$PIPE_STATUS","SYSTEM$REVOKE_PRIVATELINK","SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS","SYSTEM$SET_RETURN_VALUE","SYSTEM$SHOW_OAUTH_CLIENT_SECRETS","SYSTEM$STREAM_GET_TABLE_TIMESTAMP","SYSTEM$STREAM_HAS_DATA","SYSTEM$TASK_DEPENDENTS_ENABLE","SYSTEM$TYPEOF","SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS","SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN","SYSTEM$WAIT","SYSTEM$WHITELIST","SYSTEM$WHITELIST_PRIVATELINK","TAG_REFERENCES","TAG_REFERENCES_ALL_COLUMNS","TAG_REFERENCES_WITH_LINEAGE","TAN","TANH","TASK_DEPENDENTS","TASK_HISTORY","TIME_FROM_PARTS","TIME_SLICE","TIMEADD","TIMEDIFF","TIMESTAMP_FROM_PARTS","TIMESTAMPADD","TIMESTAMPDIFF","TO_ARRAY","TO_BINARY","TO_BOOLEAN","TO_CHAR","TO_VARCHAR","TO_DATE","DATE","TO_DECIMAL","TO_NUMBER","TO_NUMERIC","TO_DOUBLE","TO_GEOGRAPHY","TO_GEOMETRY","TO_JSON","TO_OBJECT","TO_TIME","TIME","TO_TIMESTAMP","TO_TIMESTAMP_LTZ","TO_TIMESTAMP_NTZ","TO_TIMESTAMP_TZ","TO_VARIANT","TO_XML","TRANSLATE","TRIM","TRUNCATE","TRUNC","TRUNC","TRY_BASE64_DECODE_BINARY","TRY_BASE64_DECODE_STRING","TRY_CAST","TRY_HEX_DECODE_BINARY","TRY_HEX_DECODE_STRING","TRY_PARSE_JSON","TRY_TO_BINARY","TRY_TO_BOOLEAN","TRY_TO_DATE","TRY_TO_DECIMAL","TRY_TO_NUMBER","TRY_TO_NUMERIC","TRY_TO_DOUBLE","TRY_TO_GEOGRAPHY","TRY_TO_GEOMETRY","TRY_TO_TIME","TRY_TO_TIMESTAMP","TRY_TO_TIMESTAMP_LTZ","TRY_TO_TIMESTAMP_NTZ","TRY_TO_TIMESTAMP_TZ","TYPEOF","UNICODE","UNIFORM","UPPER","UUID_STRING","VALIDATE","VALIDATE_PIPE_LOAD","VAR_POP","VAR_SAMP","VARIANCE","VARIANCE_SAMP","VARIANCE_POP","WAREHOUSE_LOAD_HISTORY","WAREHOUSE_METERING_HISTORY","WIDTH_BUCKET","XMLGET","YEAR","YEAROFWEEK","YEAROFWEEKISO","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEKISO","DAYOFYEAR","WEEK","WEEK","WEEKOFYEAR","WEEKISO","MONTH","QUARTER","ZEROIFNULL","ZIPF"]}),_o=bi({all:["ACCOUNT","ALL","ALTER","AND","ANY","AS","BETWEEN","BY","CASE","CAST","CHECK","COLUMN","CONNECT","CONNECTION","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATABASE","DELETE","DISTINCT","DROP","ELSE","EXISTS","FALSE","FOLLOWING","FOR","FROM","FULL","GRANT","GROUP","GSCLUSTER","HAVING","ILIKE","IN","INCREMENT","INNER","INSERT","INTERSECT","INTO","IS","ISSUE","JOIN","LATERAL","LEFT","LIKE","LOCALTIME","LOCALTIMESTAMP","MINUS","NATURAL","NOT","NULL","OF","ON","OR","ORDER","ORGANIZATION","QUALIFY","REGEXP","REVOKE","RIGHT","RLIKE","ROW","ROWS","SAMPLE","SCHEMA","SELECT","SET","SOME","START","TABLE","TABLESAMPLE","THEN","TO","TRIGGER","TRUE","TRY_CAST","UNION","UNIQUE","UPDATE","USING","VALUES","VIEW","WHEN","WHENEVER","WHERE","WITH"]}),Co=Ui(["SELECT [ALL | DISTINCT]"]),lo=Ui(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH [FIRST | NEXT]","INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]","{THEN | ELSE} INTO","VALUES","SET","CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]","CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]","CLUSTER BY","[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}","COPY GRANTS","USING TEMPLATE","MERGE INTO","WHEN MATCHED [AND]","THEN {UPDATE SET | DELETE}","WHEN NOT MATCHED THEN INSERT"]),co=Ui(["UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","RENAME TO","SWAP WITH","[SUSPEND | RESUME] RECLUSTER","DROP CLUSTERING KEY","ADD [COLUMN]","RENAME COLUMN","{ALTER | MODIFY} [COLUMN]","DROP [COLUMN]","{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]","RENAME CONSTRAINT","{ADD | DROP} SEARCH OPTIMIZATION","{SET | UNSET} TAG","{ADD | DROP} ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","[SET DATA] TYPE","[UNSET] COMMENT","{SET | UNSET} MASKING POLICY","TRUNCATE [TABLE] [IF EXISTS]","ALTER ACCOUNT","ALTER API INTEGRATION","ALTER CONNECTION","ALTER DATABASE","ALTER EXTERNAL TABLE","ALTER FAILOVER GROUP","ALTER FILE FORMAT","ALTER FUNCTION","ALTER INTEGRATION","ALTER MASKING POLICY","ALTER MATERIALIZED VIEW","ALTER NETWORK POLICY","ALTER NOTIFICATION INTEGRATION","ALTER PIPE","ALTER PROCEDURE","ALTER REPLICATION GROUP","ALTER RESOURCE MONITOR","ALTER ROLE","ALTER ROW ACCESS POLICY","ALTER SCHEMA","ALTER SECURITY INTEGRATION","ALTER SEQUENCE","ALTER SESSION","ALTER SESSION POLICY","ALTER SHARE","ALTER STAGE","ALTER STORAGE INTEGRATION","ALTER STREAM","ALTER TAG","ALTER TASK","ALTER USER","ALTER VIEW","ALTER WAREHOUSE","BEGIN","CALL","COMMIT","COPY INTO","CREATE ACCOUNT","CREATE API INTEGRATION","CREATE CONNECTION","CREATE DATABASE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL TABLE","CREATE FAILOVER GROUP","CREATE FILE FORMAT","CREATE FUNCTION","CREATE INTEGRATION","CREATE MANAGED ACCOUNT","CREATE MASKING POLICY","CREATE MATERIALIZED VIEW","CREATE NETWORK POLICY","CREATE NOTIFICATION INTEGRATION","CREATE PIPE","CREATE PROCEDURE","CREATE REPLICATION GROUP","CREATE RESOURCE MONITOR","CREATE ROLE","CREATE ROW ACCESS POLICY","CREATE SCHEMA","CREATE SECURITY INTEGRATION","CREATE SEQUENCE","CREATE SESSION POLICY","CREATE SHARE","CREATE STAGE","CREATE STORAGE INTEGRATION","CREATE STREAM","CREATE TAG","CREATE TASK","CREATE USER","CREATE WAREHOUSE","DELETE","DESCRIBE DATABASE","DESCRIBE EXTERNAL TABLE","DESCRIBE FILE FORMAT","DESCRIBE FUNCTION","DESCRIBE INTEGRATION","DESCRIBE MASKING POLICY","DESCRIBE MATERIALIZED VIEW","DESCRIBE NETWORK POLICY","DESCRIBE PIPE","DESCRIBE PROCEDURE","DESCRIBE RESULT","DESCRIBE ROW ACCESS POLICY","DESCRIBE SCHEMA","DESCRIBE SEQUENCE","DESCRIBE SESSION POLICY","DESCRIBE SHARE","DESCRIBE STAGE","DESCRIBE STREAM","DESCRIBE TABLE","DESCRIBE TASK","DESCRIBE TRANSACTION","DESCRIBE USER","DESCRIBE VIEW","DESCRIBE WAREHOUSE","DROP CONNECTION","DROP DATABASE","DROP EXTERNAL TABLE","DROP FAILOVER GROUP","DROP FILE FORMAT","DROP FUNCTION","DROP INTEGRATION","DROP MANAGED ACCOUNT","DROP MASKING POLICY","DROP MATERIALIZED VIEW","DROP NETWORK POLICY","DROP PIPE","DROP PROCEDURE","DROP REPLICATION GROUP","DROP RESOURCE MONITOR","DROP ROLE","DROP ROW ACCESS POLICY","DROP SCHEMA","DROP SEQUENCE","DROP SESSION POLICY","DROP SHARE","DROP STAGE","DROP STREAM","DROP TAG","DROP TASK","DROP USER","DROP VIEW","DROP WAREHOUSE","EXECUTE IMMEDIATE","EXECUTE TASK","EXPLAIN","GET","GRANT OWNERSHIP","GRANT ROLE","INSERT","LIST","MERGE","PUT","REMOVE","REVOKE ROLE","ROLLBACK","SHOW COLUMNS","SHOW CONNECTIONS","SHOW DATABASES","SHOW DATABASES IN FAILOVER GROUP","SHOW DATABASES IN REPLICATION GROUP","SHOW DELEGATED AUTHORIZATIONS","SHOW EXTERNAL FUNCTIONS","SHOW EXTERNAL TABLES","SHOW FAILOVER GROUPS","SHOW FILE FORMATS","SHOW FUNCTIONS","SHOW GLOBAL ACCOUNTS","SHOW GRANTS","SHOW INTEGRATIONS","SHOW LOCKS","SHOW MANAGED ACCOUNTS","SHOW MASKING POLICIES","SHOW MATERIALIZED VIEWS","SHOW NETWORK POLICIES","SHOW OBJECTS","SHOW ORGANIZATION ACCOUNTS","SHOW PARAMETERS","SHOW PIPES","SHOW PRIMARY KEYS","SHOW PROCEDURES","SHOW REGIONS","SHOW REPLICATION ACCOUNTS","SHOW REPLICATION DATABASES","SHOW REPLICATION GROUPS","SHOW RESOURCE MONITORS","SHOW ROLES","SHOW ROW ACCESS POLICIES","SHOW SCHEMAS","SHOW SEQUENCES","SHOW SESSION POLICIES","SHOW SHARES","SHOW SHARES IN FAILOVER GROUP","SHOW SHARES IN REPLICATION GROUP","SHOW STAGES","SHOW STREAMS","SHOW TABLES","SHOW TAGS","SHOW TASKS","SHOW TRANSACTIONS","SHOW USER FUNCTIONS","SHOW USERS","SHOW VARIABLES","SHOW VIEWS","SHOW WAREHOUSES","TRUNCATE MATERIALIZED VIEW","UNDROP DATABASE","UNDROP SCHEMA","UNDROP TABLE","UNDROP TAG","UNSET","USE DATABASE","USE ROLE","USE SCHEMA","USE SECONDARY ROLES","USE WAREHOUSE"]),uo=Ui(["UNION [ALL]","MINUS","EXCEPT","INTERSECT"]),po=Ui(["[INNER] JOIN","[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | NATURAL} JOIN"]),Do=Ui(["{ROWS | RANGE} BETWEEN","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]"]),Po={tokenizerOptions:{reservedSelect:Co,reservedClauses:[...lo,...co],reservedSetOperations:uo,reservedJoins:po,reservedPhrases:Do,reservedKeywords:_o,reservedFunctionNames:Lo,stringTypes:["$$","''-qq-bs"],identTypes:['""-qq'],variableTypes:[{regex:"[$][1-9]\\d*"},{regex:"[$][_a-zA-Z][_a-zA-Z0-9$]*"}],extraParens:["[]"],identChars:{rest:"$"},lineCommentTypes:["--","//"],operators:["%","::","||",":","=>"]},formatOptions:{alwaysDenseOperators:[":","::"],onelineClauses:co}},fo=e=>e.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),Mo=/\s+/uy,Uo=e=>new RegExp(`(?:${e})`,"uy"),ho=e=>e.split("").map((e=>/ /gu.test(e)?"\\s+":`[${e.toUpperCase()}${e.toLowerCase()}]`)).join(""),vo=(e,E=[])=>{const t="open"===e?0:1,T=["()",...E].map((e=>e[t]));return Uo(T.map(fo).join("|"))},mo=(e,E={})=>{if(0===e.length)return/^\b$/u;const t=(({rest:e,dashes:E})=>e||E?`(?![${e||""}${E?"-":""}])`:"")(E),T=Bi(e).map(fo).join("|").replace(/ /gu,"\\s+");return new RegExp(`(?:${T})${t}\\b`,"iuy")},Go=(e,E)=>{if(!e.length)return;const t=e.map(fo).join("|");return Uo(`(?:${t})(?:${E})`)},yo={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":(()=>{const e={"<":">","[":"]","(":")","{":"}"},E=Object.entries(e).map((([e,E])=>"{left}(?:(?!{right}').)*?{right}".replace(/{left}/g,fo(e)).replace(/{right}/g,fo(E)))),t=fo(Object.keys(e).join(""));return`[Qq]'(?:${String.raw`(?<tag>[^\s${t}])(?:(?!\k<tag>').)*?\k<tag>`}|${E.join("|")})'`})()},Ho=e=>"string"==typeof e?yo[e]:"regex"in e?e.regex:(({prefixes:e,requirePrefix:E})=>`(?:${e.map(ho).join("|")}${E?"":"|"})`)(e)+yo[e.quote],go=e=>e.map(Ho).join("|"),Bo=e=>Uo(go(e)),Fo=(e={})=>Uo(Yo(e)),Yo=({first:e,rest:E,dashes:t,allowFirstCharNumber:T}={})=>{const r="\\p{Alphabetic}\\p{Mark}_",n="\\p{Decimal_Number}",s=fo(e??""),R=fo(E??""),i=T?`[${r}${n}${s}][${r}${n}${R}]*`:`[${r}${s}][${r}${n}${R}]*`;return t?(e=>e+"(?:-"+e+")*")(i):i};function bo(e,E){const t=e.slice(0,E).split(/\n/);return{line:t.length,col:t[t.length-1].length+1}}class Vo{input="";index=0;constructor(e){this.rules=e}tokenize(e){this.input=e,this.index=0;const E=[];let t;for(;this.index<this.input.length;){const e=this.getWhitespace();if(this.index<this.input.length){if(t=this.getNextToken(),!t)throw this.createParseError();E.push({...t,precedingWhitespace:e})}}return E}createParseError(){const e=this.input.slice(this.index,this.index+10),{line:E,col:t}=bo(this.input,this.index);return new Error(`Parse error: Unexpected "${e}" at line ${E} column ${t}`)}getWhitespace(){Mo.lastIndex=this.index;const e=Mo.exec(this.input);if(e)return this.index+=e[0].length,e[0]}getNextToken(){for(const e of this.rules){const E=this.match(e);if(E)return E}}match(e){e.regex.lastIndex=this.index;const E=e.regex.exec(this.input);if(E){const t=E[0],T={type:e.type,raw:t,text:e.text?e.text(t):t,start:this.index};return e.key&&(T.key=e.key(t)),this.index+=t.length,T}}}const Wo=/\/\*/uy,xo=/([^/*]|\*[^/]|\/[^*])+/uy,Qo=/\*\//uy;class Xo{lastIndex=0;exec(e){let E,t="",T=0;if(!(E=this.matchSection(Wo,e)))return null;for(t+=E,T++;T>0;)if(E=this.matchSection(Wo,e))t+=E,T++;else if(E=this.matchSection(Qo,e))t+=E,T--;else{if(!(E=this.matchSection(xo,e)))return null;t+=E}return[t]}matchSection(e,E){e.lastIndex=this.lastIndex;const t=e.exec(E);return t&&(this.lastIndex+=t[0].length),t?t[0]:null}}class wo{constructor(e){this.cfg=e,this.rulesBeforeParams=this.buildRulesBeforeParams(e),this.rulesAfterParams=this.buildRulesAfterParams(e)}tokenize(e,E){const t=[...this.rulesBeforeParams,...this.buildParamRules(this.cfg,E),...this.rulesAfterParams],T=new Vo(t).tokenize(e);return this.cfg.postProcess?this.cfg.postProcess(T):T}buildRulesBeforeParams(e){return this.validRules([{type:pi.BLOCK_COMMENT,regex:e.nestedBlockComments?new Xo:/(\/\*[^]*?\*\/)/uy},{type:pi.LINE_COMMENT,regex:(E=e.lineCommentTypes??["--"],new RegExp(`(?:${E.map(fo).join("|")}).*?(?=\r\n|\r|\n|$)`,"uy"))},{type:pi.QUOTED_IDENTIFIER,regex:Bo(e.identTypes)},{type:pi.NUMBER,regex:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?[0-9]+(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?!\w)/uy},{type:pi.RESERVED_PHRASE,regex:mo(e.reservedPhrases??[],e.identChars),text:Ko},{type:pi.CASE,regex:/CASE\b/iuy,text:Ko},{type:pi.END,regex:/END\b/iuy,text:Ko},{type:pi.BETWEEN,regex:/BETWEEN\b/iuy,text:Ko},{type:pi.LIMIT,regex:e.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:Ko},{type:pi.RESERVED_CLAUSE,regex:mo(e.reservedClauses,e.identChars),text:Ko},{type:pi.RESERVED_SELECT,regex:mo(e.reservedSelect,e.identChars),text:Ko},{type:pi.RESERVED_SET_OPERATION,regex:mo(e.reservedSetOperations,e.identChars),text:Ko},{type:pi.WHEN,regex:/WHEN\b/iuy,text:Ko},{type:pi.ELSE,regex:/ELSE\b/iuy,text:Ko},{type:pi.THEN,regex:/THEN\b/iuy,text:Ko},{type:pi.RESERVED_JOIN,regex:mo(e.reservedJoins,e.identChars),text:Ko},{type:pi.AND,regex:/AND\b/iuy,text:Ko},{type:pi.OR,regex:/OR\b/iuy,text:Ko},{type:pi.XOR,regex:e.supportsXor?/XOR\b/iuy:void 0,text:Ko},{type:pi.RESERVED_FUNCTION_NAME,regex:mo(e.reservedFunctionNames,e.identChars),text:Ko},{type:pi.RESERVED_KEYWORD,regex:mo(e.reservedKeywords,e.identChars),text:Ko}]);var E}buildRulesAfterParams(e){return this.validRules([{type:pi.VARIABLE,regex:e.variableTypes?(t=e.variableTypes,Uo(t.map((e=>"regex"in e?e.regex:Ho(e))).join("|"))):void 0},{type:pi.STRING,regex:Bo(e.stringTypes)},{type:pi.IDENTIFIER,regex:Fo(e.identChars)},{type:pi.DELIMITER,regex:/[;]/uy},{type:pi.COMMA,regex:/[,]/y},{type:pi.OPEN_PAREN,regex:vo("open",e.extraParens)},{type:pi.CLOSE_PAREN,regex:vo("close",e.extraParens)},{type:pi.OPERATOR,regex:(E=["+","-","/",">","<","=","<>","<=",">=","!=",...e.operators??[]],Uo(`${Bi(E).map(fo).join("|")}`))},{type:pi.ASTERISK,regex:/[*]/uy},{type:pi.DOT,regex:/[.]/uy}]);var E,t}buildParamRules(e,E){var t,T,r,n;const s={named:(null==E?void 0:E.named)||(null===(t=e.paramTypes)||void 0===t?void 0:t.named)||[],quoted:(null==E?void 0:E.quoted)||(null===(T=e.paramTypes)||void 0===T?void 0:T.quoted)||[],numbered:(null==E?void 0:E.numbered)||(null===(r=e.paramTypes)||void 0===r?void 0:r.numbered)||[],positional:"boolean"==typeof(null==E?void 0:E.positional)?E.positional:null===(n=e.paramTypes)||void 0===n?void 0:n.positional};return this.validRules([{type:pi.NAMED_PARAMETER,regex:Go(s.named,Yo(e.paramChars||e.identChars)),key:e=>e.slice(1)},{type:pi.QUOTED_PARAMETER,regex:Go(s.quoted,go(e.identTypes)),key:e=>(({tokenKey:e,quoteChar:E})=>e.replace(new RegExp(fo("\\"+E),"gu"),E))({tokenKey:e.slice(2,-1),quoteChar:e.slice(-1)})},{type:pi.NUMBERED_PARAMETER,regex:Go(s.numbered,"[0-9]+"),key:e=>e.slice(1)},{type:pi.POSITIONAL_PARAMETER,regex:s.positional?/[?]/y:void 0}])}validRules(e){return e.filter((e=>Boolean(e.regex)))}}const Ko=e=>Yi(e.toUpperCase()),$o=new Map,ko=e=>({tokenizer:new wo(e.tokenizerOptions),formatOptions:Jo(e.formatOptions)}),Jo=e=>({alwaysDenseOperators:e.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(e.onelineClauses.map((e=>[e,!0])))});function Zo(e){return"tabularLeft"===e.indentStyle||"tabularRight"===e.indentStyle?" ".repeat(10):e.useTabs?"\t":" ".repeat(e.tabWidth)}function qo(e){return"tabularLeft"===e.indentStyle||"tabularRight"===e.indentStyle}class jo{constructor(e){this.params=e,this.index=0}get({key:e,text:E}){return this.params?e?this.params[e]:this.params[this.index++]:E}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(e){this.index=e}}var zo=t(654);const eS=(e,E,t)=>{if(Mi(e.type)){const T=rS(t,E);if(T&&"."===T.text)return{...e,type:pi.IDENTIFIER,text:e.raw}}return e},ES=(e,E,t)=>{if(e.type===pi.RESERVED_FUNCTION_NAME){const T=nS(t,E);if(!T||!sS(T))return{...e,type:pi.RESERVED_KEYWORD}}return e},tS=(e,E,t)=>{if(e.type===pi.IDENTIFIER){const T=nS(t,E);if(T&&RS(T))return{...e,type:pi.ARRAY_IDENTIFIER}}return e},TS=(e,E,t)=>{if(e.type===pi.RESERVED_KEYWORD){const T=nS(t,E);if(T&&RS(T))return{...e,type:pi.ARRAY_KEYWORD}}return e},rS=(e,E)=>nS(e,E,-1),nS=(e,E,t=1)=>{let T=1;for(;e[E+T*t]&&iS(e[E+T*t]);)T++;return e[E+T*t]},sS=e=>e.type===pi.OPEN_PAREN&&"("===e.text,RS=e=>e.type===pi.OPEN_PAREN&&"["===e.text,iS=e=>e.type===pi.BLOCK_COMMENT||e.type===pi.LINE_COMMENT;class AS{index=0;tokens=[];input="";constructor(e){this.tokenize=e}reset(e,E){this.input=e,this.index=0,this.tokens=this.tokenize(e)}next(){return this.tokens[this.index++]}save(){}formatError(e){const{line:E,col:t}=bo(this.input,e.start);return`Parse error at token: ${e.text} at line ${E} column ${t}`}has(e){return e in pi}}let aS;function oS(e){return e[0]}!function(e){e.statement="statement",e.clause="clause",e.set_operation="set_operation",e.function_call="function_call",e.array_subscript="array_subscript",e.property_access="property_access",e.parenthesis="parenthesis",e.between_predicate="between_predicate",e.case_expression="case_expression",e.case_when="case_when",e.case_else="case_else",e.limit_clause="limit_clause",e.all_columns_asterisk="all_columns_asterisk",e.literal="literal",e.identifier="identifier",e.keyword="keyword",e.parameter="parameter",e.operator="operator",e.comma="comma",e.line_comment="line_comment",e.block_comment="block_comment"}(aS||(aS={}));const SS=new AS((e=>[])),IS=([[e]])=>e,OS=e=>({type:aS.keyword,tokenType:e.type,text:e.text,raw:e.raw}),NS=(e,{leading:E,trailing:t})=>(null!=E&&E.length&&(e={...e,leadingComments:E}),null!=t&&t.length&&(e={...e,trailingComments:t}),e),LS=(e,{leading:E,trailing:t})=>{if(null!=E&&E.length){const[t,...T]=e;e=[NS(t,{leading:E}),...T]}if(null!=t&&t.length){const E=e.slice(0,-1),T=e[e.length-1];e=[...E,NS(T,{trailing:t})]}return e},_S={Lexer:SS,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:e=>e[0].concat([e[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([e])=>{const E=e[e.length-1];return E&&!E.hasSemicolon?E.children.length>0?e:e.slice(0,-1):e}},{name:"statement$subexpression$1",symbols:[SS.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[SS.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([e,[E]])=>({type:aS.statement,children:e,hasSemicolon:E.type===pi.DELIMITER})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([e,E])=>[...e,...E]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:IS},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[SS.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:oS},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[SS.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([e,E,t,T])=>{if(T){const[r,n]=T;return{type:aS.limit_clause,limitKw:NS(OS(e),{trailing:E}),offset:t,count:n}}return{type:aS.limit_clause,limitKw:NS(OS(e),{trailing:E}),count:t}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[SS.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([e,[E,t]])=>({type:aS.clause,nameKw:OS(e),children:[E,...t]})},{name:"select_clause",symbols:[SS.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([e])=>({type:aS.clause,nameKw:OS(e),children:[]})},{name:"all_columns_asterisk",symbols:[SS.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:aS.all_columns_asterisk})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"other_clause",symbols:[SS.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([e,E])=>({type:aS.clause,nameKw:OS(e),children:E})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"set_operation",symbols:[SS.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([e,E])=>({type:aS.set_operation,nameKw:OS(e),children:E})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:oS},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([e,E])=>[e,...E]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([e,E])=>NS(e,{trailing:E})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([e,E])=>NS(E,{leading:e})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:IS},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:IS},{name:"expression$subexpression$1",symbols:["asteriskless_expression"]},{name:"expression$subexpression$1",symbols:["asterisk"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:IS},{name:"asteriskless_expression$subexpression$1",symbols:["array_subscript"]},{name:"asteriskless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_expression$subexpression$1",symbols:["function_call"]},{name:"asteriskless_expression$subexpression$1",symbols:["property_access"]},{name:"asteriskless_expression$subexpression$1",symbols:["parenthesis"]},{name:"asteriskless_expression$subexpression$1",symbols:["curly_braces"]},{name:"asteriskless_expression$subexpression$1",symbols:["square_brackets"]},{name:"asteriskless_expression$subexpression$1",symbols:["operator"]},{name:"asteriskless_expression$subexpression$1",symbols:["identifier"]},{name:"asteriskless_expression$subexpression$1",symbols:["parameter"]},{name:"asteriskless_expression$subexpression$1",symbols:["literal"]},{name:"asteriskless_expression$subexpression$1",symbols:["keyword"]},{name:"asteriskless_expression",symbols:["asteriskless_expression$subexpression$1"],postprocess:IS},{name:"array_subscript",symbols:[SS.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([e,E,t])=>({type:aS.array_subscript,array:NS({type:aS.identifier,text:e.text},{trailing:E}),parenthesis:t})},{name:"array_subscript",symbols:[SS.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([e,E,t])=>({type:aS.array_subscript,array:NS(OS(e),{trailing:E}),parenthesis:t})},{name:"function_call",symbols:[SS.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([e,E,t])=>({type:aS.function_call,nameKw:NS(OS(e),{trailing:E}),parenthesis:t})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([e,E,t])=>({type:aS.parenthesis,children:E,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([e,E,t])=>({type:aS.parenthesis,children:E,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([e,E,t])=>({type:aS.parenthesis,children:E,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access",symbols:["expression","_",SS.has("DOT")?{type:"DOT"}:DOT,"_","property_access$subexpression$1"],postprocess:([e,E,t,T,[r]])=>({type:aS.property_access,object:NS(e,{trailing:E}),property:NS(r,{leading:T})})},{name:"between_predicate",symbols:[SS.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","expression_chain","_",SS.has("AND")?{type:"AND"}:AND,"_","expression"],postprocess:([e,E,t,T,r,n,s])=>({type:aS.between_predicate,betweenKw:OS(e),expr1:LS(t,{leading:E,trailing:T}),andKw:OS(r),expr2:[NS(s,{leading:n})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:oS},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:e=>e[0].concat([e[1]])},{name:"case_expression",symbols:[SS.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",SS.has("END")?{type:"END"}:END],postprocess:([e,E,t,T,r])=>({type:aS.case_expression,caseKw:NS(OS(e),{trailing:E}),endKw:OS(r),expr:t||[],clauses:T})},{name:"case_clause",symbols:[SS.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",SS.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([e,E,t,T,r,n])=>({type:aS.case_when,whenKw:NS(OS(e),{trailing:E}),thenKw:NS(OS(T),{trailing:r}),condition:t,result:n})},{name:"case_clause",symbols:[SS.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([e,E,t])=>({type:aS.case_else,elseKw:NS(OS(e),{trailing:E}),result:t})},{name:"comma$subexpression$1",symbols:[SS.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[e]])=>({type:aS.comma})},{name:"asterisk$subexpression$1",symbols:[SS.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[e]])=>({type:aS.operator,text:e.text})},{name:"operator$subexpression$1",symbols:[SS.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[e]])=>({type:aS.operator,text:e.text})},{name:"identifier$subexpression$1",symbols:[SS.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[SS.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[SS.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[e]])=>({type:aS.identifier,text:e.text})},{name:"parameter$subexpression$1",symbols:[SS.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[SS.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[SS.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[SS.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[e]])=>({type:aS.parameter,key:e.key,text:e.text})},{name:"literal$subexpression$1",symbols:[SS.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[SS.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[e]])=>({type:aS.literal,text:e.text})},{name:"keyword$subexpression$1",symbols:[SS.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[SS.has("RESERVED_PHRASE")?{type:"RESERVED_PHRASE"}:RESERVED_PHRASE]},{name:"keyword$subexpression$1",symbols:[SS.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword$subexpression$1",symbols:[SS.has("AND")?{type:"AND"}:AND]},{name:"keyword$subexpression$1",symbols:[SS.has("OR")?{type:"OR"}:OR]},{name:"keyword$subexpression$1",symbols:[SS.has("XOR")?{type:"XOR"}:XOR]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[e]])=>OS(e)},{name:"other_keyword$subexpression$1",symbols:[SS.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[SS.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[SS.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[SS.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[e]])=>OS(e)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([e])=>e},{name:"comment",symbols:[SS.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([e])=>({type:aS.line_comment,text:e.text,precedingWhitespace:e.precedingWhitespace})},{name:"comment",symbols:[SS.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([e])=>({type:aS.block_comment,text:e.text,precedingWhitespace:e.precedingWhitespace})}],ParserStart:"main"},CS=_S,{Parser:lS,Grammar:cS}=zo;const uS=/^\s+/u;function pS(e,E,t){return function(e){const E=[];for(let t=0;t<e.length;t++){const T=[e[t]];for(;e[t].match(/.*,$/);)t++,T.push(e[t]);E.push(T)}return E}(e.split("\n")).flatMap((e=>{if(1===e.length)return e;if("tabular"===E)return function(e){const E=Fi(e);return DS(e).map(((t,T)=>T===e.length-1?t:t+" ".repeat(E-t.length-1)+","))}(e);if("before"===E)return function(e,E){return DS(e).map(((e,t)=>{if(0===t)return e;const[T]=e.match(uS)||[""];return function(e,E){return e.replace(new RegExp(E+"$"),"")}(T,E)+E.replace(/ {2}$/,", ")+e.trimStart()}))}(e,t);throw new Error(`Unexpected commaPosition: ${E}`)})).join("\n")}function DS(e){return e.map((e=>e.replace(/,$/,"")))}let PS;!function(e){e[e.SPACE=0]="SPACE",e[e.NO_SPACE=1]="NO_SPACE",e[e.NO_NEWLINE=2]="NO_NEWLINE",e[e.NEWLINE=3]="NEWLINE",e[e.MANDATORY_NEWLINE=4]="MANDATORY_NEWLINE",e[e.INDENT=5]="INDENT",e[e.SINGLE_INDENT=6]="SINGLE_INDENT"}(PS||(PS={}));class dS{items=[];constructor(e){this.indentation=e}add(...e){for(const E of e)switch(E){case PS.SPACE:this.items.push(PS.SPACE);break;case PS.NO_SPACE:this.trimHorizontalWhitespace();break;case PS.NO_NEWLINE:this.trimWhitespace();break;case PS.NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(PS.NEWLINE);break;case PS.MANDATORY_NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(PS.MANDATORY_NEWLINE);break;case PS.INDENT:this.addIndentation();break;case PS.SINGLE_INDENT:this.items.push(PS.SINGLE_INDENT);break;default:this.items.push(E)}}trimHorizontalWhitespace(){for(;fS(gi(this.items));)this.items.pop()}trimWhitespace(){for(;MS(gi(this.items));)this.items.pop()}addNewline(e){if(this.items.length>0)switch(gi(this.items)){case PS.NEWLINE:this.items.pop(),this.items.push(e);break;case PS.MANDATORY_NEWLINE:break;default:this.items.push(e)}}addIndentation(){for(let e=0;e<this.indentation.getLevel();e++)this.items.push(PS.SINGLE_INDENT)}toString(){return this.items.map((e=>this.itemToString(e))).join("")}getLayoutItems(){return this.items}itemToString(e){switch(e){case PS.SPACE:return" ";case PS.NEWLINE:case PS.MANDATORY_NEWLINE:return"\n";case PS.SINGLE_INDENT:return this.indentation.getSingleIndent();default:return e}}}const fS=e=>e===PS.SPACE||e===PS.SINGLE_INDENT,MS=e=>e===PS.SPACE||e===PS.SINGLE_INDENT||e===PS.NEWLINE;function US(e){return(e=>e===pi.AND||e===pi.OR||e===pi.XOR)(e)||e===pi.RESERVED_CLAUSE||e===pi.RESERVED_SELECT||e===pi.RESERVED_SET_OPERATION||e===pi.RESERVED_JOIN||e===pi.LIMIT}const hS="top-level";class vS{indentTypes=[];constructor(e){this.indent=e}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(hS)}increaseBlockLevel(){this.indentTypes.push("block-level")}decreaseTopLevel(){this.indentTypes.length>0&&gi(this.indentTypes)===hS&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0;){if(this.indentTypes.pop()!==hS)break}}}class mS extends dS{length=0;trailingSpace=!1;constructor(e){super(new vS("")),this.expressionWidth=e}add(...e){if(e.forEach((e=>this.addToLength(e))),this.length>this.expressionWidth)throw new GS;super.add(...e)}addToLength(e){if("string"==typeof e)this.length+=e.length,this.trailingSpace=!1;else{if(e===PS.MANDATORY_NEWLINE||e===PS.NEWLINE)throw new GS;e===PS.INDENT||e===PS.SINGLE_INDENT||e===PS.SPACE?this.trailingSpace||(this.length++,this.trailingSpace=!0):e!==PS.NO_NEWLINE&&e!==PS.NO_SPACE||this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}}class GS extends Error{}class yS{inline=!1;nodes=[];index=-1;constructor({cfg:e,dialectCfg:E,params:t,layout:T,inline:r=!1}){this.cfg=e,this.dialectCfg=E,this.inline=r,this.params=t,this.layout=T}format(e){for(this.nodes=e,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(e){this.formatComments(e.leadingComments),this.formatNodeWithoutComments(e),this.formatComments(e.trailingComments)}formatNodeWithoutComments(e){switch(e.type){case aS.function_call:return this.formatFunctionCall(e);case aS.array_subscript:return this.formatArraySubscript(e);case aS.property_access:return this.formatPropertyAccess(e);case aS.parenthesis:return this.formatParenthesis(e);case aS.between_predicate:return this.formatBetweenPredicate(e);case aS.case_expression:return this.formatCaseExpression(e);case aS.case_when:return this.formatCaseWhen(e);case aS.case_else:return this.formatCaseElse(e);case aS.clause:return this.formatClause(e);case aS.set_operation:return this.formatSetOperation(e);case aS.limit_clause:return this.formatLimitClause(e);case aS.all_columns_asterisk:return this.formatAllColumnsAsterisk(e);case aS.literal:return this.formatLiteral(e);case aS.identifier:return this.formatIdentifier(e);case aS.parameter:return this.formatParameter(e);case aS.operator:return this.formatOperator(e);case aS.comma:return this.formatComma(e);case aS.line_comment:return this.formatLineComment(e);case aS.block_comment:return this.formatBlockComment(e);case aS.keyword:return this.formatKeywordNode(e)}}formatFunctionCall(e){this.withComments(e.nameKw,(()=>{this.layout.add(this.showKw(e.nameKw))})),this.formatNode(e.parenthesis)}formatArraySubscript(e){this.withComments(e.array,(()=>{this.layout.add(e.array.type===aS.keyword?this.showKw(e.array):e.array.text)})),this.formatNode(e.parenthesis)}formatPropertyAccess(e){this.formatNode(e.object),this.layout.add(PS.NO_SPACE,"."),this.formatNode(e.property)}formatParenthesis(e){const E=this.formatInlineExpression(e.children);E?(this.layout.add(e.openParen),this.layout.add(...E.getLayoutItems()),this.layout.add(PS.NO_SPACE,e.closeParen,PS.SPACE)):(this.layout.add(e.openParen,PS.NEWLINE),qo(this.cfg)?(this.layout.add(PS.INDENT),this.layout=this.formatSubExpression(e.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(PS.INDENT),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(PS.NEWLINE,PS.INDENT,e.closeParen,PS.SPACE))}formatBetweenPredicate(e){this.layout.add(this.showKw(e.betweenKw),PS.SPACE),this.layout=this.formatSubExpression(e.expr1),this.layout.add(PS.NO_SPACE,PS.SPACE,this.showNonTabularKw(e.andKw),PS.SPACE),this.layout=this.formatSubExpression(e.expr2),this.layout.add(PS.SPACE)}formatCaseExpression(e){this.formatNode(e.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(e.expr),this.layout=this.formatSubExpression(e.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(PS.NEWLINE,PS.INDENT),this.formatNode(e.endKw)}formatCaseWhen(e){this.layout.add(PS.NEWLINE,PS.INDENT),this.formatNode(e.whenKw),this.layout=this.formatSubExpression(e.condition),this.formatNode(e.thenKw),this.layout=this.formatSubExpression(e.result)}formatCaseElse(e){this.layout.add(PS.NEWLINE,PS.INDENT),this.formatNode(e.elseKw),this.layout=this.formatSubExpression(e.result)}formatClause(e){this.isOnelineClause(e)?this.formatClauseInOnelineStyle(e):qo(this.cfg)?this.formatClauseInTabularStyle(e):this.formatClauseInIndentedStyle(e)}isOnelineClause(e){return this.dialectCfg.onelineClauses[e.nameKw.text]}formatClauseInIndentedStyle(e){this.layout.add(PS.NEWLINE,PS.INDENT,this.showKw(e.nameKw),PS.NEWLINE),this.layout.indentation.increaseTopLevel(),this.layout.add(PS.INDENT),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(e){this.layout.add(PS.NEWLINE,PS.INDENT,this.showKw(e.nameKw),PS.SPACE),this.layout=this.formatSubExpression(e.children)}formatClauseInTabularStyle(e){this.layout.add(PS.NEWLINE,PS.INDENT,this.showKw(e.nameKw),PS.SPACE),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(e){this.layout.add(PS.NEWLINE,PS.INDENT,this.showKw(e.nameKw),PS.NEWLINE),this.layout.add(PS.INDENT),this.layout=this.formatSubExpression(e.children)}formatLimitClause(e){this.withComments(e.limitKw,(()=>{this.layout.add(PS.NEWLINE,PS.INDENT,this.showKw(e.limitKw))})),this.layout.indentation.increaseTopLevel(),qo(this.cfg)?this.layout.add(PS.SPACE):this.layout.add(PS.NEWLINE,PS.INDENT),e.offset?(this.layout=this.formatSubExpression(e.offset),this.layout.add(PS.NO_SPACE,",",PS.SPACE),this.layout=this.formatSubExpression(e.count)):this.layout=this.formatSubExpression(e.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(e){this.layout.add("*",PS.SPACE)}formatLiteral(e){this.layout.add(e.text,PS.SPACE)}formatIdentifier(e){this.layout.add(e.text,PS.SPACE)}formatParameter(e){this.layout.add(this.params.get(e),PS.SPACE)}formatOperator({text:e}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(e)?this.layout.add(PS.NO_SPACE,e):":"===e?this.layout.add(PS.NO_SPACE,e,PS.SPACE):this.layout.add(e,PS.SPACE)}formatComma(e){this.inline?this.layout.add(PS.NO_SPACE,",",PS.SPACE):this.layout.add(PS.NO_SPACE,",",PS.NEWLINE,PS.INDENT)}withComments(e,E){this.formatComments(e.leadingComments),E(),this.formatComments(e.trailingComments)}formatComments(e){e&&e.forEach((e=>{e.type===aS.line_comment?this.formatLineComment(e):this.formatBlockComment(e)}))}formatLineComment(e){Vi(e.precedingWhitespace||"")?this.layout.add(PS.NEWLINE,PS.INDENT,e.text,PS.MANDATORY_NEWLINE,PS.INDENT):this.layout.getLayoutItems().length>0?this.layout.add(PS.NO_NEWLINE,PS.SPACE,e.text,PS.MANDATORY_NEWLINE,PS.INDENT):this.layout.add(e.text,PS.MANDATORY_NEWLINE,PS.INDENT)}formatBlockComment(e){this.isMultilineBlockComment(e)?(this.splitBlockComment(e.text).forEach((e=>{this.layout.add(PS.NEWLINE,PS.INDENT,e)})),this.layout.add(PS.NEWLINE,PS.INDENT)):this.layout.add(e.text,PS.SPACE)}isMultilineBlockComment(e){return Vi(e.text)||Vi(e.precedingWhitespace||"")}splitBlockComment(e){return e.split(/\n/).map((e=>/^\s*\*/.test(e)?" "+e.replace(/^\s*/,""):e.replace(/^\s*/,"")))}formatSubExpression(e){return new yS({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(e)}formatInlineExpression(e){const E=this.params.getPositionalParameterIndex();try{return new yS({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new mS(this.cfg.expressionWidth),inline:!0}).format(e)}catch(e){if(e instanceof GS)return void this.params.setPositionalParameterIndex(E);throw e}}formatKeywordNode(e){switch(e.tokenType){case pi.RESERVED_JOIN:return this.formatJoin(e);case pi.AND:case pi.OR:case pi.XOR:return this.formatLogicalOperator(e);default:return this.formatKeyword(e)}}formatJoin(e){qo(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(PS.NEWLINE,PS.INDENT,this.showKw(e),PS.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(PS.NEWLINE,PS.INDENT,this.showKw(e),PS.SPACE)}formatKeyword(e){this.layout.add(this.showKw(e),PS.SPACE)}formatLogicalOperator(e){"before"===this.cfg.logicalOperatorNewline?qo(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(PS.NEWLINE,PS.INDENT,this.showKw(e),PS.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(PS.NEWLINE,PS.INDENT,this.showKw(e),PS.SPACE):this.layout.add(this.showKw(e),PS.NEWLINE,PS.INDENT)}showKw(e){return US(e.tokenType)?function(e,E){if("standard"===E)return e;let t=[];return e.length>=10&&e.includes(" ")&&([e,...t]=e.split(" ")),(e="tabularLeft"===E?e.padEnd(9," "):e.padStart(9," "))+["",...t].join(" ")}(this.showNonTabularKw(e),this.cfg.indentStyle):this.showNonTabularKw(e)}showNonTabularKw(e){switch(this.cfg.keywordCase){case"preserve":return Yi(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}}class HS{constructor(e,E){this.dialect=e,this.cfg=E,this.params=new jo(this.cfg.params)}format(e){const E=this.parse(e),t=this.formatAst(E);return this.postFormat(t).trimEnd()}parse(e){return function(e){let E={};const t=new AS((t=>{return[...(T=e.tokenize(t,E),T.map(eS).map(ES).map(tS).map(TS)),Di(t.length)];var T})),T=new lS(cS.fromCompiled(CS),{lexer:t});return{parse:(e,t)=>{E=t;const{results:r}=T.feed(e);if(1===r.length)return r[0];throw 0===r.length?new Error("Parse error: Invalid SQL"):new Error(`Parse error: Ambiguous grammar\n${JSON.stringify(r,void 0,2)}`)}}}(this.dialect.tokenizer).parse(e,this.cfg.paramTypes||{})}formatAst(e){return e.map((e=>this.formatStatement(e))).join("\n".repeat(this.cfg.linesBetweenQueries+1))}formatStatement(e){const E=new yS({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new dS(new vS(Zo(this.cfg)))}).format(e.children);return e.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?E.add(PS.NEWLINE,";"):E.add(PS.NO_NEWLINE,";")),E.toString()}postFormat(e){return this.cfg.tabulateAlias&&(e=function(e){const E=e.split("\n");let t=[];for(let e=0;e<E.length;e++){if(E[e].match(/^\s*SELECT/i)){let T=[];if(E[e].match(/.*,$/))T=[E[e]];else{if(t.push(E[e]),E[e].match(/^\s*SELECT\s+.+(?!,$)/i))continue;T.push(E[++e])}for(;E[e++].match(/.*,$/);)T.push(E[e]);const r=T.map((e=>({line:e,matches:e.match(/(^.*?\S) (AS )?(\S+,?$)/i)}))).map((({line:e,matches:E})=>E?{precedingText:E[1],as:E[2],alias:E[3]}:{precedingText:e})),n=Fi(r.map((({precedingText:e})=>e.replace(/\s*,\s*$/,""))));T=r.map((({precedingText:e,as:E,alias:t})=>e+(t?" ".repeat(n-e.length+1)+(E??"")+t:""))),t=[...t,...T]}t.push(E[e])}return t.join("\n")}(e)),"before"!==this.cfg.commaPosition&&"tabular"!==this.cfg.commaPosition||(e=pS(e,this.cfg.commaPosition,Zo(this.cfg))),e}}class gS extends Error{}function BS(e){if("multilineLists"in e)throw new gS("multilineLists config is no more supported.");if("newlineBeforeOpenParen"in e)throw new gS("newlineBeforeOpenParen config is no more supported.");if("newlineBeforeCloseParen"in e)throw new gS("newlineBeforeCloseParen config is no more supported.");if("aliasAs"in e)throw new gS("aliasAs config is no more supported.");if(e.expressionWidth<=0)throw new gS(`expressionWidth config must be positive number. Received ${e.expressionWidth} instead.`);if("before"===e.commaPosition&&e.useTabs)throw new gS("commaPosition: before does not work when tabs are used for indentation.");var E;return e.params&&!((E=e.params)instanceof Array?E:Object.values(E)).every((e=>"string"==typeof e))&&console.warn('WARNING: All "params" option values should be strings.'),e}const FS={bigquery:"bigquery",db2:"db2",hive:"hive",mariadb:"mariadb",mysql:"mysql",n1ql:"n1ql",plsql:"plsql",postgresql:"postgresql",redshift:"redshift",spark:"spark",sqlite:"sqlite",sql:"sql",trino:"trino",transactsql:"transactsql",tsql:"transactsql",singlestoredb:"singlestoredb",snowflake:"snowflake"},YS=Object.keys(FS),bS={tabWidth:2,useTabs:!1,keywordCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",tabulateAlias:!1,commaPosition:"after",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},VS=(e,E={})=>{if("string"==typeof E.language&&!YS.includes(E.language))throw new gS(`Unsupported SQL dialect: ${E.language}`);const t=FS[E.language||"sql"];return WS(e,{...E,dialect:T[t]})},WS=(e,{dialect:E,...t})=>{if("string"!=typeof e)throw new Error("Invalid query argument. Expected string, instead got "+typeof e);const T=BS({...bS,...t});return new HS((e=>{let E=$o.get(e);return E||(E=ko(e),$o.set(e,E)),E})(E),T).format(e)};var xS=t(586);const QS={props:{sql:{type:String,default:function(){return""}},lightMode:{type:Boolean,default:function(){return!1}}},computed:{formatted:function(){return VS("".concat(this.sql,";"),{language:"mysql",keywordCase:"lower",tabWidth:4,linesBetweenQueries:2})},segments:function(){return(0,xS.getSegments)(this.formatted)}},methods:{copyToClipboard:function(){}}};var XS=t(92),wS={insert:"head",singleton:!1};ri()(XS.Z,wS);XS.Z.locals;const KS=qR(QS,(function(){var e=this,E=e._self._c;return E("code",{class:["sql-hl",{"light-mode":e.lightMode}]},[E("pre",e._l(e.segments,(function(t){return E("span",{class:"sql-hl-".concat(t.name)},[e._v(e._s(t.content))])})),0)])}),[],!1,null,null,null).exports,$S={components:{sqlHighlight:KS},props:{query:{type:Object},sessionKey:{type:String}},data:function(){return{showNotification:!1,showContent:!0}},methods:{showExplainDialog:function(){this.$router.push({name:"session-query-explain",params:{sessionKey:this.sessionKey,time:this.query.time,timeKey:this.query.timeKey}})},showExecuteDialog:function(){this.$router.push({name:"session-query-execute",params:{sessionKey:this.sessionKey,time:this.query.time,timeKey:this.query.timeKey,sql:this.query.sql}})},clipboardSuccess:function(){window.EventBus.$emit("show-notification",{message:"Query is copied to your clipboard"})},format:function(e){return VS("".concat(e,";"),{language:"mysql",keywordCase:"upper"})}},computed:{dateTime:function(){return new Date(1e3*this.query.time).toISOString()}}};const kS=qR($S,(function(){var e=this,E=e._self._c;return E("div",{staticClass:"card"},[E("header",{staticClass:"card-header"},[E("p",{staticClass:"card-header-title"},[e._v("\n            "+e._s(e.query.url)+" ("+e._s(e.query.referer)+")\n        ")]),e._v(" "),E("span",{staticClass:"material-icons button is-pulled-right",attrs:{title:"expand"},on:{click:function(E){e.showContent=!e.showContent}}},[e.showContent?e._e():[e._v("expand_more")],e._v(" "),e.showContent?[e._v("expand_less")]:e._e()],2)]),e._v(" "),e.showContent?E("div",{staticClass:"card-content"},[E("div",{staticClass:"content"},[E("div",{staticClass:"field is-grouped is-grouped-multiline"},[E("div",{staticClass:"control"},[E("div",{staticClass:"tags has-addons"},[E("span",{staticClass:"tag"},[e._v("time")]),e._v(" "),E("span",{staticClass:"tag is-primary"},[e._v(e._s(e.query.queryTime)+" ms")])])]),e._v(" "),Object.values(e.query.backtrace)[0]?[E("div",{staticClass:"control"},[E("div",{staticClass:"tags has-addons"},[E("span",{staticClass:"tag"},[e._v("file")]),e._v(" "),E("span",{staticClass:"tag is-primary"},[e._v("\n                                "+e._s(Object.values(e.query.backtrace)[0].file)+":"+e._s(Object.values(e.query.backtrace)[0].line)+"\n                            ")])])]),e._v(" "),Object.values(e.query.backtrace)[0].model?E("div",{staticClass:"control"},[E("div",{staticClass:"tags has-addons"},[E("span",{staticClass:"tag"},[e._v("class")]),e._v(" "),E("span",{staticClass:"tag is-primary"},[e._v(e._s(Object.values(e.query.backtrace)[0].model))])])]):e._e(),e._v(" "),E("div",{staticClass:"control"},[E("div",{staticClass:"tags has-addons"},[E("span",{staticClass:"tag"},[e._v("function")]),e._v(" "),E("span",{staticClass:"tag is-primary"},[e._v(e._s(Object.values(e.query.backtrace)[0].function))])])])]:e._e()],2),e._v(" "),E("sqlHighlight",{attrs:{sql:e.query.sql}}),e._v(" "),E("time",{attrs:{datetime:e.dateTime}},[e._v(e._s(e.dateTime))])],1)]):e._e(),e._v(" "),E("footer",{staticClass:"card-footer"},[E("a",{staticClass:"card-footer-item",attrs:{title:"execute sql"},on:{click:e.showExecuteDialog}},[E("span",{staticClass:"material-icons button is-small"},[e._v("\n                replay\n            ")])]),e._v(" "),E("a",{staticClass:"card-footer-item",attrs:{title:"explain sql"},on:{click:e.showExplainDialog}},[E("span",{staticClass:"material-icons button is-small"},[e._v("\n                info\n            ")])]),e._v(" "),E("a",{directives:[{name:"clipboard",rawName:"v-clipboard",value:e.format(e.query.sql),expression:"format(query.sql)"},{name:"clipboard",rawName:"v-clipboard:success",value:e.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"card-footer-item",attrs:{title:"copy sql"}},[E("span",{staticClass:"material-icons button is-small"},[e._v("\n                file_copy\n            ")])])])])}),[],!1,null,null,null).exports;const JS={components:{SqlHighlight:KS},props:{sessionKey:{type:String,default:function(){return""}},timeKey:{type:Number,default:function(){return 0}},query:{type:Object,default:function(){return{time:(new Date).getTime()/1e3,sql:"",referer:"",url:"",queryTime:0,backtrace:[]}}}},methods:{showExplainDialog:function(){this.$router.push({name:"session-query-explain",params:{sessionKey:this.sessionKey,time:this.query.time,timeKey:this.query.timeKey}})},showExecuteDialog:function(){this.$router.push({name:"session-query-execute",params:{sessionKey:this.sessionKey,time:this.query.time,timeKey:this.query.timeKey,sql:this.query.sql}})},clipboardSuccess:function(){window.EventBus.$emit("show-notification",{message:"Query is copied to your clipboard"})},format:function(e){return VS("".concat(e,";"),{language:"mysql",keywordCase:"upper"})}}},ZS=JS;var qS=t(133),jS={insert:"head",singleton:!1};ri()(qS.Z,jS);qS.Z.locals;const zS={name:"Datagrid",components:{QueryCard:qR(ZS,(function(){var e=this,E=e._self._c;return E("div",[E("div",{staticClass:"main-column"},[E("div",{staticClass:"options"},[E("div",{staticClass:"buttons"},[E("div",{staticClass:"button is-text",attrs:{title:"explain query"},on:{click:e.showExplainDialog}},[E("svg",[E("use",{attrs:{"xlink:href":"#sql-time",href:"#explain"}})])]),e._v(" "),E("div",{staticClass:"button is-text",attrs:{title:"execute query"},on:{click:e.showExecuteDialog}},[E("svg",[E("use",{attrs:{"xlink:href":"#sql-time",href:"#execute"}})])]),e._v(" "),E("div",{directives:[{name:"clipboard",rawName:"v-clipboard",value:e.format(e.query.sql),expression:"format(query.sql)"},{name:"clipboard",rawName:"v-clipboard:success",value:e.clipboardSuccess,expression:"clipboardSuccess",arg:"success"}],staticClass:"button is-text",attrs:{title:"copy query to clipboard"}},[E("svg",[E("use",{attrs:{"xlink:href":"#sql-time",href:"#copy"}})])])])]),e._v(" "),E("div",{staticClass:"code"},[E("div",[E("sql-highlight",{attrs:{sql:e.query.sql}})],1)]),e._v(" "),E("div",{staticClass:"information"},[E("div",[E("header",[e._v("\n                    "+e._s(new Intl.DateTimeFormat("en-US",{dateStyle:"long",timeStyle:"medium",hourCycle:"h24"}).format(new Date(1e3*e.query.time)))+"\n                ")]),e._v(" "),E("div",{staticClass:"container-info"},[E("div",{staticClass:"column"},[E("svg",{staticClass:"item"},[E("use",{attrs:{href:"#sql-time"}})]),e._v(" "),E("svg",{staticClass:"item"},[E("use",{attrs:{href:"#referrer"}})]),e._v(" "),E("svg",{staticClass:"item"},[E("use",{attrs:{href:"#url"}})]),e._v(" "),Object.values(e.query.backtrace)[0]?E("svg",{staticClass:"item"},[E("use",{attrs:{href:"#src"}})]):e._e(),e._v(" "),Object.values(e.query.backtrace)[0]?E("svg",{staticClass:"item"},[E("use",{attrs:{href:"#exec"}})]):e._e()]),e._v(" "),E("div",{staticClass:"column"},[E("div",{staticClass:"item"},[e._v("\n                            "+e._s(e.query.queryTime)+" ms\n                        ")]),e._v(" "),E("div",{staticClass:"item"},[e._v("\n                            "+e._s(e.query.referer)+"\n                        ")]),e._v(" "),E("div",{staticClass:"item"},[e._v("\n                            "+e._s(e.query.url)+"\n                        ")]),e._v(" "),Object.values(e.query.backtrace)[0]?E("div",{staticClass:"item"},[e._v("\n                            "+e._s(e.query.backtrace[0].file)+":"+e._s(e.query.backtrace[0].line)+"\n                        ")]):e._e(),e._v(" "),Object.values(e.query.backtrace)[0]?E("div",{staticClass:"item"},[e._v("\n                            "+e._s(e.query.backtrace[0].model)+"::"+e._s(e.query.backtrace[0].function)+"\n                        ")]):e._e()])])])])])])}),[],!1,null,null,null).exports,SqlHighlight:KS},props:{sessionKey:{type:String,default:function(){return""}},dataListKey:{type:Array,default:function(){return[]}},dataList:{type:Object,default:function(){}},listType:{type:String,default:function(){return"Time"}}},data:function(){return{showTime:[]}},methods:{showQueryGroup:function(e){return this.showTime.includes(e)},toggleQueryGroup:function(e){this.showTime.includes(e)?this.showTime=this.showTime.filter((function(E){return E!==e})):this.showTime.push(e)},groupTitle:function(e){return"time"===this.listType?new Intl.DateTimeFormat("en-US",{dateStyle:"full",timeStyle:"medium",hourCycle:"h24"}).format(new Date(1e3*e)):e}}};var eI=t(447),EI={insert:"head",singleton:!1};ri()(eI.Z,EI);eI.Z.locals;var tI=qR(zS,(function(){var e=this,E=e._self._c;return E("div",{staticClass:"datagrid"},[E("table",[e._l(e.dataListKey,(function(t){return[E("thead",[E("tr",[E("th",{class:["group-action",{"arrow-open":e.showQueryGroup(t)}],on:{click:function(E){return e.toggleQueryGroup(t)}}},[E("svg",[E("use",{attrs:{"xlink:href":"#triangle",href:"#triangle"}})])]),e._v(" "),E("th",[e._v(e._s(e.dataList[t].length))]),e._v(" "),E("th",{staticStyle:{"max-width":"75vw","text-overflow":"ellipsis",overflow:"hidden","white-space":"nowrap",padding:"4px 10px"}},[e._v(e._s(e.groupTitle(t)))])])]),e._v(" "),E("tbody",[e.showQueryGroup(t)?E("tr",{staticClass:"queries"},[E("td",{attrs:{colspan:"4"}},[E("div",{staticClass:"main-row"},e._l(e.dataList[t],(function(t,T){return E("query-card",{key:T,attrs:{"session-key":e.sessionKey,query:t}})})),1)])]):e._e()])]}))],2)])}),[],!1,null,null,null);function TI(e){return function(e){if(Array.isArray(e))return rI(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,E){if(!e)return;if("string"==typeof e)return rI(e,E);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return rI(e,E)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function rI(e,E){(null==E||E>e.length)&&(E=e.length);for(var t=0,T=new Array(E);t<E;t++)T[t]=e[t];return T}const nI={components:{Datagrid:tI.exports,pageFooter:ei,queryBlock:kS,queryStatistics:oi},props:{sessionKey:{}},data:function(){return{sortKey:"time",sortDirection:1,listType:"time",sessionData:{},sessionSummary:{},loading:!0}},computed:{dataList:function(){return this.groupValuesByKey(this.listType)},dataListKey:function(){var e=this,E=this.dataList,t=function(t,T){return E[t][0][e.sortKey]===E[T][0][e.sortKey]?0:E[t][0][e.sortKey]>E[T][0][e.sortKey]?-1*e.sortDirection:e.sortDirection};return"amount"===this.sortKey&&(t=function(t,T){return E[t].length===E[T].length?0:E[t].length>E[T].length?-1*e.sortDirection:e.sortDirection}),Object.keys(E).sort(t)},flattenedCachedKeys:function(){return Object.values(this.sessionData).flat()},totalQueryTime:function(){return 0===this.flattenedCachedKeys.length?0:this.flattenedCachedKeys.reduce((function(e,E,t){return 1===t&&(e=e.queryTime),e+E.queryTime}))},amountOfQueries:function(){return this.flattenedCachedKeys.length},amountOfRoutes:function(){return this.getUniqueRoutes.length},getUniqueRoutes:function(){return this.getUniqueValuesByKey("url")},getUniqueRawSql:function(){return this.getUniqueValuesByKey("rawSql")},getRawQueryList:function(){return this.groupValuesByKey("rawSql")},getRouteQueryList:function(){return this.groupValuesByKey("url")}},methods:{clearQueryCache:function(){var e=this;Ii().finally((function(){e.$router.push({name:"sessions"})}))},getQueries:function(){var e,E=this;this.loading=!0,(e=this.sessionKey,fetch("".concat(Si,"/").concat(e,"/")).then((function(e){return e.json()}))).then((function(e){var t,T;E.sessionData=null!==(t=e.data)&&void 0!==t?t:[],E.sessionSummary=null!==(T=e.summary)&&void 0!==T?T:{}})).finally((function(){E.loading=!1}))},showQueryGroup:function(e){return this.showTime.includes(e)},toggleQueryGroup:function(e){this.showTime.includes(e)?this.showTime=this.showTime.filter((function(E){return E!==e})):this.showTime.push(e)},groupTitle:function(e){return"time"===this.listType?new Date(1e3*e).toISOString():e},getUniqueValuesByKey:function(e){return TI(new Set(this.flattenedCachedKeys.map((function(E){return E[e]}))))},groupValuesByKey:function(e){var E=this,t=function(e,t){return e[E.sortKey]===t[E.sortKey]?0:e[E.sortKey]>t[E.sortKey]?-1*E.sortDirection:E.sortDirection};"amount"===this.sortKey&&(t=function(){return 0});var T={};return this.getUniqueValuesByKey(e).forEach((function(r){T[r]=E.flattenedCachedKeys.filter((function(E){return E[e]===r})).sort(t)})),T},showFilterMenu:function(){this.$router.push({name:"session-order-menu"})}},created:function(){this.getQueries()}};const sI=qR(nI,(function(){var e=this,E=e._self._c;return E("div",[E("router-view",{attrs:{name:"dialog"}}),e._v(" "),E("div",{staticClass:"tile is-parent is-paddingless"},[E("main",{staticClass:"is-vertical tile"},[E("nav",{staticClass:"panel is-primary"},[E("div",{staticClass:"panel-heading"},[E("span",[e._v("\n                        Queries\n                    ")]),e._v(" "),E("router-link",{staticClass:"button is-pulled-right is-primary is-text material-icons is-small",attrs:{tag:"span",to:{name:"sessions"}}},[e._v("close")]),e._v(" "),E("span",{staticClass:"material-icons button is-text is-primary is-pulled-right is-small",attrs:{title:"show filter menu"},on:{click:e.showFilterMenu}},[e._v("\n                        sort\n                    ")]),e._v(" "),E("router-link",{staticClass:"material-icons button is-text is-primary is-pulled-right is-small",attrs:{tag:"span",title:"download session file",to:{name:"download-session"}}},[e._v("\n                        download\n                    ")]),e._v(" "),E("span",{staticClass:"material-icons button is-text is-primary is-pulled-right is-small",attrs:{title:"clear query cache"},on:{click:e.clearQueryCache}},[e._v("\n                        delete\n                    ")])],1),e._v(" "),E("p",{staticClass:"panel-tabs"},[E("a",{class:{"is-active":"time"===e.listType},on:{click:function(E){e.listType="time"}}},[e._v("Time")]),e._v(" "),E("a",{class:{"is-active":"url"===e.listType},on:{click:function(E){e.listType="url"}}},[e._v("Routes")]),e._v(" "),E("a",{class:{"is-active":"referer"===e.listType},on:{click:function(E){e.listType="referer"}}},[e._v("Referer")]),e._v(" "),E("a",{class:{"is-active":"rawSql"===e.listType},on:{click:function(E){e.listType="rawSql"}}},[e._v("Raw queries")]),e._v(" "),E("a",{class:{"is-active":"sql"===e.listType},on:{click:function(E){e.listType="sql"}}},[e._v("Queries with bindings")]),e._v(" "),E("a",{class:{"is-active":"queryTime"===e.listType},on:{click:function(E){e.listType="queryTime"}}},[e._v("Query time")])])]),e._v(" "),e.loading?e._e():E("query-statistics",{attrs:{queries:e.sessionSummary.queries,routes:e.sessionSummary.routes,"query-time":e.sessionSummary.queryTime}}),e._v(" "),e.loading?E("div",{staticClass:"container"},[E("div",{staticClass:"button is-primary is-text is-large is-loading"}),e._v(" "),E("h1",{staticClass:"title"},[e._v("\n                    Loading..\n                ")])]):E("datagrid",{attrs:{"data-list":e.dataList,"session-key":e.sessionKey,"data-list-key":e.dataListKey,"list-type":e.listType}})],1)]),e._v(" "),E("router-view",{attrs:{name:"sidePanelLeft","sort-field":e.sortKey},on:{"update:sortField":function(E){e.sortKey=E},"update:sort-field":function(E){e.sortKey=E}}})],1)}),[],!1,null,null,null).exports;const RI=qR({computed:{sortField:{get:function(){return this.$attrs["sort-field"]},set:function(e){this.$emit("update:sort-field",e)}}}},(function(){var e=this,E=e._self._c;return E("aside",{class:["quickview","is-active"]},[E("header",{staticClass:"quickview-header"},[E("p",{staticClass:"title"},[e._v("Setting")]),e._v(" "),E("span",{staticClass:"delete",on:{click:function(E){return e.$router.push({name:e.$route.matched[0].name})}}})]),e._v(" "),E("div",{staticClass:"quickview-body"},[E("div",{},[E("div",{staticClass:"rows"},[E("h3",{staticClass:"subtitle"},[e._v("Order")]),e._v(" "),E("div",{staticClass:"field"},[E("input",{directives:[{name:"model",rawName:"v-model",value:e.sortField,expression:"sortField"}],staticClass:"is-checkradio",attrs:{id:"default",type:"radio",value:"time",name:"sortField"},domProps:{checked:e._q(e.sortField,"time")},on:{change:function(E){e.sortField="time"}}}),e._v(" "),E("label",{attrs:{for:"default"}},[e._v("Last inserted first")])]),e._v(" "),E("div",{staticClass:"field"},[E("input",{directives:[{name:"model",rawName:"v-model",value:e.sortField,expression:"sortField"}],staticClass:"is-checkradio",attrs:{id:"querytime",type:"radio",value:"queryTime",name:"sortField"},domProps:{checked:e._q(e.sortField,"queryTime")},on:{change:function(E){e.sortField="queryTime"}}}),e._v(" "),E("label",{attrs:{for:"querytime"}},[e._v("Slowest query first")])]),e._v(" "),E("div",{staticClass:"field"},[E("input",{directives:[{name:"model",rawName:"v-model",value:e.sortField,expression:"sortField"}],staticClass:"is-checkradio",attrs:{id:"amount",type:"radio",value:"amount",name:"sortField"},domProps:{checked:e._q(e.sortField,"amount")},on:{change:function(E){e.sortField="amount"}}}),e._v(" "),E("label",{attrs:{for:"amount"}},[e._v("Grouped Amount")])])])])]),e._v(" "),E("footer",{staticClass:"quickview-footer"})])}),[],!1,null,null,null).exports;const iI={name:"query-explain",components:{ExplainPart:qR({name:"explain-part",mixins:[{filters:{selectType:function(e){return{SIMPLE:"simple SELECT query without any subqueries or UNIONs",PRIMARY:"SELECT is in the outermost query in a JOIN",SUBQUERY:"SELECT is part of a subquery within a FROM clause",DEPENDENT_SUBQUERY:"a subquery which is dependent upon on outer query",UNCACHEABLE_SUBQUERY:"a subquery which is not cacheable (there are certain conditions for a query to be cacheable)",UNION:"the SELECT is the second or later statement of a UNION",DEPENDENT_UNION:"the second or later SELECT of a UNION is dependent on an outer query",UNION_RESULT:"SELECT is a result of a UNION",DERIVED:"DERIVED"}[e.toUpperCase().replace(" ","_")]}}},{filters:{joinType:function(e){return{SYSTEM:"the table has only zero or one row",CONST:"the table has only one matching row which is indexed. This is the fastest type of join because the table only has to be read once and the column’s value can be treated as a constant when joining other tables",EQ_REF:"all parts of an index are used by the join and the index is PRIMARY KEY or UNIQUE NOT NULL. This is the next best possible join type.",REF:"all of the matching rows of an indexed column are read for each combination of rows from the previous table. This type of join appears for indexed columns compared using : or <:> operators.",FULLTEXT:"the join uses the table’s FULLTEXT index",REF_OR_NULL:"this is the same as ref but also contains rows with a null value for the column.",DEPENDENT_UNION:"the second or later SELECT of a UNION is dependent on an outer query",INDEX_MERGE:"SELECT is a result of a UNION",UNION_RESULT:"the join uses a list of indexes to produce the result set. The key column of EXPLAIN‘s output will contain the keys used",UNIQUE_SUBQUERY:"an IN subquery returns only one result from the table and makes use of the primary key",INDEX_SUBQUERY:"the same as unique_subquery but returns more than one result row.",RANGE:"an index is used to find matching rows in a specific range, typically when the key column is compared to a constant using operators like BETWEEN, IN, >, >:, etc.",INDEX:"he entire index tree is scanned to find matching row",ALL:"the entire table is scanned to find matching rows for the join. This is the worst join type and usually indicates the lack of appropriate indexes on the table."}[e.toUpperCase().replace(" ","_")]}}}],props:{table:{type:String},tableExplainData:{type:Object}}},(function(){var e=this,E=e._self._c;return E("div",{staticClass:"card"},[E("div",{staticClass:"card-header"},[E("h1",{staticClass:"card-header-title is-4"},[e._v(e._s(e.tableExplainData.table))])]),e._v(" "),E("div",{staticClass:"card-content"},[E("div",{staticClass:"level-item has-text-centered"},[E("div",{attrs:{title:""}},[E("p",{staticClass:"heading"},[e._v("Select type")]),e._v(" "),E("p",[E("span",{staticClass:"title is-4"},[e._v(e._s(e.tableExplainData.select_type))]),e._v(" "),E("span",{staticClass:"subtitle is-small is-7"},[e._v(e._s(e._f("selectType")(e.tableExplainData.select_type)))])])])]),e._v(" "),E("div",{staticClass:"level-item -level-down has-text-centered"},[E("div",{attrs:{title:""}},[E("p",{staticClass:"heading"},[e._v("Type")]),e._v(" "),E("p",[E("span",{staticClass:"title is-4"},[e._v(e._s(e.tableExplainData.type))]),e._v(" "),E("span",{staticClass:"subtitle is-small is-7"},[e._v(e._s(e._f("joinType")(e.tableExplainData.type)))])])])]),e._v(" "),E("div",{staticClass:"level-item -level-down has-text-centered"},[E("div",{attrs:{title:""}},[E("p",{staticClass:"heading"},[e._v("Possible keys")]),e._v(" "),E("p",{staticClass:"title is-4"},[e._v(e._s(e.tableExplainData.possible_keys))])])]),e._v(" "),E("div",{staticClass:"level-item has-text-centered"},[E("div",{attrs:{title:""}},[E("p",{staticClass:"heading"},[e._v("Key used")]),e._v(" "),E("p",{staticClass:"title is-4"},[e._v(e._s(e.tableExplainData.key))])])]),e._v(" "),E("div",{staticClass:"level-item has-text-centered"},[E("div",{attrs:{title:""}},[E("p",{staticClass:"heading"},[e._v("Key length")]),e._v(" "),E("p",{staticClass:"title is-4"},[e._v(e._s(e.tableExplainData.key_len))])])]),e._v(" "),E("div",{staticClass:"level-item has-text-centered"},[E("div",{attrs:{title:""}},[E("p",{staticClass:"heading"},[e._v("Rows")]),e._v(" "),E("p",{staticClass:"title is-4"},[e._v(e._s(e.tableExplainData.rows))])])]),e._v(" "),E("div",{staticClass:"level-item has-text-centered"},[E("div",{attrs:{title:""}},[E("p",{staticClass:"heading"},[e._v("Filtered")]),e._v(" "),E("p",{staticClass:"title is-4"},[e._v(e._s(e.tableExplainData.filtered))])])])])])}),[],!1,null,null,null).exports},props:{timeKey:{},sessionKey:{},time:{},sql:{}},data:function(){return{explainParts:[],active:!1,loading:!1}},methods:{loadExplainParts:function(){var e,E,t,T=this;this.loading=!0,(e=this.sessionKey,E=this.time,t=this.timeKey,fetch("/query-adviser/api/session/".concat(e,"/query/").concat(E,"/").concat(t,"/explain")).then((function(e){return e.json()}))).then((function(e){var E;T.loading=!1,T.explainParts=null!==(E=null==e?void 0:e.queryParts)&&void 0!==E?E:[]}))},hide:function(){this.$router.push({name:this.$route.matched[0].name})}},beforeRouteEnter:function(e,E,t){t((function(e){e.loadExplainParts()}))},mounted:function(){var e=this;window.EventBus.$on("show-explain-dialog",(function(E){e.time=E.time,e.timeKey=E.timeKey,e.sessionId=E.sessionId,e.loadExplainParts(),e.$nextTick().then((function(){e.active=!0}))}))}};const AI={props:{timeKey:{},time:{},sessionKey:{},sql:{}},data:function(){return{active:!1,result:[]}},methods:{getQuery:function(){var e,E,t,T=this;(e=this.sessionKey,E=this.time,t=this.timeKey,fetch("/query-adviser/api/session/".concat(e,"/query/").concat(E,"/").concat(t,"/exec")).then((function(e){return e.json()}))).then((function(e){T.loading=!1,T.result=e}))},hide:function(){this.$router.push({name:this.$route.matched[0].name})}},beforeRouteEnter:function(e,E,t){t((function(e){e.getQuery()}))}};const aI=[{path:"/query-adviser/session/:sessionKey/query/:time/:timeKey/explain",name:"session-query-explain",components:{dialog:qR(iI,(function(){var e=this,E=e._self._c;return E("div",{class:["modal","is-active"]},[E("div",{staticClass:"modal-background"}),e._v(" "),E("div",{staticClass:"modal-card"},[E("header",{staticClass:"modal-card-head"},[E("p",{staticClass:"modal-card-title"},[e._v("SQL - explain")]),e._v(" "),E("button",{staticClass:"delete",attrs:{"aria-label":"close"},on:{click:e.hide}})]),e._v(" "),E("section",{staticClass:"modal-card-body"},[e.loading?E("div",{staticClass:"button is-primary is-large is-loading"}):e._e(),e._v(" "),e._l(e.explainParts,(function(e,t){return E("explain-part",{key:t,attrs:{"table-explain-data":e}})}))],2)])])}),[],!1,null,null,null).exports},props:{dialog:function(e){return e.params}}},{path:"/query-adviser/session/:sessionKey/query/:time/:timeKey/execute",name:"session-query-execute",components:{dialog:qR(AI,(function(){var e=this,E=e._self._c;return E("div",{class:["modal","is-active"]},[E("div",{staticClass:"modal-background"}),e._v(" "),E("div",{staticClass:"modal-card"},[E("header",{staticClass:"modal-card-head"},[E("p",{staticClass:"modal-card-title"},[e._v("Sql execute")]),e._v(" "),E("button",{staticClass:"delete",attrs:{"aria-label":"close"},on:{click:e.hide}})]),e._v(" "),E("section",{staticClass:"modal-card-body"},[E("nav",{staticClass:"panel"},[E("h2",{staticClass:"panel-heading has-primary-background"},[e._v("\n                    Query\n                ")]),e._v(" "),E("pre",{ref:"sqlcode",staticClass:"textarea"},[e._v(e._s(e.sql))])]),e._v(" "),E("nav",{staticClass:"panel"},[E("h2",{staticClass:"panel-heading has-primary-background"},[e._v("\n                    Results\n                ")]),e._v(" "),e.result.length>0?E("div",{staticClass:"table-container"},[E("table",{staticClass:"table is-fullwidth"},[E("thead",[E("tr",e._l(Object.keys(e.result[0]),(function(t){return E("th",[e._v(e._s(t))])})),0)]),e._v(" "),E("tbody",e._l(e.result,(function(t){return E("tr",e._l(t,(function(t){return E("td",[e._v(e._s(t))])})),0)})),0)])]):e._e()])])])])}),[],!1,null,null,null).exports},props:{dialog:function(e){return e.params}}}];const oI={data:function(){return{loading:!0}},beforeRouteEnter:function(e,E,t){t((function(e){Oi(E.params.sessionKey).then((function(){e.$router.push({name:E.name,params:E.params})}))}))}};function SI(e,E){(null==E||E>e.length)&&(E=e.length);for(var t=0,T=new Array(E);t<E;t++)T[t]=e[t];return T}const II={path:"/query-adviser/session/:sessionKey",name:"session",components:{default:sI},meta:{permission:1},props:{default:function(e){return e.params}},children:[{path:"order-menu",name:"session-order-menu",components:{sidePanelLeft:RI}},{path:"download",name:"download-session",components:{dialog:qR(oI,(function(){var e=this,E=e._self._c;return E("div",{class:["modal","is-active"]},[E("div",{staticClass:"modal-background"}),e._v(" "),E("div",{staticClass:"modal-card"},[e._m(0),e._v(" "),E("section",{staticClass:"modal-card-body"},[e.loading?E("div",{staticClass:"button is-primary is-large is-loading"}):e._e()])])])}),[function(){var e=this._self._c;return e("header",{staticClass:"modal-card-head"},[e("p",{staticClass:"modal-card-title"},[this._v("Download Session")])])}],!1,null,null,null).exports}},{path:"clear",name:"session-clear"}].concat((OI=aI,function(e){if(Array.isArray(e))return SI(e)}(OI)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(OI)||function(e,E){if(e){if("string"==typeof e)return SI(e,E);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?SI(e,E):void 0}}(OI)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()))};var OI;function NI(e,E){for(var t in E)e[t]=E[t];return e}var LI=/[!'()*]/g,_I=function(e){return"%"+e.charCodeAt(0).toString(16)},CI=/%2C/g,lI=function(e){return encodeURIComponent(e).replace(LI,_I).replace(CI,",")};function cI(e){try{return decodeURIComponent(e)}catch(e){0}return e}var uI=function(e){return null==e||"object"==typeof e?e:String(e)};function pI(e){var E={};return(e=e.trim().replace(/^(\?|#|&)/,""))?(e.split("&").forEach((function(e){var t=e.replace(/\+/g," ").split("="),T=cI(t.shift()),r=t.length>0?cI(t.join("=")):null;void 0===E[T]?E[T]=r:Array.isArray(E[T])?E[T].push(r):E[T]=[E[T],r]})),E):E}function DI(e){var E=e?Object.keys(e).map((function(E){var t=e[E];if(void 0===t)return"";if(null===t)return lI(E);if(Array.isArray(t)){var T=[];return t.forEach((function(e){void 0!==e&&(null===e?T.push(lI(E)):T.push(lI(E)+"="+lI(e)))})),T.join("&")}return lI(E)+"="+lI(t)})).filter((function(e){return e.length>0})).join("&"):null;return E?"?"+E:""}var PI=/\/?$/;function dI(e,E,t,T){var r=T&&T.options.stringifyQuery,n=E.query||{};try{n=fI(n)}catch(e){}var s={name:E.name||e&&e.name,meta:e&&e.meta||{},path:E.path||"/",hash:E.hash||"",query:n,params:E.params||{},fullPath:hI(E,r),matched:e?UI(e):[]};return t&&(s.redirectedFrom=hI(t,r)),Object.freeze(s)}function fI(e){if(Array.isArray(e))return e.map(fI);if(e&&"object"==typeof e){var E={};for(var t in e)E[t]=fI(e[t]);return E}return e}var MI=dI(null,{path:"/"});function UI(e){for(var E=[];e;)E.unshift(e),e=e.parent;return E}function hI(e,E){var t=e.path,T=e.query;void 0===T&&(T={});var r=e.hash;return void 0===r&&(r=""),(t||"/")+(E||DI)(T)+r}function vI(e,E,t){return E===MI?e===E:!!E&&(e.path&&E.path?e.path.replace(PI,"")===E.path.replace(PI,"")&&(t||e.hash===E.hash&&mI(e.query,E.query)):!(!e.name||!E.name)&&(e.name===E.name&&(t||e.hash===E.hash&&mI(e.query,E.query)&&mI(e.params,E.params))))}function mI(e,E){if(void 0===e&&(e={}),void 0===E&&(E={}),!e||!E)return e===E;var t=Object.keys(e).sort(),T=Object.keys(E).sort();return t.length===T.length&&t.every((function(t,r){var n=e[t];if(T[r]!==t)return!1;var s=E[t];return null==n||null==s?n===s:"object"==typeof n&&"object"==typeof s?mI(n,s):String(n)===String(s)}))}function GI(e){for(var E=0;E<e.matched.length;E++){var t=e.matched[E];for(var T in t.instances){var r=t.instances[T],n=t.enteredCbs[T];if(r&&n){delete t.enteredCbs[T];for(var s=0;s<n.length;s++)r._isBeingDestroyed||n[s](r)}}}}var yI={name:"RouterView",functional:!0,props:{name:{type:String,default:"default"}},render:function(e,E){var t=E.props,T=E.children,r=E.parent,n=E.data;n.routerView=!0;for(var s=r.$createElement,R=t.name,i=r.$route,A=r._routerViewCache||(r._routerViewCache={}),a=0,o=!1;r&&r._routerRoot!==r;){var S=r.$vnode?r.$vnode.data:{};S.routerView&&a++,S.keepAlive&&r._directInactive&&r._inactive&&(o=!0),r=r.$parent}if(n.routerViewDepth=a,o){var I=A[R],O=I&&I.component;return O?(I.configProps&&HI(O,n,I.route,I.configProps),s(O,n,T)):s()}var N=i.matched[a],L=N&&N.components[R];if(!N||!L)return A[R]=null,s();A[R]={component:L},n.registerRouteInstance=function(e,E){var t=N.instances[R];(E&&t!==e||!E&&t===e)&&(N.instances[R]=E)},(n.hook||(n.hook={})).prepatch=function(e,E){N.instances[R]=E.componentInstance},n.hook.init=function(e){e.data.keepAlive&&e.componentInstance&&e.componentInstance!==N.instances[R]&&(N.instances[R]=e.componentInstance),GI(i)};var _=N.props&&N.props[R];return _&&(NI(A[R],{route:i,configProps:_}),HI(L,n,i,_)),s(L,n,T)}};function HI(e,E,t,T){var r=E.props=function(e,E){switch(typeof E){case"undefined":return;case"object":return E;case"function":return E(e);case"boolean":return E?e.params:void 0}}(t,T);if(r){r=E.props=NI({},r);var n=E.attrs=E.attrs||{};for(var s in r)e.props&&s in e.props||(n[s]=r[s],delete r[s])}}function gI(e,E,t){var T=e.charAt(0);if("/"===T)return e;if("?"===T||"#"===T)return E+e;var r=E.split("/");t&&r[r.length-1]||r.pop();for(var n=e.replace(/^\//,"").split("/"),s=0;s<n.length;s++){var R=n[s];".."===R?r.pop():"."!==R&&r.push(R)}return""!==r[0]&&r.unshift(""),r.join("/")}function BI(e){return e.replace(/\/(?:\s*\/)+/g,"/")}var FI=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)},YI=zI,bI=XI,VI=function(e,E){return $I(XI(e,E),E)},WI=$I,xI=jI,QI=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function XI(e,E){for(var t,T=[],r=0,n=0,s="",R=E&&E.delimiter||"/";null!=(t=QI.exec(e));){var i=t[0],A=t[1],a=t.index;if(s+=e.slice(n,a),n=a+i.length,A)s+=A[1];else{var o=e[n],S=t[2],I=t[3],O=t[4],N=t[5],L=t[6],_=t[7];s&&(T.push(s),s="");var C=null!=S&&null!=o&&o!==S,l="+"===L||"*"===L,c="?"===L||"*"===L,u=t[2]||R,p=O||N;T.push({name:I||r++,prefix:S||"",delimiter:u,optional:c,repeat:l,partial:C,asterisk:!!_,pattern:p?JI(p):_?".*":"[^"+kI(u)+"]+?"})}}return n<e.length&&(s+=e.substr(n)),s&&T.push(s),T}function wI(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function KI(e){return encodeURI(e).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function $I(e,E){for(var t=new Array(e.length),T=0;T<e.length;T++)"object"==typeof e[T]&&(t[T]=new RegExp("^(?:"+e[T].pattern+")$",qI(E)));return function(E,T){for(var r="",n=E||{},s=(T||{}).pretty?wI:encodeURIComponent,R=0;R<e.length;R++){var i=e[R];if("string"!=typeof i){var A,a=n[i.name];if(null==a){if(i.optional){i.partial&&(r+=i.prefix);continue}throw new TypeError('Expected "'+i.name+'" to be defined')}if(FI(a)){if(!i.repeat)throw new TypeError('Expected "'+i.name+'" to not repeat, but received `'+JSON.stringify(a)+"`");if(0===a.length){if(i.optional)continue;throw new TypeError('Expected "'+i.name+'" to not be empty')}for(var o=0;o<a.length;o++){if(A=s(a[o]),!t[R].test(A))throw new TypeError('Expected all "'+i.name+'" to match "'+i.pattern+'", but received `'+JSON.stringify(A)+"`");r+=(0===o?i.prefix:i.delimiter)+A}}else{if(A=i.asterisk?KI(a):s(a),!t[R].test(A))throw new TypeError('Expected "'+i.name+'" to match "'+i.pattern+'", but received "'+A+'"');r+=i.prefix+A}}else r+=i}return r}}function kI(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function JI(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function ZI(e,E){return e.keys=E,e}function qI(e){return e&&e.sensitive?"":"i"}function jI(e,E,t){FI(E)||(t=E||t,E=[]);for(var T=(t=t||{}).strict,r=!1!==t.end,n="",s=0;s<e.length;s++){var R=e[s];if("string"==typeof R)n+=kI(R);else{var i=kI(R.prefix),A="(?:"+R.pattern+")";E.push(R),R.repeat&&(A+="(?:"+i+A+")*"),n+=A=R.optional?R.partial?i+"("+A+")?":"(?:"+i+"("+A+"))?":i+"("+A+")"}}var a=kI(t.delimiter||"/"),o=n.slice(-a.length)===a;return T||(n=(o?n.slice(0,-a.length):n)+"(?:"+a+"(?=$))?"),n+=r?"$":T&&o?"":"(?="+a+"|$)",ZI(new RegExp("^"+n,qI(t)),E)}function zI(e,E,t){return FI(E)||(t=E||t,E=[]),t=t||{},e instanceof RegExp?function(e,E){var t=e.source.match(/\((?!\?)/g);if(t)for(var T=0;T<t.length;T++)E.push({name:T,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return ZI(e,E)}(e,E):FI(e)?function(e,E,t){for(var T=[],r=0;r<e.length;r++)T.push(zI(e[r],E,t).source);return ZI(new RegExp("(?:"+T.join("|")+")",qI(t)),E)}(e,E,t):function(e,E,t){return jI(XI(e,t),E,t)}(e,E,t)}YI.parse=bI,YI.compile=VI,YI.tokensToFunction=WI,YI.tokensToRegExp=xI;var eO=Object.create(null);function EO(e,E,t){E=E||{};try{var T=eO[e]||(eO[e]=YI.compile(e));return"string"==typeof E.pathMatch&&(E[0]=E.pathMatch),T(E,{pretty:!0})}catch(e){return""}finally{delete E[0]}}function tO(e,E,t,T){var r="string"==typeof e?{path:e}:e;if(r._normalized)return r;if(r.name){var n=(r=NI({},e)).params;return n&&"object"==typeof n&&(r.params=NI({},n)),r}if(!r.path&&r.params&&E){(r=NI({},r))._normalized=!0;var s=NI(NI({},E.params),r.params);if(E.name)r.name=E.name,r.params=s;else if(E.matched.length){var R=E.matched[E.matched.length-1].path;r.path=EO(R,s,E.path)}else 0;return r}var i=function(e){var E="",t="",T=e.indexOf("#");T>=0&&(E=e.slice(T),e=e.slice(0,T));var r=e.indexOf("?");return r>=0&&(t=e.slice(r+1),e=e.slice(0,r)),{path:e,query:t,hash:E}}(r.path||""),A=E&&E.path||"/",a=i.path?gI(i.path,A,t||r.append):A,o=function(e,E,t){void 0===E&&(E={});var T,r=t||pI;try{T=r(e||"")}catch(e){T={}}for(var n in E){var s=E[n];T[n]=Array.isArray(s)?s.map(uI):uI(s)}return T}(i.query,r.query,T&&T.options.parseQuery),S=r.hash||i.hash;return S&&"#"!==S.charAt(0)&&(S="#"+S),{_normalized:!0,path:a,query:o,hash:S}}var TO,rO=function(){},nO={name:"RouterLink",props:{to:{type:[String,Object],required:!0},tag:{type:String,default:"a"},custom:Boolean,exact:Boolean,exactPath:Boolean,append:Boolean,replace:Boolean,activeClass:String,exactActiveClass:String,ariaCurrentValue:{type:String,default:"page"},event:{type:[String,Array],default:"click"}},render:function(e){var E=this,t=this.$router,T=this.$route,r=t.resolve(this.to,T,this.append),n=r.location,s=r.route,R=r.href,i={},A=t.options.linkActiveClass,a=t.options.linkExactActiveClass,o=null==A?"router-link-active":A,S=null==a?"router-link-exact-active":a,I=null==this.activeClass?o:this.activeClass,O=null==this.exactActiveClass?S:this.exactActiveClass,N=s.redirectedFrom?dI(null,tO(s.redirectedFrom),null,t):s;i[O]=vI(T,N,this.exactPath),i[I]=this.exact||this.exactPath?i[O]:function(e,E){return 0===e.path.replace(PI,"/").indexOf(E.path.replace(PI,"/"))&&(!E.hash||e.hash===E.hash)&&function(e,E){for(var t in E)if(!(t in e))return!1;return!0}(e.query,E.query)}(T,N);var L=i[O]?this.ariaCurrentValue:null,_=function(e){sO(e)&&(E.replace?t.replace(n,rO):t.push(n,rO))},C={click:sO};Array.isArray(this.event)?this.event.forEach((function(e){C[e]=_})):C[this.event]=_;var l={class:i},c=!this.$scopedSlots.$hasNormal&&this.$scopedSlots.default&&this.$scopedSlots.default({href:R,route:s,navigate:_,isActive:i[I],isExactActive:i[O]});if(c){if(1===c.length)return c[0];if(c.length>1||!c.length)return 0===c.length?e():e("span",{},c)}if("a"===this.tag)l.on=C,l.attrs={href:R,"aria-current":L};else{var u=RO(this.$slots.default);if(u){u.isStatic=!1;var p=u.data=NI({},u.data);for(var D in p.on=p.on||{},p.on){var P=p.on[D];D in C&&(p.on[D]=Array.isArray(P)?P:[P])}for(var d in C)d in p.on?p.on[d].push(C[d]):p.on[d]=_;var f=u.data.attrs=NI({},u.data.attrs);f.href=R,f["aria-current"]=L}else l.on=C}return e(this.tag,l,this.$slots.default)}};function sO(e){if(!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey||e.defaultPrevented||void 0!==e.button&&0!==e.button)){if(e.currentTarget&&e.currentTarget.getAttribute){var E=e.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(E))return}return e.preventDefault&&e.preventDefault(),!0}}function RO(e){if(e)for(var E,t=0;t<e.length;t++){if("a"===(E=e[t]).tag)return E;if(E.children&&(E=RO(E.children)))return E}}var iO="undefined"!=typeof window;function AO(e,E,t,T,r){var n=E||[],s=t||Object.create(null),R=T||Object.create(null);e.forEach((function(e){aO(n,s,R,e,r)}));for(var i=0,A=n.length;i<A;i++)"*"===n[i]&&(n.push(n.splice(i,1)[0]),A--,i--);return{pathList:n,pathMap:s,nameMap:R}}function aO(e,E,t,T,r,n){var s=T.path,R=T.name;var i=T.pathToRegexpOptions||{},A=function(e,E,t){t||(e=e.replace(/\/$/,""));if("/"===e[0])return e;if(null==E)return e;return BI(E.path+"/"+e)}(s,r,i.strict);"boolean"==typeof T.caseSensitive&&(i.sensitive=T.caseSensitive);var a={path:A,regex:oO(A,i),components:T.components||{default:T.component},alias:T.alias?"string"==typeof T.alias?[T.alias]:T.alias:[],instances:{},enteredCbs:{},name:R,parent:r,matchAs:n,redirect:T.redirect,beforeEnter:T.beforeEnter,meta:T.meta||{},props:null==T.props?{}:T.components?T.props:{default:T.props}};if(T.children&&T.children.forEach((function(T){var r=n?BI(n+"/"+T.path):void 0;aO(e,E,t,T,a,r)})),E[a.path]||(e.push(a.path),E[a.path]=a),void 0!==T.alias)for(var o=Array.isArray(T.alias)?T.alias:[T.alias],S=0;S<o.length;++S){0;var I={path:o[S],children:T.children};aO(e,E,t,I,r,a.path||"/")}R&&(t[R]||(t[R]=a))}function oO(e,E){return YI(e,[],E)}function SO(e,E){var t=AO(e),T=t.pathList,r=t.pathMap,n=t.nameMap;function s(e,t,s){var R=tO(e,t,!1,E),A=R.name;if(A){var a=n[A];if(!a)return i(null,R);var o=a.regex.keys.filter((function(e){return!e.optional})).map((function(e){return e.name}));if("object"!=typeof R.params&&(R.params={}),t&&"object"==typeof t.params)for(var S in t.params)!(S in R.params)&&o.indexOf(S)>-1&&(R.params[S]=t.params[S]);return R.path=EO(a.path,R.params),i(a,R,s)}if(R.path){R.params={};for(var I=0;I<T.length;I++){var O=T[I],N=r[O];if(IO(N.regex,R.path,R.params))return i(N,R,s)}}return i(null,R)}function R(e,t){var T=e.redirect,r="function"==typeof T?T(dI(e,t,null,E)):T;if("string"==typeof r&&(r={path:r}),!r||"object"!=typeof r)return i(null,t);var R=r,A=R.name,a=R.path,o=t.query,S=t.hash,I=t.params;if(o=R.hasOwnProperty("query")?R.query:o,S=R.hasOwnProperty("hash")?R.hash:S,I=R.hasOwnProperty("params")?R.params:I,A){n[A];return s({_normalized:!0,name:A,query:o,hash:S,params:I},void 0,t)}if(a){var O=function(e,E){return gI(e,E.parent?E.parent.path:"/",!0)}(a,e);return s({_normalized:!0,path:EO(O,I),query:o,hash:S},void 0,t)}return i(null,t)}function i(e,t,T){return e&&e.redirect?R(e,T||t):e&&e.matchAs?function(e,E,t){var T=s({_normalized:!0,path:EO(t,E.params)});if(T){var r=T.matched,n=r[r.length-1];return E.params=T.params,i(n,E)}return i(null,E)}(0,t,e.matchAs):dI(e,t,T,E)}return{match:s,addRoute:function(e,E){var t="object"!=typeof e?n[e]:void 0;AO([E||e],T,r,n,t),t&&t.alias.length&&AO(t.alias.map((function(e){return{path:e,children:[E]}})),T,r,n,t)},getRoutes:function(){return T.map((function(e){return r[e]}))},addRoutes:function(e){AO(e,T,r,n)}}}function IO(e,E,t){var T=E.match(e);if(!T)return!1;if(!t)return!0;for(var r=1,n=T.length;r<n;++r){var s=e.keys[r-1];s&&(t[s.name||"pathMatch"]="string"==typeof T[r]?cI(T[r]):T[r])}return!0}var OO=iO&&window.performance&&window.performance.now?window.performance:Date;function NO(){return OO.now().toFixed(3)}var LO=NO();function _O(){return LO}function CO(e){return LO=e}var lO=Object.create(null);function cO(){"scrollRestoration"in window.history&&(window.history.scrollRestoration="manual");var e=window.location.protocol+"//"+window.location.host,E=window.location.href.replace(e,""),t=NI({},window.history.state);return t.key=_O(),window.history.replaceState(t,"",E),window.addEventListener("popstate",DO),function(){window.removeEventListener("popstate",DO)}}function uO(e,E,t,T){if(e.app){var r=e.options.scrollBehavior;r&&e.app.$nextTick((function(){var n=function(){var e=_O();if(e)return lO[e]}(),s=r.call(e,E,t,T?n:null);s&&("function"==typeof s.then?s.then((function(e){UO(e,n)})).catch((function(e){0})):UO(s,n))}))}}function pO(){var e=_O();e&&(lO[e]={x:window.pageXOffset,y:window.pageYOffset})}function DO(e){pO(),e.state&&e.state.key&&CO(e.state.key)}function PO(e){return fO(e.x)||fO(e.y)}function dO(e){return{x:fO(e.x)?e.x:window.pageXOffset,y:fO(e.y)?e.y:window.pageYOffset}}function fO(e){return"number"==typeof e}var MO=/^#\d/;function UO(e,E){var t,T="object"==typeof e;if(T&&"string"==typeof e.selector){var r=MO.test(e.selector)?document.getElementById(e.selector.slice(1)):document.querySelector(e.selector);if(r){var n=e.offset&&"object"==typeof e.offset?e.offset:{};E=function(e,E){var t=document.documentElement.getBoundingClientRect(),T=e.getBoundingClientRect();return{x:T.left-t.left-E.x,y:T.top-t.top-E.y}}(r,n={x:fO((t=n).x)?t.x:0,y:fO(t.y)?t.y:0})}else PO(e)&&(E=dO(e))}else T&&PO(e)&&(E=dO(e));E&&("scrollBehavior"in document.documentElement.style?window.scrollTo({left:E.x,top:E.y,behavior:e.behavior}):window.scrollTo(E.x,E.y))}var hO,vO=iO&&((-1===(hO=window.navigator.userAgent).indexOf("Android 2.")&&-1===hO.indexOf("Android 4.0")||-1===hO.indexOf("Mobile Safari")||-1!==hO.indexOf("Chrome")||-1!==hO.indexOf("Windows Phone"))&&window.history&&"function"==typeof window.history.pushState);function mO(e,E){pO();var t=window.history;try{if(E){var T=NI({},t.state);T.key=_O(),t.replaceState(T,"",e)}else t.pushState({key:CO(NO())},"",e)}catch(t){window.location[E?"replace":"assign"](e)}}function GO(e){mO(e,!0)}var yO={redirected:2,aborted:4,cancelled:8,duplicated:16};function HO(e,E){return BO(e,E,yO.redirected,'Redirected when going from "'+e.fullPath+'" to "'+function(e){if("string"==typeof e)return e;if("path"in e)return e.path;var E={};return FO.forEach((function(t){t in e&&(E[t]=e[t])})),JSON.stringify(E,null,2)}(E)+'" via a navigation guard.')}function gO(e,E){return BO(e,E,yO.cancelled,'Navigation cancelled from "'+e.fullPath+'" to "'+E.fullPath+'" with a new navigation.')}function BO(e,E,t,T){var r=new Error(T);return r._isRouter=!0,r.from=e,r.to=E,r.type=t,r}var FO=["params","query","hash"];function YO(e){return Object.prototype.toString.call(e).indexOf("Error")>-1}function bO(e,E){return YO(e)&&e._isRouter&&(null==E||e.type===E)}function VO(e,E,t){var T=function(r){r>=e.length?t():e[r]?E(e[r],(function(){T(r+1)})):T(r+1)};T(0)}function WO(e){return function(E,t,T){var r=!1,n=0,s=null;xO(e,(function(e,E,t,R){if("function"==typeof e&&void 0===e.cid){r=!0,n++;var i,A=wO((function(E){var r;((r=E).__esModule||XO&&"Module"===r[Symbol.toStringTag])&&(E=E.default),e.resolved="function"==typeof E?E:TO.extend(E),t.components[R]=E,--n<=0&&T()})),a=wO((function(e){var E="Failed to resolve async component "+R+": "+e;s||(s=YO(e)?e:new Error(E),T(s))}));try{i=e(A,a)}catch(e){a(e)}if(i)if("function"==typeof i.then)i.then(A,a);else{var o=i.component;o&&"function"==typeof o.then&&o.then(A,a)}}})),r||T()}}function xO(e,E){return QO(e.map((function(e){return Object.keys(e.components).map((function(t){return E(e.components[t],e.instances[t],e,t)}))})))}function QO(e){return Array.prototype.concat.apply([],e)}var XO="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;function wO(e){var E=!1;return function(){for(var t=[],T=arguments.length;T--;)t[T]=arguments[T];if(!E)return E=!0,e.apply(this,t)}}var KO=function(e,E){this.router=e,this.base=function(e){if(!e)if(iO){var E=document.querySelector("base");e=(e=E&&E.getAttribute("href")||"/").replace(/^https?:\/\/[^\/]+/,"")}else e="/";"/"!==e.charAt(0)&&(e="/"+e);return e.replace(/\/$/,"")}(E),this.current=MI,this.pending=null,this.ready=!1,this.readyCbs=[],this.readyErrorCbs=[],this.errorCbs=[],this.listeners=[]};function $O(e,E,t,T){var r=xO(e,(function(e,T,r,n){var s=function(e,E){"function"!=typeof e&&(e=TO.extend(e));return e.options[E]}(e,E);if(s)return Array.isArray(s)?s.map((function(e){return t(e,T,r,n)})):t(s,T,r,n)}));return QO(T?r.reverse():r)}function kO(e,E){if(E)return function(){return e.apply(E,arguments)}}KO.prototype.listen=function(e){this.cb=e},KO.prototype.onReady=function(e,E){this.ready?e():(this.readyCbs.push(e),E&&this.readyErrorCbs.push(E))},KO.prototype.onError=function(e){this.errorCbs.push(e)},KO.prototype.transitionTo=function(e,E,t){var T,r=this;try{T=this.router.match(e,this.current)}catch(e){throw this.errorCbs.forEach((function(E){E(e)})),e}var n=this.current;this.confirmTransition(T,(function(){r.updateRoute(T),E&&E(T),r.ensureURL(),r.router.afterHooks.forEach((function(e){e&&e(T,n)})),r.ready||(r.ready=!0,r.readyCbs.forEach((function(e){e(T)})))}),(function(e){t&&t(e),e&&!r.ready&&(bO(e,yO.redirected)&&n===MI||(r.ready=!0,r.readyErrorCbs.forEach((function(E){E(e)}))))}))},KO.prototype.confirmTransition=function(e,E,t){var T=this,r=this.current;this.pending=e;var n,s,R=function(e){!bO(e)&&YO(e)&&(T.errorCbs.length?T.errorCbs.forEach((function(E){E(e)})):console.error(e)),t&&t(e)},i=e.matched.length-1,A=r.matched.length-1;if(vI(e,r)&&i===A&&e.matched[i]===r.matched[A])return this.ensureURL(),e.hash&&uO(this.router,r,e,!1),R(((s=BO(n=r,e,yO.duplicated,'Avoided redundant navigation to current location: "'+n.fullPath+'".')).name="NavigationDuplicated",s));var a=function(e,E){var t,T=Math.max(e.length,E.length);for(t=0;t<T&&e[t]===E[t];t++);return{updated:E.slice(0,t),activated:E.slice(t),deactivated:e.slice(t)}}(this.current.matched,e.matched),o=a.updated,S=a.deactivated,I=a.activated,O=[].concat(function(e){return $O(e,"beforeRouteLeave",kO,!0)}(S),this.router.beforeHooks,function(e){return $O(e,"beforeRouteUpdate",kO)}(o),I.map((function(e){return e.beforeEnter})),WO(I)),N=function(E,t){if(T.pending!==e)return R(gO(r,e));try{E(e,r,(function(E){!1===E?(T.ensureURL(!0),R(function(e,E){return BO(e,E,yO.aborted,'Navigation aborted from "'+e.fullPath+'" to "'+E.fullPath+'" via a navigation guard.')}(r,e))):YO(E)?(T.ensureURL(!0),R(E)):"string"==typeof E||"object"==typeof E&&("string"==typeof E.path||"string"==typeof E.name)?(R(HO(r,e)),"object"==typeof E&&E.replace?T.replace(E):T.push(E)):t(E)}))}catch(e){R(e)}};VO(O,N,(function(){var t=function(e){return $O(e,"beforeRouteEnter",(function(e,E,t,T){return function(e,E,t){return function(T,r,n){return e(T,r,(function(e){"function"==typeof e&&(E.enteredCbs[t]||(E.enteredCbs[t]=[]),E.enteredCbs[t].push(e)),n(e)}))}}(e,t,T)}))}(I);VO(t.concat(T.router.resolveHooks),N,(function(){if(T.pending!==e)return R(gO(r,e));T.pending=null,E(e),T.router.app&&T.router.app.$nextTick((function(){GI(e)}))}))}))},KO.prototype.updateRoute=function(e){this.current=e,this.cb&&this.cb(e)},KO.prototype.setupListeners=function(){},KO.prototype.teardown=function(){this.listeners.forEach((function(e){e()})),this.listeners=[],this.current=MI,this.pending=null};var JO=function(e){function E(E,t){e.call(this,E,t),this._startLocation=ZO(this.base)}return e&&(E.__proto__=e),E.prototype=Object.create(e&&e.prototype),E.prototype.constructor=E,E.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var E=this.router,t=E.options.scrollBehavior,T=vO&&t;T&&this.listeners.push(cO());var r=function(){var t=e.current,r=ZO(e.base);e.current===MI&&r===e._startLocation||e.transitionTo(r,(function(e){T&&uO(E,e,t,!0)}))};window.addEventListener("popstate",r),this.listeners.push((function(){window.removeEventListener("popstate",r)}))}},E.prototype.go=function(e){window.history.go(e)},E.prototype.push=function(e,E,t){var T=this,r=this.current;this.transitionTo(e,(function(e){mO(BI(T.base+e.fullPath)),uO(T.router,e,r,!1),E&&E(e)}),t)},E.prototype.replace=function(e,E,t){var T=this,r=this.current;this.transitionTo(e,(function(e){GO(BI(T.base+e.fullPath)),uO(T.router,e,r,!1),E&&E(e)}),t)},E.prototype.ensureURL=function(e){if(ZO(this.base)!==this.current.fullPath){var E=BI(this.base+this.current.fullPath);e?mO(E):GO(E)}},E.prototype.getCurrentLocation=function(){return ZO(this.base)},E}(KO);function ZO(e){var E=window.location.pathname,t=E.toLowerCase(),T=e.toLowerCase();return!e||t!==T&&0!==t.indexOf(BI(T+"/"))||(E=E.slice(e.length)),(E||"/")+window.location.search+window.location.hash}var qO=function(e){function E(E,t,T){e.call(this,E,t),T&&function(e){var E=ZO(e);if(!/^\/#/.test(E))return window.location.replace(BI(e+"/#"+E)),!0}(this.base)||jO()}return e&&(E.__proto__=e),E.prototype=Object.create(e&&e.prototype),E.prototype.constructor=E,E.prototype.setupListeners=function(){var e=this;if(!(this.listeners.length>0)){var E=this.router.options.scrollBehavior,t=vO&&E;t&&this.listeners.push(cO());var T=function(){var E=e.current;jO()&&e.transitionTo(zO(),(function(T){t&&uO(e.router,T,E,!0),vO||tN(T.fullPath)}))},r=vO?"popstate":"hashchange";window.addEventListener(r,T),this.listeners.push((function(){window.removeEventListener(r,T)}))}},E.prototype.push=function(e,E,t){var T=this,r=this.current;this.transitionTo(e,(function(e){EN(e.fullPath),uO(T.router,e,r,!1),E&&E(e)}),t)},E.prototype.replace=function(e,E,t){var T=this,r=this.current;this.transitionTo(e,(function(e){tN(e.fullPath),uO(T.router,e,r,!1),E&&E(e)}),t)},E.prototype.go=function(e){window.history.go(e)},E.prototype.ensureURL=function(e){var E=this.current.fullPath;zO()!==E&&(e?EN(E):tN(E))},E.prototype.getCurrentLocation=function(){return zO()},E}(KO);function jO(){var e=zO();return"/"===e.charAt(0)||(tN("/"+e),!1)}function zO(){var e=window.location.href,E=e.indexOf("#");return E<0?"":e=e.slice(E+1)}function eN(e){var E=window.location.href,t=E.indexOf("#");return(t>=0?E.slice(0,t):E)+"#"+e}function EN(e){vO?mO(eN(e)):window.location.hash=e}function tN(e){vO?GO(eN(e)):window.location.replace(eN(e))}var TN=function(e){function E(E,t){e.call(this,E,t),this.stack=[],this.index=-1}return e&&(E.__proto__=e),E.prototype=Object.create(e&&e.prototype),E.prototype.constructor=E,E.prototype.push=function(e,E,t){var T=this;this.transitionTo(e,(function(e){T.stack=T.stack.slice(0,T.index+1).concat(e),T.index++,E&&E(e)}),t)},E.prototype.replace=function(e,E,t){var T=this;this.transitionTo(e,(function(e){T.stack=T.stack.slice(0,T.index).concat(e),E&&E(e)}),t)},E.prototype.go=function(e){var E=this,t=this.index+e;if(!(t<0||t>=this.stack.length)){var T=this.stack[t];this.confirmTransition(T,(function(){var e=E.current;E.index=t,E.updateRoute(T),E.router.afterHooks.forEach((function(E){E&&E(T,e)}))}),(function(e){bO(e,yO.duplicated)&&(E.index=t)}))}},E.prototype.getCurrentLocation=function(){var e=this.stack[this.stack.length-1];return e?e.fullPath:"/"},E.prototype.ensureURL=function(){},E}(KO),rN=function(e){void 0===e&&(e={}),this.app=null,this.apps=[],this.options=e,this.beforeHooks=[],this.resolveHooks=[],this.afterHooks=[],this.matcher=SO(e.routes||[],this);var E=e.mode||"hash";switch(this.fallback="history"===E&&!vO&&!1!==e.fallback,this.fallback&&(E="hash"),iO||(E="abstract"),this.mode=E,E){case"history":this.history=new JO(this,e.base);break;case"hash":this.history=new qO(this,e.base,this.fallback);break;case"abstract":this.history=new TN(this,e.base)}},nN={currentRoute:{configurable:!0}};rN.prototype.match=function(e,E,t){return this.matcher.match(e,E,t)},nN.currentRoute.get=function(){return this.history&&this.history.current},rN.prototype.init=function(e){var E=this;if(this.apps.push(e),e.$once("hook:destroyed",(function(){var t=E.apps.indexOf(e);t>-1&&E.apps.splice(t,1),E.app===e&&(E.app=E.apps[0]||null),E.app||E.history.teardown()})),!this.app){this.app=e;var t=this.history;if(t instanceof JO||t instanceof qO){var T=function(e){t.setupListeners(),function(e){var T=t.current,r=E.options.scrollBehavior;vO&&r&&"fullPath"in e&&uO(E,e,T,!1)}(e)};t.transitionTo(t.getCurrentLocation(),T,T)}t.listen((function(e){E.apps.forEach((function(E){E._route=e}))}))}},rN.prototype.beforeEach=function(e){return RN(this.beforeHooks,e)},rN.prototype.beforeResolve=function(e){return RN(this.resolveHooks,e)},rN.prototype.afterEach=function(e){return RN(this.afterHooks,e)},rN.prototype.onReady=function(e,E){this.history.onReady(e,E)},rN.prototype.onError=function(e){this.history.onError(e)},rN.prototype.push=function(e,E,t){var T=this;if(!E&&!t&&"undefined"!=typeof Promise)return new Promise((function(E,t){T.history.push(e,E,t)}));this.history.push(e,E,t)},rN.prototype.replace=function(e,E,t){var T=this;if(!E&&!t&&"undefined"!=typeof Promise)return new Promise((function(E,t){T.history.replace(e,E,t)}));this.history.replace(e,E,t)},rN.prototype.go=function(e){this.history.go(e)},rN.prototype.back=function(){this.go(-1)},rN.prototype.forward=function(){this.go(1)},rN.prototype.getMatchedComponents=function(e){var E=e?e.matched?e:this.resolve(e).route:this.currentRoute;return E?[].concat.apply([],E.matched.map((function(e){return Object.keys(e.components).map((function(E){return e.components[E]}))}))):[]},rN.prototype.resolve=function(e,E,t){var T=tO(e,E=E||this.history.current,t,this),r=this.match(T,E),n=r.redirectedFrom||r.fullPath,s=function(e,E,t){var T="hash"===t?"#"+E:E;return e?BI(e+"/"+T):T}(this.history.base,n,this.mode);return{location:T,route:r,href:s,normalizedTo:T,resolved:r}},rN.prototype.getRoutes=function(){return this.matcher.getRoutes()},rN.prototype.addRoute=function(e,E){this.matcher.addRoute(e,E),this.history.current!==MI&&this.history.transitionTo(this.history.getCurrentLocation())},rN.prototype.addRoutes=function(e){this.matcher.addRoutes(e),this.history.current!==MI&&this.history.transitionTo(this.history.getCurrentLocation())},Object.defineProperties(rN.prototype,nN);var sN=rN;function RN(e,E){return e.push(E),function(){var t=e.indexOf(E);t>-1&&e.splice(t,1)}}rN.install=function e(E){if(!e.installed||TO!==E){e.installed=!0,TO=E;var t=function(e){return void 0!==e},T=function(e,E){var T=e.$options._parentVnode;t(T)&&t(T=T.data)&&t(T=T.registerRouteInstance)&&T(e,E)};E.mixin({beforeCreate:function(){t(this.$options.router)?(this._routerRoot=this,this._router=this.$options.router,this._router.init(this),E.util.defineReactive(this,"_route",this._router.history.current)):this._routerRoot=this.$parent&&this.$parent._routerRoot||this,T(this,this)},destroyed:function(){T(this)}}),Object.defineProperty(E.prototype,"$router",{get:function(){return this._routerRoot._router}}),Object.defineProperty(E.prototype,"$route",{get:function(){return this._routerRoot._route}}),E.component("RouterView",yI),E.component("RouterLink",nO);var r=E.config.optionMergeStrategies;r.beforeRouteEnter=r.beforeRouteLeave=r.beforeRouteUpdate=r.created}},rN.version="3.6.5",rN.isNavigationFailure=bO,rN.NavigationFailureType=yO,rN.START_LOCATION=MI,iO&&window.Vue&&window.Vue.use(rN);var iN=[II,{path:"/query-adviser/",name:"sessions",component:ci,meta:{permission:1},children:[{path:"#export",name:"session-export",components:{},beforeRouteEnter:function(e,E,t){t()}},{path:"#import",name:"session-import",components:{dialog:ui},beforeRouteEnter:function(e,E,t){t()}}]}];zt.use(sN);const AN=new sN({mode:"history",routes:iN});window.Vue=zt,window.EventBus=new zt,zt.use(ZR()),zt.component("ViewLayout",ai),window.App=new zt({el:"#app",router:AN})},92:(e,E,t)=>{"use strict";t.d(E,{Z:()=>n});var T=t(645),r=t.n(T)()((function(e){return e[1]}));r.push([e.id,".sql-hl{background:#000;display:block;padding:0}.sql-hl.light-mode{filter:invert(100%)}.sql-hl pre{background:#000;display:block}.sql-hl pre .sql-hl-bracket{color:rgba(150,239,233,.9);font-weight:700}.sql-hl pre .sql-hl-function{color:rgba(255,150,0,.9);font-style:italic;text-transform:uppercase}.sql-hl pre .sql-hl-string{color:rgba(0,220,40,.9)}.sql-hl pre .sql-hl-special{color:rgba(213,213,0,.9)}.sql-hl pre .sql-hl-keyword{color:rgba(255,150,0,.9);text-transform:uppercase}.sql-hl pre .sql-hl-number{color:rgba(0,120,220,.9)}",""]);const n=r},447:(e,E,t)=>{"use strict";t.d(E,{Z:()=>n});var T=t(645),r=t.n(T)()((function(e){return e[1]}));r.push([e.id,".datagrid,.datagrid table{min-width:100vw}.datagrid thead tr{border-bottom:1px solid #333}.datagrid td,.datagrid th{padding:4px 8px}.datagrid td .main-row{display:flex;flex-direction:column}.datagrid tr.queries,.datagrid tr:hover{background:hsla(0,0%,63%,.9)}.datagrid .button svg{height:20px;transition:all .3s;width:20px}.datagrid .button:hover svg{transform:scale(2)}.datagrid .queries td{padding:0}.datagrid .queries td table{border-left:4px solid #3ab89d;border-spacing:0;margin-left:4px;min-width:100%;text-align:left}",""]);const n=r},133:(e,E,t)=>{"use strict";t.d(E,{Z:()=>n});var T=t(645),r=t.n(T)()((function(e){return e[1]}));r.push([e.id,".main-column{align-content:stretch;align-items:stretch;border-left:4px solid #3ab89d;display:flex;flex-direction:row;flex-wrap:nowrap;margin-left:10px;min-width:100vw}.main-column .code{background:#000;border-bottom:4px solid hsla(0,0%,91%,.7);flex:1;max-width:50vw;min-width:50vw}.main-column .options{align-content:stretch;align-items:stretch;flex:0;min-height:40px;min-width:36px}.main-column .options .buttons{height:192px;margin-left:-10px;overflow:hidden;width:64px;z-index:1}.main-column header{background:rgba(0,184,156,.9);border-bottom:4px solid hsla(0,0%,91%,.7);color:rgba(33,33,33,.8);font-size:28px;padding:4px 10px;text-decoration:none}.main-column .information{border-bottom:4px solid hsla(0,0%,91%,.7);flex:1;font-size:20px;font-weight:700;vertical-align:center}.main-column .information .container-info{align-content:stretch;align-items:stretch;display:flex;flex-direction:row;justify-content:flex-start;margin:0 0 0 -20px;text-decoration:underline}.main-column .information .container-info:first-child{width:40px}.main-column .information .container-info:nth-child(2){width:25vw}.main-column .information .container-info .column{display:flex;flex-direction:column;margin:0;padding:0}.main-column .information .container-info .column .item{margin:10px;padding:5px 10px}.main-column .information .container-info .column svg.item{background:hsla(0,0%,78%,.9);border:3px solid rgba(33,33,33,.9);border-radius:30px;height:60px;transition:all .3s;width:60px}.main-column .information .container-info .column svg.item:hover{background:hsla(0,0%,87%,.9);border:1px solid rgba(66,66,66,.9);transform:scale(1.5)}.main-column .information .container-info .column div.item{height:60px;line-height:46px;overflow:hidden;text-overflow:ellipsis;vertical-align:middle;white-space:nowrap}.group-action svg{height:14px;transition:all .3s;width:14px}.group-action.arrow-open svg{transform:rotate(90deg)}",""]);const n=r},242:(e,E,t)=>{"use strict";t.d(E,{Z:()=>n});var T=t(645),r=t.n(T)()((function(e){return e[1]}));r.push([e.id,".laravel-query-adviser .button{font-weight:700}.laravel-query-adviser .button.is-text{text-decoration:none}",""]);const n=r},711:(e,E,t)=>{"use strict";t.d(E,{Z:()=>n});var T=t(645),r=t.n(T)()((function(e){return e[1]}));r.push([e.id,".step-item .step-marker:hover{cursor:pointer}",""]);const n=r},274:(e,E,t)=>{"use strict";t.d(E,{Z:()=>n});var T=t(645),r=t.n(T)()((function(e){return e[1]}));r.push([e.id,"svg[data-v-e7d5b9e8]{display:none}",""]);const n=r},645:e=>{"use strict";e.exports=function(e){var E=[];return E.toString=function(){return this.map((function(E){var t=e(E);return E[2]?"@media ".concat(E[2]," {").concat(t,"}"):t})).join("")},E.i=function(e,t,T){"string"==typeof e&&(e=[[null,e,""]]);var r={};if(T)for(var n=0;n<this.length;n++){var s=this[n][0];null!=s&&(r[s]=!0)}for(var R=0;R<e.length;R++){var i=[].concat(e[R]);T&&r[i[0]]||(t&&(i[2]?i[2]="".concat(t," and ").concat(i[2]):i[2]=t),E.push(i))}},E}},700:()=>{},654:function(e){var E,t;E=this,t=function(){function e(E,t,T){return this.id=++e.highestId,this.name=E,this.symbols=t,this.postprocess=T,this}function E(e,E,t,T){this.rule=e,this.dot=E,this.reference=t,this.data=[],this.wantedBy=T,this.isComplete=this.dot===e.symbols.length}function t(e,E){this.grammar=e,this.index=E,this.states=[],this.wants={},this.scannable=[],this.completed={}}function T(e,E){this.rules=e,this.start=E||this.rules[0].name;var t=this.byName={};this.rules.forEach((function(e){t.hasOwnProperty(e.name)||(t[e.name]=[]),t[e.name].push(e)}))}function r(){this.reset("")}function n(e,E,n){if(e instanceof T){var s=e;n=E}else s=T.fromCompiled(e,E);for(var R in this.grammar=s,this.options={keepHistory:!1,lexer:s.lexer||new r},n||{})this.options[R]=n[R];this.lexer=this.options.lexer,this.lexerState=void 0;var i=new t(s,0);this.table=[i],i.wants[s.start]=[],i.predict(s.start),i.process(),this.current=0}function s(e){var E=typeof e;if("string"===E)return e;if("object"===E){if(e.literal)return JSON.stringify(e.literal);if(e instanceof RegExp)return e.toString();if(e.type)return"%"+e.type;if(e.test)return"<"+String(e.test)+">";throw new Error("Unknown symbol type: "+e)}}return e.highestId=0,e.prototype.toString=function(e){var E=void 0===e?this.symbols.map(s).join(" "):this.symbols.slice(0,e).map(s).join(" ")+" ● "+this.symbols.slice(e).map(s).join(" ");return this.name+" → "+E},E.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},E.prototype.nextState=function(e){var t=new E(this.rule,this.dot+1,this.reference,this.wantedBy);return t.left=this,t.right=e,t.isComplete&&(t.data=t.build(),t.right=void 0),t},E.prototype.build=function(){var e=[],E=this;do{e.push(E.right.data),E=E.left}while(E.left);return e.reverse(),e},E.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,n.fail))},t.prototype.process=function(e){for(var E=this.states,t=this.wants,T=this.completed,r=0;r<E.length;r++){var s=E[r];if(s.isComplete){if(s.finish(),s.data!==n.fail){for(var R=s.wantedBy,i=R.length;i--;){var A=R[i];this.complete(A,s)}if(s.reference===this.index){var a=s.rule.name;(this.completed[a]=this.completed[a]||[]).push(s)}}}else{if("string"!=typeof(a=s.rule.symbols[s.dot])){this.scannable.push(s);continue}if(t[a]){if(t[a].push(s),T.hasOwnProperty(a)){var o=T[a];for(i=0;i<o.length;i++){var S=o[i];this.complete(s,S)}}}else t[a]=[s],this.predict(a)}}},t.prototype.predict=function(e){for(var t=this.grammar.byName[e]||[],T=0;T<t.length;T++){var r=t[T],n=this.wants[e],s=new E(r,0,this.index,n);this.states.push(s)}},t.prototype.complete=function(e,E){var t=e.nextState(E);this.states.push(t)},T.fromCompiled=function(E,t){var r=E.Lexer;E.ParserStart&&(t=E.ParserStart,E=E.ParserRules);var n=new T(E=E.map((function(E){return new e(E.name,E.symbols,E.postprocess)})),t);return n.lexer=r,n},r.prototype.reset=function(e,E){this.buffer=e,this.index=0,this.line=E?E.line:1,this.lastLineBreak=E?-E.col:0},r.prototype.next=function(){if(this.index<this.buffer.length){var e=this.buffer[this.index++];return"\n"===e&&(this.line+=1,this.lastLineBreak=this.index),{value:e}}},r.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},r.prototype.formatError=function(e,E){var t=this.buffer;if("string"==typeof t){var T=t.split("\n").slice(Math.max(0,this.line-5),this.line),r=t.indexOf("\n",this.index);-1===r&&(r=t.length);var n=this.index-this.lastLineBreak,s=String(this.line).length;return E+=" at line "+this.line+" col "+n+":\n\n",E+=T.map((function(e,E){return R(this.line-T.length+E+1,s)+" "+e}),this).join("\n"),E+="\n"+R("",s+n)+"^\n"}return E+" at index "+(this.index-1);function R(e,E){var t=String(e);return Array(E-t.length+1).join(" ")+t}},n.fail={},n.prototype.feed=function(e){var E,T=this.lexer;for(T.reset(e,this.lexerState);;){try{if(!(E=T.next()))break}catch(e){var n=new t(this.grammar,this.current+1);throw this.table.push(n),(i=new Error(this.reportLexerError(e))).offset=this.current,i.token=e.token,i}var s=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var R=this.current+1;n=new t(this.grammar,R),this.table.push(n);for(var i,A=void 0!==E.text?E.text:E.value,a=T.constructor===r?E.value:E,o=s.scannable,S=o.length;S--;){var I=o[S],O=I.rule.symbols[I.dot];if(O.test?O.test(a):O.type?O.type===E.type:O.literal===A){var N=I.nextState({data:a,token:E,isToken:!0,reference:R-1});n.states.push(N)}}if(n.process(),0===n.states.length)throw(i=new Error(this.reportError(E))).offset=this.current,i.token=E,i;this.options.keepHistory&&(s.lexerState=T.save()),this.current++}return s&&(this.lexerState=T.save()),this.results=this.finish(),this},n.prototype.reportLexerError=function(e){var E,t,T=e.token;return T?(E="input "+JSON.stringify(T.text[0])+" (lexer error)",t=this.lexer.formatError(T,"Syntax error")):(E="input (lexer error)",t=e.message),this.reportErrorCommon(t,E)},n.prototype.reportError=function(e){var E=(e.type?e.type+" token: ":"")+JSON.stringify(void 0!==e.value?e.value:e),t=this.lexer.formatError(e,"Syntax error");return this.reportErrorCommon(t,E)},n.prototype.reportErrorCommon=function(e,E){var t=[];t.push(e);var T=this.table.length-2,r=this.table[T],n=r.states.filter((function(e){var E=e.rule.symbols[e.dot];return E&&"string"!=typeof E}));return 0===n.length?(t.push("Unexpected "+E+". I did not expect any more input. Here is the state of my parse table:\n"),this.displayStateStack(r.states,t)):(t.push("Unexpected "+E+". Instead, I was expecting to see one of the following:\n"),n.map((function(e){return this.buildFirstStateStack(e,[])||[e]}),this).forEach((function(e){var E=e[0],T=E.rule.symbols[E.dot],r=this.getSymbolDisplay(T);t.push("A "+r+" based on:"),this.displayStateStack(e,t)}),this)),t.push(""),t.join("\n")},n.prototype.displayStateStack=function(e,E){for(var t,T=0,r=0;r<e.length;r++){var n=e[r],s=n.rule.toString(n.dot);s===t?T++:(T>0&&E.push("    ^ "+T+" more lines identical to this"),T=0,E.push("    "+s)),t=s}},n.prototype.getSymbolDisplay=function(e){return function(e){var E=typeof e;if("string"===E)return e;if("object"===E){if(e.literal)return JSON.stringify(e.literal);if(e instanceof RegExp)return"character matching "+e;if(e.type)return e.type+" token";if(e.test)return"token matching "+String(e.test);throw new Error("Unknown symbol type: "+e)}}(e)},n.prototype.buildFirstStateStack=function(e,E){if(-1!==E.indexOf(e))return null;if(0===e.wantedBy.length)return[e];var t=e.wantedBy[0],T=[e].concat(E),r=this.buildFirstStateStack(t,T);return null===r?null:[e].concat(r)},n.prototype.save=function(){var e=this.table[this.current];return e.lexerState=this.lexerState,e},n.prototype.restore=function(e){var E=e.index;this.current=E,this.table[E]=e,this.table.splice(E+1),this.lexerState=e.lexerState,this.results=this.finish()},n.prototype.rewind=function(e){if(!this.options.keepHistory)throw new Error("set option `keepHistory` to enable rewinding");this.restore(this.table[e])},n.prototype.finish=function(){var e=[],E=this.grammar.start;return this.table[this.table.length-1].states.forEach((function(t){t.rule.name===E&&t.dot===t.rule.symbols.length&&0===t.reference&&t.data!==n.fail&&e.push(t)})),e.map((function(e){return e.data}))},{Parser:n,Grammar:T,Rule:e}},e.exports?e.exports=t():E.nearley=t()},586:(e,E,t)=>{"use strict";const T=t(540),r={html:!1,classPrefix:"sql-hl-",colors:{keyword:"[35m",function:"[31m",number:"[32m",string:"[32m",special:"[33m",bracket:"[33m",clear:"[0m"}},n="default",s=[{name:"keyword",group:1,regex:new RegExp(`(^|[^a-zA-Z_])(${T.join("|")})(?=[^a-zA-Z_]|$)`,"gi")},{name:"special",regex:/(=|!=|%|\/|\*|-|,|;|:|\+|<|>)/g},{name:"function",regex:/(\w+?)\(/g,trimEnd:1},{name:"number",regex:/((?<![a-zA-z])\d+(?:\.\d+)?)/g},{name:"string",regex:/(['](?:\\'|.)*?[']|["](?:\\"|.)*?["]|[`](?:\\`|.)*?[`])/g},{name:"bracket",regex:/([()])/g}];function R(e){const E=[];for(const t of s){let T;for(;T=t.regex.exec(e);){let e=T[0],r=0;if(t.group){e=T[t.group+1];for(let e=1;e<=t.group;e++)r+=T[e].length}const n=t.trimEnd?e.substring(0,e.length-t.trimEnd):e;E.push({name:t.name,start:T.index+r,length:n.length})}}const t=E.slice().sort(((e,E)=>e.start-E.start)),T=[];let r=0;for(let E=0;E<t.length;E++)t[E].start<r||(t[E].start>r&&T.push({name:n,content:e.substring(r,t[E].start)}),T.push({name:t[E].name,content:e.substring(t[E].start,t[E].start+t[E].length)}),r=t[E].start+t[E].length);return r<e.length-1&&T.push({name:n,content:e.substring(r,r+e.length+1)}),T}e.exports={getSegments:R,highlight:function(e,E){return E=Object.assign({},r,E),R(e).map((({name:e,content:t})=>e===n?t:E.html?`<span class="${E.classPrefix}${e}">${t}</span>`:E.colors[e]+t+E.colors.clear)).join("")}}},540:e=>{e.exports=["ADD","ADD CONSTRAINT","ALTER","ALTER COLUMN","ALTER TABLE","ALL","AND","ANY","AS","ASC","BACKUP DATABASE","BETWEEN","CASE","CHECK","COLUMN","CONSTRAINT","CREATE","CREATE DATABASE","CREATE INDEX","CREATE OR REPLACE VIEW","CREATE TABLE","CREATE PROCEDURE","CREATE UNIQUE INDEX","CREATE VIEW","DATABASE","DEFAULT","DELETE","DESC","DISTINCT","DROP","DROP COLUMN","DROP CONSTRAINT","DROP DATABASE","DROP DEFAULT","DROP INDEX","DROP TABLE","DROP VIEW","EXEC","EXISTS","FOREIGN KEY","FROM","FULL OUTER JOIN","GROUP BY","HAVING","IN","INDEX","INNER JOIN","INSERT INTO","INSERT INTO SELECT","IS NULL","IS NOT NULL","JOIN","LEFT JOIN","LIKE","LIMIT","NOT","NOT NULL","OR","ORDER BY","OUTER JOIN","PRIMARY KEY","PROCEDURE","RIGHT JOIN","ROWNUM","SELECT","SELECT DISTINCT","SELECT INTO","SELECT TOP","SET","TABLE","TOP","TRUNCATE TABLE","UNION","UNION ALL","UNIQUE","UPDATE","VALUES","VIEW","WHERE","PRAGMA","INTEGER","PRIMARY","CHAR","DATETIME","DECIMAL","BINARY","TIMESTAMP","VARCHAR","VARBINARY","TINYBLOB","TINYTEXT","BLOB","LONGTEXT","NULL","REFERENCES","INDEX_LIST","BY","CURRENT_DATE","CURRENT_TIME","EACH","ELSE","ELSEIF","FALSE","FOR","GROUP","IF","IFNULL","INSERT","INTERVAL","INTO","IS","KEY","KEYS","LEFT","MATCH","ON","OPTION","ORDER","OUT","OUTER","REPLACE","TINYINT","RIGHT","LEADING","TRAILING","THEN","TO","TRUE","WHEN","WITH","UNSIGNED","CASCADE","ENGINE","TEXT","AUTO_INCREMENT","SHOW","BEGIN","END","PRINT","OVERLAPS"]},379:(e,E,t)=>{"use strict";var T,r=function(){return void 0===T&&(T=Boolean(window&&document&&document.all&&!window.atob)),T},n=function(){var e={};return function(E){if(void 0===e[E]){var t=document.querySelector(E);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}e[E]=t}return e[E]}}(),s=[];function R(e){for(var E=-1,t=0;t<s.length;t++)if(s[t].identifier===e){E=t;break}return E}function i(e,E){for(var t={},T=[],r=0;r<e.length;r++){var n=e[r],i=E.base?n[0]+E.base:n[0],A=t[i]||0,a="".concat(i," ").concat(A);t[i]=A+1;var o=R(a),S={css:n[1],media:n[2],sourceMap:n[3]};-1!==o?(s[o].references++,s[o].updater(S)):s.push({identifier:a,updater:L(S,E),references:1}),T.push(a)}return T}function A(e){var E=document.createElement("style"),T=e.attributes||{};if(void 0===T.nonce){var r=t.nc;r&&(T.nonce=r)}if(Object.keys(T).forEach((function(e){E.setAttribute(e,T[e])})),"function"==typeof e.insert)e.insert(E);else{var s=n(e.insert||"head");if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(E)}return E}var a,o=(a=[],function(e,E){return a[e]=E,a.filter(Boolean).join("\n")});function S(e,E,t,T){var r=t?"":T.media?"@media ".concat(T.media," {").concat(T.css,"}"):T.css;if(e.styleSheet)e.styleSheet.cssText=o(E,r);else{var n=document.createTextNode(r),s=e.childNodes;s[E]&&e.removeChild(s[E]),s.length?e.insertBefore(n,s[E]):e.appendChild(n)}}function I(e,E,t){var T=t.css,r=t.media,n=t.sourceMap;if(r?e.setAttribute("media",r):e.removeAttribute("media"),n&&"undefined"!=typeof btoa&&(T+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(n))))," */")),e.styleSheet)e.styleSheet.cssText=T;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(T))}}var O=null,N=0;function L(e,E){var t,T,r;if(E.singleton){var n=N++;t=O||(O=A(E)),T=S.bind(null,t,n,!1),r=S.bind(null,t,n,!0)}else t=A(E),T=I.bind(null,t,E),r=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)};return T(e),function(E){if(E){if(E.css===e.css&&E.media===e.media&&E.sourceMap===e.sourceMap)return;T(e=E)}else r()}}e.exports=function(e,E){(E=E||{}).singleton||"boolean"==typeof E.singleton||(E.singleton=r());var t=i(e=e||[],E);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var T=0;T<t.length;T++){var r=R(t[T]);s[r].references--}for(var n=i(e,E),A=0;A<t.length;A++){var a=R(t[A]);0===s[a].references&&(s[a].updater(),s.splice(a,1))}t=n}}}},906:function(e){e.exports=function(e){function E(T){if(t[T])return t[T].exports;var r=t[T]={i:T,l:!1,exports:{}};return e[T].call(r.exports,r,r.exports,E),r.l=!0,r.exports}var t={};return E.m=e,E.c=t,E.i=function(e){return e},E.d=function(e,t,T){E.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:T})},E.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return E.d(t,"a",t),t},E.o=function(e,E){return Object.prototype.hasOwnProperty.call(e,E)},E.p="/dist/",E(E.s=0)}([function(e,E,t){"use strict";Object.defineProperty(E,"__esModule",{value:!0});var T=function(e){var E=void 0;if("string"!=typeof e)try{E=JSON.stringify(e)}catch(e){throw"Failed to copy value to clipboard. Unknown type."}else E=e;var t=document.createElement("textarea");if(t.value=E,t.setAttribute("readonly",""),t.style.cssText="position:fixed;pointer-events:none;z-index:-9999;opacity:0;",document.body.appendChild(t),navigator.userAgent.match(/ipad|ipod|iphone/i)){t.contentEditable=!0,t.readOnly=!0;var T=document.createRange();T.selectNodeContents(t);var r=window.getSelection();r.removeAllRanges(),r.addRange(T),t.setSelectionRange(0,999999)}else t.select();var n=!1;try{n=document.execCommand("copy")}catch(e){console.warn(e)}return document.body.removeChild(t),n};E.default={install:function(e){e.prototype.$clipboard=T;var E=function(e){return function(){return"$"+e++}}(1),t={},r=function(e){e&&(t[e]=null,delete t[e])},n=function(e){var T=E();return t[T]=e,T};e.directive("clipboard",{bind:function(e,E){var r=E.arg,s=E.value;switch(r){case"error":var R=n(s);return void(e.dataset.clipboardErrorHandler=R);case"success":var i=n(s);return void(e.dataset.clipboardSuccessHandler=i);default:var A=function(r){if(E.hasOwnProperty("value")){var n={value:"function"==typeof s?s():s,event:r},R=T(n.value)?e.dataset.clipboardSuccessHandler:e.dataset.clipboardErrorHandler,i=t[R];i&&i(n)}},a=n(A);return e.dataset.clipboardClickHandler=a,void e.addEventListener("click",t[a])}},unbind:function(e){var E=e.dataset,T=E.clipboardSuccessHandler,n=E.clipboardErrorHandler,s=E.clipboardClickHandler;r(T),r(n),s&&(e.removeEventListener("click",t[s]),r(s))}})}}}])}},t={};function T(e){var r=t[e];if(void 0!==r)return r.exports;var n=t[e]={id:e,exports:{}};return E[e].call(n.exports,n,n.exports,T),n.exports}T.m=E,e=[],T.O=(E,t,r,n)=>{if(!t){var s=1/0;for(a=0;a<e.length;a++){for(var[t,r,n]=e[a],R=!0,i=0;i<t.length;i++)(!1&n||s>=n)&&Object.keys(T.O).every((e=>T.O[e](t[i])))?t.splice(i--,1):(R=!1,n<s&&(s=n));if(R){e.splice(a--,1);var A=r();void 0!==A&&(E=A)}}return E}n=n||0;for(var a=e.length;a>0&&e[a-1][2]>n;a--)e[a]=e[a-1];e[a]=[t,r,n]},T.n=e=>{var E=e&&e.__esModule?()=>e.default:()=>e;return T.d(E,{a:E}),E},T.d=(e,E)=>{for(var t in E)T.o(E,t)&&!T.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:E[t]})},T.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),T.o=(e,E)=>Object.prototype.hasOwnProperty.call(e,E),T.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={773:0,170:0};T.O.j=E=>0===e[E];var E=(E,t)=>{var r,n,[s,R,i]=t,A=0;if(s.some((E=>0!==e[E]))){for(r in R)T.o(R,r)&&(T.m[r]=R[r]);if(i)var a=i(T)}for(E&&E(t);A<s.length;A++)n=s[A],T.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return T.O(a)},t=self.webpackChunk=self.webpackChunk||[];t.forEach(E.bind(null,0)),t.push=E.bind(null,t.push.bind(t))})(),T.nc=void 0,T.O(void 0,[170],(()=>T(299)));var r=T.O(void 0,[170],(()=>T(700)));r=T.O(r)})();